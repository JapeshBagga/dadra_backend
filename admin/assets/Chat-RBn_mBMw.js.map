{"version":3,"file":"Chat-RBn_mBMw.js","sources":["../../src/hooks/useGetAllLiveChat.tsx","../../src/hooks/useGetAllbotUserResponses.tsx","../../src/components/leftSideNavs/chatsLeftSideNav.tsx","../../src/components/layoutElements/supportSideNav.tsx","../../src/pages/chat/Chat.tsx"],"sourcesContent":["import { userSlice } from \"@/redux/User\";\r\nimport { axiosGet } from \"@/services/axiosService\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function useGetAllLiveChats(botCustomIds: string[]) {\r\n  const dispatch = useDispatch();\r\n  return useQuery({\r\n    queryKey: [\"chats\", \"allLiveChats\", { botCustomIds }],\r\n    queryFn: async () => {\r\n      if (!botCustomIds.length) return [];\r\n      const response = await axiosGet(`/users/allLiveChats`, {\r\n        botCustomIds: botCustomIds,\r\n      });\r\n\r\n      const senderIds = response.data.data.map((value: any) => value.senderId);\r\n      dispatch(\r\n        userSlice.actions.setCurrentLiveRoomIds({\r\n          roomIds: senderIds,\r\n          type: \"init\",\r\n        })\r\n      );\r\n\r\n      return response.data.data;\r\n    },\r\n  });\r\n}\r\n","import { axiosGet } from \"@/services/axiosService\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\n\r\nexport default function useGetAllbotUserResponses(botCustomIds: String[]) {\r\n  return useQuery({\r\n    queryKey: [\r\n      \"allBotUserResponses\",\r\n      {\r\n        botCustomIds: botCustomIds,\r\n      },\r\n    ],\r\n    queryFn: async () => {\r\n      const response = await axiosGet(`/users/allBotUserResponses`, {\r\n        botCustomIds: botCustomIds,\r\n      });\r\n\r\n      return response;\r\n    },\r\n      });\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { axiosGet } from \"../../services/axiosService\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { State } from \"../../redux/Types\";\r\nimport { userSlice } from \"../../redux/User\";\r\nimport environment from \"../../constants/Environment\";\r\nimport $ from \"jquery\";\r\nimport SmallLoader from \"../loaders/SmallLoader\";\r\nimport useGetAllBotInOne from \"@/hooks/useGetAllBotInOne\";\r\nimport useGetAllLiveChats from \"@/hooks/useGetAllLiveChat\";\r\nimport useGetAllbotUserResponses from \"@/hooks/useGetAllbotUserResponses\";\r\n\r\nfunction ChatsLeftSideNav({\r\n  liveChatSocket,\r\n  setCurrentDrawFlowId,\r\n}: {\r\n  liveChatSocket: any;\r\n  setCurrentDrawFlowId: any;\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [bot, setBot] = useState<any>([]);\r\n  const [searchBot, setSearchBot] = useState<any>([]);\r\n  // const [userLoad, setUserLoad] = useState<boolean>(true);\r\n  const [loadSpinner, setLoadSpinner] = useState<boolean>(false);\r\n  const [searchInput, setSearchInput] = useState<string>(\"\");\r\n  const userId = useSelector((state: State) => state.user.userId);\r\n  const customId = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.selectedBot\r\n  );\r\n  const chatId = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.selectedChat\r\n  );\r\n  const senderId = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.selectedSenderId\r\n  );\r\n  const liveRoomIds = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.liveRoomIds\r\n  );\r\n\r\n  const [loadedBotCustomIds, setLoadedBotCustomIds] = useState<any[]>([]);\r\n  const [allChats, setAllChats] = useState<any>({\r\n    ongoingLiveChats: [],\r\n    completedChats: [],\r\n  });\r\n\r\n  const getBotInOne = useGetAllBotInOne(\"live\");\r\n  const allLiveChats = useGetAllLiveChats(\r\n    bot.map((value: any) => value.botCustomId)\r\n  );\r\n  const getAllbotUserResponsesQuery = useGetAllbotUserResponses([customId]);\r\n\r\n  useEffect(() => {\r\n    if (getBotInOne.isSuccess) {\r\n      setBot(getBotInOne.data.data.bots);\r\n    }\r\n  }, [userId, getBotInOne.isLoading, getBotInOne.isFetching]);\r\n\r\n  useEffect(() => {\r\n    if (bot.length > 0 && allLiveChats.data) {\r\n      setAllChats((prevChats: any) => ({\r\n        ...prevChats,\r\n        ongoingLiveChats: allLiveChats.data,\r\n      }));\r\n      selectFirstIds(allLiveChats.data);\r\n    }\r\n  }, [bot, allLiveChats.data]);\r\n\r\n  useEffect(() => {\r\n    if (bot.length > 0 && customId && !loadedBotCustomIds.includes(customId)) {\r\n      setLoadSpinner(true);\r\n      if (getAllbotUserResponsesQuery.isSuccess) {\r\n        setLoadSpinner(false);\r\n        setLoadedBotCustomIds((prev: any) => [...prev, customId]);\r\n        setAllChats((prevChats: any) => ({\r\n          ...prevChats,\r\n          completedChats: [\r\n            ...prevChats.completedChats,\r\n            ...getAllbotUserResponsesQuery.data.data.data,\r\n          ],\r\n        }));\r\n        selectFirstIds(getAllbotUserResponsesQuery.data);\r\n      }\r\n    }\r\n  }, [\r\n    bot,\r\n    customId,\r\n    getAllbotUserResponsesQuery.isLoading,\r\n    getAllbotUserResponsesQuery.isSuccess,\r\n  ]);\r\n\r\n  const fetchParticularLiveChat = async (userId: any) => {\r\n    await axiosGet(`/users/particularLiveChat?senderId=${userId}`)\r\n      .then((response) => {\r\n        setAllChats((prevChats: any) => {\r\n          return {\r\n            ...prevChats,\r\n            ongoingLiveChats: [\r\n              response.data.data,\r\n              ...prevChats.ongoingLiveChats,\r\n            ],\r\n          };\r\n        });\r\n\r\n        selectFirstIds(response);\r\n      })\r\n      .catch(() => {\r\n        // setUserLoad(false);\r\n      });\r\n  };\r\n\r\n  const selectFirstIds = (input: any) => {\r\n    if (chatId === \"\") {\r\n      dispatch(\r\n        userSlice.actions.setSelectedChat(\r\n          input.data?.data?.filter(\r\n            (value: any) => value.botCustomId === customId\r\n          )[0]?._id\r\n        )\r\n      );\r\n    }\r\n    if (senderId === \"\") {\r\n      dispatch(\r\n        userSlice.actions.setSelectedSenderId(\r\n          input.data?.data?.filter(\r\n            (value: any) => value.botCustomId === customId\r\n          )[0]?.senderId\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAllChats((prevChats: any) => {\r\n      const endedLiveChat = (prevChats.ongoingLiveChats?.filter((item: any) => {\r\n        return !liveRoomIds.includes(item?.senderId);\r\n      }))[0];\r\n      const newCompletedChats = prevChats.completedChats?.filter(\r\n        (item: any) => item?.senderId !== endedLiveChat?.senderId\r\n      );\r\n\r\n      return {\r\n        ...prevChats,\r\n        completedChats: [endedLiveChat, ...newCompletedChats],\r\n        ongoingLiveChats: prevChats.ongoingLiveChats?.filter((item: any) =>\r\n          liveRoomIds.includes(item?.senderId)\r\n        ),\r\n      };\r\n    });\r\n  }, [liveRoomIds]);\r\n\r\n  useEffect(() => {\r\n    if (liveChatSocket) {\r\n      liveChatSocket.on(\"getRoomData\", ({ roomId, drawFlowId }) => {\r\n        // roomId is senderId in userResponse\r\n        fetchParticularLiveChat(roomId);\r\n        dispatch(\r\n          userSlice.actions.setCurrentLiveRoomIds({\r\n            roomIds: [roomId],\r\n            type: \"append\",\r\n          })\r\n        );\r\n        setCurrentDrawFlowId(drawFlowId);\r\n      });\r\n\r\n      liveChatSocket.on(\"clientEndedLiveChat\", (roomId: string) => {\r\n        setAllChats((prevChats: any) => ({\r\n          ...prevChats,\r\n          completedChats: prevChats.completedChats.find(\r\n            (item: any) => item?.senderId === roomId\r\n          )\r\n            ? [...prevChats.completedChats]\r\n            : [\r\n                ...prevChats.ongoingLiveChats?.filter(\r\n                  (item: any) => item?.senderId === roomId\r\n                ),\r\n                ...prevChats.completedChats,\r\n              ],\r\n        }));\r\n\r\n        dispatch(\r\n          userSlice.actions.setCurrentLiveRoomIds({\r\n            roomIds: [roomId],\r\n            type: \"remove\",\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (liveChatSocket) {\r\n        liveChatSocket.off(\"getRoomData\");\r\n        liveChatSocket.off(\"clientEndedLiveChat\");\r\n        liveChatSocket.disconnect();\r\n      }\r\n    };\r\n  }, [liveChatSocket]);\r\n\r\n  useEffect(() => {\r\n    if (getBotInOne.isLoading || allLiveChats.isLoading) {\r\n      $(\".support-nav\").addClass(\"none\");\r\n      $(\".chat-main-container\").addClass(\"none\");\r\n      $(\".pre-loader\").removeClass(\"none\");\r\n      $(\".vertical-overlay\").addClass(\"none\");\r\n    } else {\r\n      $(\".support-nav\").removeClass(\"none\");\r\n      $(\".chat-main-container\").removeClass(\"none\");\r\n      $(\".pre-loader\").addClass(\"none\");\r\n      $(\".vertical-overlay\").removeClass(\"none\");\r\n    }\r\n    const ele = document.querySelector(\".chats-active\");\r\n    ele?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [getBotInOne.isLoading, allLiveChats.isLoading]);\r\n\r\n  useEffect(() => {\r\n    setSearchBot(\r\n      bot.filter((data: any) =>\r\n        new RegExp(handleRegexReplace(searchInput), \"i\").exec(data.projectName)\r\n      )\r\n    );\r\n  }, [searchInput, bot]);\r\n\r\n  const handleRegexReplace = (value: string) => {\r\n    let result: string = \"\";\r\n    for (const char of value) {\r\n      if (/[\\.\\+\\*\\?\\^\\$\\(\\)\\[\\]\\{\\}\\|\\.\\\\]/.test(char)) result += \"\\\\\" + char;\r\n      else result += char;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const handleBotSearch = (event) => {\r\n    const value = event.target.value;\r\n    setSearchInput(value);\r\n    setBot((prev) => {\r\n      return prev.filter((element) => {\r\n        const temp = element.projectName.match(`/${value}/i`);\r\n        console.log(element.projectName);\r\n        return temp;\r\n      });\r\n    });\r\n  };\r\n\r\n  const setBotId = (botId: String) => {\r\n    dispatch(userSlice.actions.setSelectedBotId(botId));\r\n  };\r\n\r\n  const setCustomId = (customId: String) => {\r\n    dispatch(userSlice.actions.setSelectedBot(customId));\r\n  };\r\n\r\n  const setChatId = (chatId: String) => {\r\n    dispatch(userSlice.actions.setSelectedChat(chatId));\r\n  };\r\n\r\n  const setSenderId = (senderId: String) => {\r\n    dispatch(userSlice.actions.setSelectedSenderId(senderId));\r\n  };\r\n\r\n  if (getBotInOne.isLoading || allLiveChats.isLoading) return;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"chats-inbox\">\r\n        <div className=\"header-inbox fx al-cnt gap-8\">\r\n          <ChatIcon/>\r\n          <h1>Chats</h1>\r\n        </div>\r\n\r\n        <div className=\"imp-ch-ag\">\r\n          <div className=\"imp-ch-ag-title\">\r\n            <h2>{environment().isAI ? \"AI Bots\" : \"Workflows\"}</h2>\r\n          </div>\r\n          <div className={`chat_search ${!bot.length ? \"op-5\" : \"\"}`}>\r\n            <div className=\"search-input-wrapper\">\r\n              <svg\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 12 12\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M4.45714 0C5.63925 0 6.77294 0.46959 7.60882 1.30547C8.4447 2.14134 8.91429 3.27504 8.91429 4.45714C8.91429 5.56114 8.50971 6.576 7.84457 7.35771L8.02971 7.54286H8.57143L12 10.9714L10.9714 12L7.54286 8.57143V8.02971L7.35771 7.84457C6.54895 8.53493 5.52049 8.91422 4.45714 8.91429C3.27504 8.91429 2.14134 8.4447 1.30547 7.60882C0.46959 6.77294 0 5.63925 0 4.45714C0 3.27504 0.46959 2.14134 1.30547 1.30547C2.14134 0.46959 3.27504 0 4.45714 0ZM4.45714 1.37143C2.74286 1.37143 1.37143 2.74286 1.37143 4.45714C1.37143 6.17143 2.74286 7.54286 4.45714 7.54286C6.17143 7.54286 7.54286 6.17143 7.54286 4.45714C7.54286 2.74286 6.17143 1.37143 4.45714 1.37143Z\"\r\n                  fill=\"#666666\"\r\n                  fillOpacity=\"0.5\"\r\n                />\r\n              </svg>\r\n\r\n              <input\r\n                className=\"search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                disabled={!bot.length}\r\n                value={searchInput}\r\n                onChange={(e) => {\r\n                  setSearchInput(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"ggh\">\r\n            <ul\r\n              className={\r\n                searchBot.length == 0\r\n                  ? `inbox-list chatList illus-active ${\r\n                      environment().isAI && bot.length === 0\r\n                        ? \"al-fx-start\"\r\n                        : \"\"\r\n                    }`\r\n                  : \"inbox-list chatList\"\r\n              }\r\n              id=\"on-hover\"\r\n            >\r\n              {searchBot.length === 0 ? (\r\n                <div\r\n                  className={`illustration-chat ${\r\n                    environment().isAI ? \"no-chats-found\" : \"\"\r\n                  } ${environment().isAI && bot.length === 0 ? \"mt-20\" : \"\"}`}\r\n                >\r\n                  {environment().isAI ? (\r\n                    bot.length > 0 ? (\r\n                      <img\r\n                        src=\"https://dlvkyia8i4zmz.cloudfront.net/KaKDjdilS8iD0WxchO0F_no_chats_found.svg\"\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src=\"https://dlvkyia8i4zmz.cloudfront.net/UBheticKQXqix0rmoMdV_Frame_15174.svg\"\r\n                        alt=\"\"\r\n                      />\r\n                    )\r\n                  ) : (\r\n                    <img\r\n                      src=\"https://res.cloudinary.com/dghqyted6/image/upload/v1668597268/Frame_1826_3_s6sh1e.svg\"\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n                  {(!environment().isAI ||\r\n                    (environment().isAI && bot.length !== 0)) && (\r\n                    <h3>No Result Found</h3>\r\n                  )}\r\n                  <div\r\n                    className={`suggestions ${\r\n                      environment().isAI && bot.length === 0\r\n                        ? \"no-chatbots\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    {bot.length > 0 ? (\r\n                      <>\r\n                        <h1>Suggestions</h1>\r\n                        <ul className=\"fx fx-d-col gap-8 no-m\">\r\n                          <li>\r\n                            Make sure that all words are spelled correctly.\r\n                          </li>\r\n                          <li>Try different words.</li>\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <ul className=\"no-m\">\r\n                        <li>\r\n                          {environment().isAI\r\n                            ? \"No bots available\"\r\n                            : \"No Chatbots have been created yet\"}\r\n                        </li>\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                searchBot.map((value: any, index: number) => (\r\n                  <li\r\n                    key={index}\r\n                    className={\r\n                      customId === value.botCustomId ? \"chats-active\" : \"\"\r\n                    }\r\n                  >\r\n                    <div\r\n                      className=\"chat-bot-label\"\r\n                      onClick={() => {\r\n                        customId === value.botCustomId\r\n                          ? (setCustomId(\"\"), setChatId(\"\"))\r\n                          : (setCustomId(value.botCustomId),\r\n                            setChatId(\r\n                              allChats?.completedChats?.find(\r\n                                (userList) =>\r\n                                  userList?.botCustomId === value.botCustomId\r\n                              )?._id || \"\"\r\n                            )),\r\n                          setBotId(value._id),\r\n                          setSenderId(\r\n                            allChats?.completedChats?.find(\r\n                              (userList) =>\r\n                                userList?.botCustomId === value.botCustomId\r\n                            )?.senderId || \"\"\r\n                          );\r\n                      }}\r\n                    >\r\n                      <p>{value.projectName}</p>\r\n                      <svg\r\n                        width=\"12\"\r\n                        height=\"6\"\r\n                        viewBox=\"0 0 12 6\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M12.4609 5.5L6.49503 0.0833325L0.529119 5.5L12.4609 5.5Z\"\r\n                          fill=\"#444444\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n\r\n                    {/* live Users */}\r\n                    {/* <div className=\"inner-chat\">\r\n                      {allChats?.ongoingLiveChats &&\r\n                      allChats?.ongoingLiveChats.filter(\r\n                        (userList: any) =>\r\n                          userList?.botCustomId === value?.botCustomId\r\n                      ).length > 0 ? (\r\n                        allChats?.ongoingLiveChats\r\n                          .filter(\r\n                            (userList) =>\r\n                              userList?.botCustomId === value.botCustomId\r\n                          )\r\n                          .map((visitor, index) => (\r\n                            <div\r\n                              className=\"chat-bots-content\"\r\n                              key={index}\r\n                              onClick={() => {\r\n                                setChatId(visitor._id);\r\n                                setSenderId(visitor.senderId);\r\n                                setCurrentDrawFlowId((prev: string) =>\r\n                                  prev\r\n                                    ? prev\r\n                                    : visitor.userAnswers?.slice(-1)[0]\r\n                                        .drawFlowId\r\n                                );\r\n                                document\r\n                                  .querySelector(\".chat-main-container\")\r\n                                  ?.classList.add(\"open\");\r\n                              }}\r\n                            >\r\n                              <div\r\n                                className={\r\n                                  visitor._id == chatId\r\n                                    ? \"bot-profile active\"\r\n                                    : \"bot-profile\"\r\n                                }\r\n                              >\r\n                                <div className=\"profile_img\">L</div>\r\n                                <div className=\"profile-details\">\r\n                                  <div className=\"profile-label\">\r\n                                    <h4>\r\n                                      {visitor?.userCredential?.email ||\r\n                                        visitor?.userCredential?.phone ||\r\n                                        visitor?.userCredential?.name ||\r\n                                        `Live#${visitor.userCredential?.id}`}\r\n                                    </h4>\r\n                                  </div>\r\n                                  <div className=\"profile-text\">\r\n                                    <p>{visitor.userAnswers[0]?.nodeTitle}</p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                      ) : (\r\n                        <div className=\"chat-bots-content\">\r\n                          <div className=\"profile-details\">\r\n                            <div className=\"profile-label\">\r\n                              <h4>No Live Users Currently</h4>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div> */}\r\n\r\n                    {/* Finished Chats */}\r\n                    <div className=\"inner-chat\">\r\n                      {!loadSpinner ? (\r\n                        allChats?.completedChats &&\r\n                        allChats?.completedChats.filter(\r\n                          (userList) =>\r\n                            userList?.botCustomId === value.botCustomId &&\r\n                            userList.from !== \"segments\"\r\n                        ).length > 0 ? (\r\n                          allChats?.completedChats\r\n                            .filter((userList) => {\r\n                              const ongoingLiveChatSenderIds =\r\n                                allChats?.ongoingLiveChats?.map(\r\n                                  (item: any) => item?.senderId\r\n                                );\r\n                              if (\r\n                                userList?.botCustomId === value.botCustomId &&\r\n                                !ongoingLiveChatSenderIds?.includes(\r\n                                  userList.senderId\r\n                                )\r\n                              ) {\r\n                                return true;\r\n                              }\r\n                            })\r\n                            .map((visitor, index) => (\r\n                              <div\r\n                                className=\"chat-bots-content\"\r\n                                key={index}\r\n                                onClick={() => {\r\n                                  setChatId(visitor._id);\r\n                                  setSenderId(visitor.senderId);\r\n                                  document\r\n                                    .querySelector(\".chat-main-container\")\r\n                                    ?.classList.add(\"open\");\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  className={\r\n                                    visitor._id == chatId\r\n                                      ? \"bot-profile active\"\r\n                                      : \"bot-profile\"\r\n                                  }\r\n                                >\r\n                                  <div className=\"profile_img\">V</div>\r\n                                  <div className=\"profile-details\">\r\n                                    <div className=\"profile-label\">\r\n                                      <h4>\r\n                                        {visitor?.userCredential?.email ||\r\n                                          visitor?.userCredential?.phone ||\r\n                                          visitor?.userCredential?.name ||\r\n                                          `Visitor#${visitor.userCredential?.id}`}\r\n                                      </h4>\r\n                                    </div>\r\n                                    <div className=\"profile-text\">\r\n                                      <p>{visitor.userAnswers[0]?.nodeTitle}</p>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                        ) : (\r\n                          <div className=\"chat-bots-content\">\r\n                            <div className=\"profile-details\">\r\n                              <div className=\"profile-label\">\r\n                                <h4>No Data found</h4>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      ) : (\r\n                        <div className=\"chat-bots-content\">\r\n                          <div className=\"profile-details\">\r\n                            <div className=\"profile-label\">\r\n                              <SmallLoader />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ChatsLeftSideNav;\r\n\r\n\r\nconst ChatIcon = () => (\r\n  <svg\r\n    width={20}\r\n    height={20}\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <g clipPath=\"url(#clip0_46_20343)\">\r\n      <path\r\n        d=\"M24.0002 11.247C23.8555 8.90702 23.0293 6.66051 21.6233 4.78442C20.2174 2.90834 18.2932 1.48469 16.0879 0.688994C13.8826 -0.106704 11.4927 -0.239667 9.21271 0.306495C6.93277 0.852657 4.86249 2.05407 3.2571 3.76262C1.65171 5.47117 0.581393 7.61216 0.178094 9.92166C-0.225205 12.2312 0.0561486 14.6082 0.987468 16.7597C1.91879 18.9112 3.45936 20.7432 5.41926 22.0298C7.37916 23.3163 9.67271 24.0012 12.0172 24H19.0002C20.3258 23.9987 21.5968 23.4715 22.5342 22.5341C23.4716 21.5967 23.9988 20.3257 24.0002 19V11.247ZM22.0002 19C22.0002 19.7957 21.6841 20.5587 21.1215 21.1213C20.5589 21.6839 19.7958 22 19.0002 22H12.0172C10.6061 21.9994 9.211 21.7013 7.92285 21.1253C6.6347 20.5493 5.48243 19.7082 4.54115 18.657C3.59533 17.6063 2.88508 16.3655 2.45805 15.0178C2.03101 13.6701 1.89705 12.2467 2.06515 10.843C2.33059 8.62894 3.32534 6.56619 4.89259 4.97992C6.45985 3.39366 8.51045 2.37411 10.7212 2.082C11.1524 2.02795 11.5865 2.00056 12.0212 2C14.3516 1.99364 16.61 2.8079 18.4002 4.3C19.4457 5.16894 20.3039 6.24115 20.9227 7.45163C21.5415 8.66211 21.9081 9.98564 22.0002 11.342V19Z\"\r\n        fill=\"#444444\"\r\n      />\r\n      <path\r\n        d=\"M8 9H12C12.2652 9 12.5196 8.89464 12.7071 8.70711C12.8946 8.51957 13 8.26522 13 8C13 7.73478 12.8946 7.48043 12.7071 7.29289C12.5196 7.10536 12.2652 7 12 7H8C7.73478 7 7.48043 7.10536 7.29289 7.29289C7.10536 7.48043 7 7.73478 7 8C7 8.26522 7.10536 8.51957 7.29289 8.70711C7.48043 8.89464 7.73478 9 8 9ZM16 11H8C7.73478 11 7.48043 11.1054 7.29289 11.2929C7.10536 11.4804 7 11.7348 7 12C7 12.2652 7.10536 12.5196 7.29289 12.7071C7.48043 12.8946 7.73478 13 8 13H16C16.2652 13 16.5196 12.8946 16.7071 12.7071C16.8946 12.5196 17 12.2652 17 12C17 11.7348 16.8946 11.4804 16.7071 11.2929C16.5196 11.1054 16.2652 11 16 11ZM16 15H8C7.73478 15 7.48043 15.1054 7.29289 15.2929C7.10536 15.4804 7 15.7348 7 16C7 16.2652 7.10536 16.5196 7.29289 16.7071C7.48043 16.8946 7.73478 17 8 17H16C16.2652 17 16.5196 16.8946 16.7071 16.7071C16.8946 16.5196 17 16.2652 17 16C17 15.7348 16.8946 15.4804 16.7071 15.2929C16.5196 15.1054 16.2652 15 16 15Z\"\r\n        fill=\"#444444\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_46_20343\">\r\n        <rect width={24} height={24} fill=\"white\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);","import ChatsLeftSideNav from \"../leftSideNavs/chatsLeftSideNav\";\r\nimport SettingsLeftSideNav from \"../leftSideNavs/settingsLeftSideNav\";\r\n\r\nfunction SupportSideNav({ liveChatSocket, setCurrentDrawFlowId }: { liveChatSocket: any; setCurrentDrawFlowId: any }) {\r\n  return (\r\n    <div className=\"support-nav\">\r\n      {window.location.pathname === \"/chats\" || window.location.pathname === \"/chats/\" ? (\r\n        <ChatsLeftSideNav liveChatSocket={liveChatSocket} setCurrentDrawFlowId={setCurrentDrawFlowId} />\r\n      ) : window.location.pathname === \"/settings\" || window.location.pathname === \"/settings/\" ? (\r\n        <SettingsLeftSideNav />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportSideNav;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { State } from \"../../redux/Types\";\r\nimport { axiosGet, axiosPost } from \"../../services/axiosService\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./chats.css\";\r\nimport { Fragment } from \"react\";\r\nimport moment from \"moment\";\r\nimport SupportSideNav from \"../../components/layoutElements/supportSideNav\";\r\nimport Header from \"../../components/layoutElements/header\";\r\nimport { userSlice } from \"../../redux/User\";\r\nimport SmallLoader from \"../../components/loaders/SmallLoader\";\r\nimport Loader from \"../../components/loaders/Loader\";\r\nimport environment from \"../../constants/Environment\";\r\nconst environmentData = environment();\r\nimport { io } from \"socket.io-client\";\r\n\r\ntype routeType =\r\n  | \"/dashboard\"\r\n  | \"/integration\"\r\n  | \"/analytics\"\r\n  | \"/chats\"\r\n  | \"/audience\"\r\n  | \"/settings\";\r\nimport { TabTitle } from \"../../utils/TitleFuntion\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction Chats(props: any) {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const route = useNavigate();\r\n  const query = new URLSearchParams(location.search);\r\n  const chatId: any = query.get(\"chatId\");\r\n  const botId: any = query.get(\"botId\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [allChatHistory, setAllChatHistory] = useState<any>();\r\n  const [visitorId, setVistorId] = useState<any>();\r\n  const selectedBotId = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.selectedBot,\r\n  );\r\n  const selectedChatId = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.selectedChat,\r\n  );\r\n  const selectedRoomId = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.selectedSenderId,\r\n  ); // using senderId as roomId\r\n  const [credId, setCredId] = useState<any>();\r\n  const isLoggedIn = useSelector((state: State) => state.user.isLoggedIn);\r\n  const userId = useSelector((state: State) => state.user.userId);\r\n  const [userReply, setUserReply] = useState<any>();\r\n  const setRoute = (routeInput: routeType = \"/dashboard\") => route(routeInput);\r\n  const [isChatLive, setisChatLive] = useState<any>(false);\r\n  const liveChatSocket = useRef<any>(null);\r\n\r\n  const liveRoomIds = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.liveRoomIds,\r\n  );\r\n  const currentBotId = useSelector(\r\n    (state: State) => state.user.companyDetails.chats.selectedBotId,\r\n  );\r\n  const [currentDrawFlowId, setCurrentDrawFlowId] = useState<string>(\"\"); // used to get liveChat question's drawFlowId via socket\r\n\r\n  const handleSendReplyButton = () => {\r\n    const nodeTitle = {\r\n      message: inputValue,\r\n      roomId: selectedRoomId,\r\n    };\r\n\r\n    liveChatSocket.current.emit(\"nodeTitle\", nodeTitle); // sends admin's reply to the user\r\n    // updates UI to display admin's reply\r\n    setAllChatHistory((prev: any) => {\r\n      let temp = { ...prev };\r\n      temp.userAnswers.push({\r\n        nodeTitle: inputValue,\r\n        userReply: \"NO_REPLY\",\r\n      });\r\n      return temp;\r\n    });\r\n\r\n    axiosPost(\r\n      `/liveBot/saveAgentAnswer?botId=${currentBotId}&roomId=${selectedRoomId}`,\r\n      {\r\n        botCustomId: selectedBotId,\r\n        nodeTitle: inputValue,\r\n        drawFlowId: currentDrawFlowId ?? 0,\r\n        userAnswer: \"NO_REPLY\",\r\n      },\r\n    ).then(() => {});\r\n\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const endLiveChat = (roomId: string) => {\r\n    const userIdAsString: string = userId as string;\r\n    liveChatSocket.current.emit(\"endChat\", {\r\n      message: \"Chat has been Closed\",\r\n      roomId: roomId,\r\n      agentId: userIdAsString,\r\n    });\r\n    setisChatLive(false);\r\n    dispatch(\r\n      userSlice.actions.setCurrentLiveRoomIds({\r\n        roomIds: [roomId],\r\n        type: \"remove\",\r\n      }),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (liveRoomIds)\r\n      liveRoomIds.includes(selectedRoomId)\r\n        ? setisChatLive(true)\r\n        : setisChatLive(false);\r\n  }, [liveRoomIds, selectedRoomId]);\r\n\r\n  useEffect(() => {\r\n    TabTitle(\" | Chats\");\r\n    if (!isLoggedIn) {\r\n      route(\"/\");\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    if (chatId !== null && botId !== null) {\r\n      dispatch(userSlice.actions.setSelectedBot(botId));\r\n    }\r\n  }, [chatId, botId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedChatId) {\r\n      setLoader(true);\r\n\r\n      axiosGet(\r\n        `/users/botMessages?botCustomId=${selectedBotId}&roomId=${selectedChatId}`,\r\n      )\r\n        .then((response) => {\r\n          setAllChatHistory(response.data.data);\r\n          setVistorId(response.data.data?.senderId);\r\n          setCredId(response.data.data.userCredential?.id);\r\n          userSlice.actions.setReload(false);\r\n          setLoader(false);\r\n        })\r\n        .catch((err) => {\r\n          dispatch(\r\n            userSlice.actions.setInfoModal({\r\n              showModal: true,\r\n              modalType: \"error\",\r\n              modalTitle: \"Oops!\",\r\n              modalMessage: err.response?.data?.message\r\n                ? err.response.data.message\r\n                : err.message,\r\n            }),\r\n          );\r\n          userSlice.actions.setReload(false);\r\n          setLoader(false);\r\n        });\r\n    }\r\n  }, [selectedChatId, selectedBotId]);\r\n\r\n  // socket connection for liveChat node\r\n  useEffect(() => {\r\n    const userIdAsString: string = userId as string;\r\n    liveChatSocket.current = io(environmentData.SERVER_API_URL + \"/liveChat\", {\r\n      reconnection: false,\r\n      transports: [\"websocket\"],\r\n    });\r\n    liveChatSocket.current.emit(\"registerAgent\", userIdAsString);\r\n\r\n    liveChatSocket.current.on(\"userReply\", (data: any) => {\r\n      setUserReply(data);\r\n      setisChatLive(true);\r\n    });\r\n\r\n    return () => {\r\n      if (liveChatSocket.current.readyState === 1) {\r\n        liveChatSocket.current.off(\"userReply\");\r\n        liveChatSocket.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedRoomId == userReply?.senderId) {\r\n      setAllChatHistory((prev: any) => {\r\n        let temp = { ...prev };\r\n        if (temp?.userAnswers?.slice(-1)[0].userReply === \"NO_REPLY\") {\r\n          temp?.userAnswers.pop();\r\n        }\r\n        temp?.userAnswers?.push(userReply.data);\r\n        return temp;\r\n      });\r\n    }\r\n  }, [userReply]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"vertical-overlay\"></div>\r\n      <Loader />\r\n      {/* {environment().isAI ? <SideNav /> : <OmniSideNav setRoute={setRoute} />} */}\r\n      <SupportSideNav\r\n        liveChatSocket={liveChatSocket.current}\r\n        setCurrentDrawFlowId={setCurrentDrawFlowId}\r\n      />\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 1 }}\r\n        className={`chat-main-container`}\r\n      >\r\n        <Header />\r\n        <div className=\"chat\">\r\n          <div className=\"container\">\r\n            <div className=\"chat_wrapper\">\r\n              <div className=\"messages\">\r\n                <span className=\"k_menu\">\r\n                  <a\r\n                    onClick={() => {\r\n                      document\r\n                        .querySelector(\".chat-main-container\")\r\n                        ?.classList.remove(\"open\");\r\n                      dispatch(userSlice.actions.setSelectedChat(\"\"));\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <polygon\r\n                        points=\"7 7 15.586 7 5.293 17.293 6.707 18.707 17 8.414 17 17 19 17 19 5 7 5 7 7\"\r\n                        fill=\"#6D6D6D\"\r\n                      ></polygon>\r\n                    </svg>\r\n                  </a>\r\n                </span>\r\n\r\n                {isChatLive ? (\r\n                  <div\r\n                    className={`information ${selectedChatId ? \"\" : \"none\"}`}\r\n                  >\r\n                    <div className=\"right-part\">\r\n                      <div className=\"profile_img\">L</div>\r\n                      <div className=\"profile_info d-flex\">\r\n                        <p className=\"name text-left\">\r\n                          {selectedChatId && visitorId ? (\r\n                            <>Live#{visitorId}</>\r\n                          ) : (\r\n                            <>Live#{credId}</>\r\n                          )}\r\n                        </p>\r\n                        {isChatLive && (\r\n                          <button onClick={() => endLiveChat(selectedRoomId)}>\r\n                            End\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className={`information ${selectedChatId ? \"\" : \"none\"}`}\r\n                  >\r\n                    <div className=\"right-part\">\r\n                      <div className=\"profile_img\">V</div>\r\n                      <div className=\"profile_info d-flex\">\r\n                        <p className=\"name text-left\">\r\n                          {selectedChatId && visitorId ? (\r\n                            <>Visitor#{visitorId}</>\r\n                          ) : (\r\n                            <>Visitor#{credId}</>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {!loader ? (\r\n                  <div\r\n                    className={\r\n                      selectedChatId && allChatHistory\r\n                        ? \"msg_container\"\r\n                        : \"msg_container no-results\"\r\n                    }\r\n                  >\r\n                    {selectedChatId && allChatHistory ? (\r\n                      allChatHistory?.userAnswers?.map((ans, index) => {\r\n                        return ans?.isAiBot ? (\r\n                          <div className=\"messages-chat\" key={index}>\r\n                            {ans.userAnswer &&\r\n                            ans.userAnswer !== \"NO_REPLY\" &&\r\n                            ans.userAnswer !== \"No Reply\" &&\r\n                            ans.userAnswer !== \"reset\" ? (\r\n                              <Fragment>\r\n                                <span className=\"status_bar text-right\">\r\n                                  {\" \"}\r\n                                  <p>Visitor{visitorId}</p>\r\n                                </span>\r\n                                <div className=\"mesage text-only\">\r\n                                  <div className=\"response\">\r\n                                    <div className=\"photo_container\">\r\n                                      <svg\r\n                                        width=\"30\"\r\n                                        height=\"36\"\r\n                                        viewBox=\"0 0 34 40\"\r\n                                        fill=\"none\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      >\r\n                                        <path\r\n                                          d=\"M34 31.2255C32.6555 26.7773 29.7886 22.9439 26.4128 21.7617C24.5082 21.0946 22.6472 20.6671 20.7426 20C19.6006 21.1973 18.1861 21.8877 16.7544 21.9462C15.3228 22.0055 13.8205 21.2904 12.6293 20.1892C11.0505 20.5694 9.4719 20.9493 7.89324 21.3299C4.06759 22.2509 0 31 0 31C0 31 5.5 36.5 9.07198 37.5651C12.1955 39.1989 15.5305 39.2284 18.8636 38.9567C24.3764 38.507 29.3863 35.4279 34 31.2255Z\"\r\n                                          fill=\"#FDB044\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M9.60156 21.0724C10.5764 23.8268 13.4214 25.8036 16.343 25.756C19.2644 25.7087 22.0438 23.6406 22.9287 20.8558\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M6.21517 21.6576C6.47511 24.7023 6.34993 27.7792 5.84375 30.793\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M26.2422 21.5088C26.2627 24.3612 26.7483 27.2096 27.6734 29.9077\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M9.6875 2.84635C9.9784 3.02096 10.269 3.1953 10.5598 3.36963C10.532 2.96914 10.5043 2.56838 10.4766 2.16789\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M23.6641 3.92663C24.2715 3.61993 25.0362 3.64893 25.6189 4.00098C26.2013 4.35302 26.5823 5.01683 26.593 5.69727\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M9.18428 10.7186C8.93014 8.88013 8.67602 7.04216 8.42188 5.20421C9.8033 3.74027 11.4621 2.18141 13.2963 1.3534C15.1305 0.525396 17.2088 0.169128 19.1848 0.551871C21.1607 0.934896 23.0139 2.0989 24.0463 3.82645C24.5606 3.66535 25.1053 3.94755 25.4894 4.32579C25.8733 4.70403 26.027 5.2994 25.8744 5.8162C25.7215 6.333 25.2686 6.74899 24.7406 6.85742C24.4105 8.39853 24.0629 9.97089 23.7326 11.5117L9.18428 10.7186Z\"\r\n                                          fill=\"#060305\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M21.7616 19.7244C21.398 19.6534 21.0333 19.5858 20.6697 19.5148C20.6505 19.018 20.6663 18.4795 20.6474 17.9827C21.8863 17.409 22.8813 16.0924 23.0117 14.7332C23.6826 14.2792 24.2881 13.7044 24.6722 12.9913C25.0564 12.2782 25.202 11.4161 24.9598 10.6427C24.7178 9.86994 24.0312 9.30103 23.2308 9.17655C23.2804 7.70022 22.9244 6.34019 22.1105 5.10776C19.2615 5.16465 16.4512 5.15733 13.6021 5.21422C13.0485 6.88911 12.4948 8.564 11.9411 10.2389C11.647 9.80123 11.3527 9.36356 11.0585 8.9259C9.96619 8.9611 8.93373 9.74235 8.5742 10.7745C8.21481 11.8065 8.47949 13.0107 9.17652 13.8525C9.87367 14.6941 10.9633 15.1729 12.0558 15.2038C12.0422 16.6954 12.0217 18.223 12.0084 19.7145C11.6926 19.7936 11.246 19.8384 10.9302 19.9173C11.8666 21.987 14.128 23.5217 16.3985 23.4518C18.6692 23.382 20.9541 21.8479 21.7616 19.7244Z\"\r\n                                          fill=\"#FFC9C8\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M16.9425 13.099C16.737 14.034 15.8994 14.0692 14.9227 13.8549C13.9461 13.64 13.2135 13.197 13.4058 12.3219C13.5835 11.5128 14.4489 11.3517 15.4255 11.5666C16.4021 11.7809 17.1202 12.2898 16.9425 13.099Z\"\r\n                                          fill=\"#FF99A1\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M23.0324 12.3673C23.2512 13.2992 22.5108 13.693 21.5375 13.9211C20.5639 14.1498 19.7117 14.0664 19.5072 13.1942C19.3179 12.3879 20.0288 11.8685 21.0024 11.6401C21.9757 11.412 22.8434 11.5607 23.0324 12.3673Z\"\r\n                                          fill=\"#FF99A1\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M23.2453 9.0779C23.3658 11.0353 23.294 13.0042 23.0312 14.9478\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M23.3047 11.4639C23.6193 11.2648 23.9341 11.0662 24.249 10.8671\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M9.52344 10.5257C10.0845 10.9098 10.6454 11.2943 11.2065 11.6787\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M11.9464 15.2847C11.8758 14.954 11.805 14.6237 11.7344 14.2933\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M15.5469 18.4118C17.3055 19.1463 19.4271 18.9365 21.0079 17.8716\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M15.8449 10.8266C15.8449 10.5937 15.6558 10.4041 15.4224 10.4041C15.1892 10.4041 15 10.5937 15 10.8266C15 11.0603 15.1892 11.249 15.4224 11.249C15.6558 11.249 15.8449 11.0603 15.8449 10.8266Z\"\r\n                                          fill=\"#060305\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M21.548 10.8266C21.548 10.5937 21.3588 10.4041 21.1256 10.4041C20.8921 10.4041 20.7031 10.5937 20.7031 10.8266C20.7031 11.0603 20.8921 11.249 21.1256 11.249C21.3588 11.249 21.548 11.0603 21.548 10.8266Z\"\r\n                                          fill=\"#060305\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M18.6556 10.4163C18.7925 11.5448 18.9294 12.673 19.0662 13.8013C18.7708 13.8004 18.4754 13.7996 18.1797 13.7987\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M14.2188 8.39127C14.5342 8.00768 15.0491 7.79813 15.5426 7.85249C16.0361 7.90685 16.493 8.2237 16.7171 8.66699\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M20.0234 8.25098C20.5692 8.19296 21.115 8.13495 21.6608 8.07693\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M16.4141 14.1005C16.4442 14.4101 16.6561 14.6951 16.9438 14.8134C17.2313 14.9316 17.5825 14.8779 17.8215 14.679\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                      </svg>\r\n\r\n                                      {/* <div className=\"online\"></div> */}\r\n                                    </div>\r\n                                    {ans.nodeTitle === \"Envoie data\" ? (\r\n                                      <p className=\"text text-left\">\r\n                                        {\" \"}\r\n                                        <iframe\r\n                                          srcDoc={ans.userAnswer}\r\n                                          height={800}\r\n                                          width={600}\r\n                                        />\r\n                                      </p>\r\n                                    ) : (\r\n                                      <p className=\"text\">{ans.userAnswer}</p>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </Fragment>\r\n                            ) : null}\r\n                            {ans.nodeTitle ? (\r\n                              <Fragment>\r\n                                <span className=\"status_bar text-left\">\r\n                                  {\" \"}\r\n                                  <p>\r\n                                    Workflow {moment(ans.date).format(\"LT\")}\r\n                                  </p>\r\n                                </span>\r\n                                <div className=\"mesage\">\r\n                                  <div className=\"photo_container chatbot_outer\">\r\n                                    <svg\r\n                                      width=\"32\"\r\n                                      height=\"25\"\r\n                                      viewBox=\"0 0 32 25\"\r\n                                      fill=\"none\"\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                      <path\r\n                                        d=\"M8.55477 4.17944C8.95585 4.87379 8.44169 5.9202 7.40659 6.51653C6.37148 7.11287 5.20822 7.03521 4.8079 6.34163C4.40757 5.64804 4.92098 4.59937 5.95307 4.00454C6.98516 3.40971 8.15445 3.4851 8.55477 4.17944Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M5.58971 5.22182C5.43064 5.03636 5.03711 4.33749 3.82031 2.16928L4.6496 1.54053C5.60328 2.49346 6.82837 3.74719 7.02891 3.9319C7.06359 3.96356 5.58971 5.22182 5.58971 5.22182Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M5.43665 1.53522C5.43665 1.8357 5.34754 2.12944 5.18058 2.37927C5.01363 2.6291 4.77633 2.82381 4.49871 2.93876C4.22108 3.05372 3.9156 3.08376 3.6209 3.02508C3.32621 2.96641 3.05553 2.82165 2.84311 2.60912C2.63069 2.3966 2.48607 2.12585 2.42754 1.83112C2.36901 1.53639 2.3992 1.23093 2.51429 0.953361C2.62938 0.675793 2.82421 0.438593 3.07412 0.271763C3.32404 0.104932 3.61782 0.0159643 3.9183 0.0161135C4.321 0.0165129 4.70708 0.176714 4.99176 0.461536C5.27644 0.746359 5.43645 1.13252 5.43665 1.53522V1.53522Z\"\r\n                                        fill=\"#C7D8EA\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M3.92238 0.0161133C3.80385 0.0161444 3.68572 0.0298043 3.57031 0.0568238C3.90277 0.136113 4.19879 0.325144 4.41059 0.59339C4.62238 0.861637 4.73758 1.19344 4.73758 1.53522C4.73758 1.877 4.62238 2.2088 4.41059 2.47705C4.19879 2.7453 3.90277 2.93433 3.57031 3.01362C3.77879 3.06287 3.99532 3.06748 4.20571 3.02714C4.41609 2.9868 4.61556 2.90242 4.79103 2.77954C4.9665 2.65666 5.11399 2.49806 5.22383 2.31415C5.33367 2.13024 5.40338 1.92518 5.42837 1.71243C5.45335 1.49967 5.43306 1.28404 5.36883 1.07968C5.30459 0.875325 5.19786 0.686864 5.05564 0.526671C4.91342 0.366477 4.73893 0.238174 4.54362 0.150182C4.34831 0.062191 4.1366 0.0165016 3.92238 0.0161133V0.0161133Z\"\r\n                                          fill=\"#A3B6BF\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M3.57031 3.01592C5.14295 3.32125 6.03406 1.3385 4.83912 0.377276C4.66374 0.234665 4.45932 0.132099 4.24015 0.0767543C4.02099 0.0214095 3.79238 0.0146226 3.57031 0.0568684C4.48555 -0.208504 5.48597 0.483575 5.49276 1.53526C5.48522 2.5764 4.49384 3.28129 3.57031 3.01592Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M3.92636 1.41631C3.92636 1.54036 3.88958 1.66163 3.82065 1.76478C3.75173 1.86793 3.65377 1.94833 3.53916 1.9958C3.42454 2.04328 3.29842 2.0557 3.17675 2.0315C3.05508 2.0073 2.94331 1.94756 2.85559 1.85983C2.76787 1.77211 2.70813 1.66035 2.68393 1.53868C2.65973 1.417 2.67215 1.29088 2.71962 1.17627C2.7671 1.06166 2.84749 0.963695 2.95064 0.894772C3.05379 0.82585 3.17506 0.789062 3.29912 0.789062C3.46547 0.789062 3.62502 0.855147 3.74265 0.972778C3.86028 1.09041 3.92636 1.24995 3.92636 1.41631V1.41631Z\"\r\n                                          fill=\"#C7D8EA\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M23.6832 4.37311C23.2821 5.0667 23.7963 6.11386 24.8314 6.7102C25.8665 7.30653 27.0297 7.22888 27.43 6.53529C27.8304 5.84171 27.317 4.79379 26.2819 4.19821C25.2468 3.60263 24.0835 3.67877 23.6832 4.37311Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M26.6508 5.41566C26.8084 5.23021 27.2034 4.53134 28.4202 2.36313L27.5871 1.73438C26.5784 2.74611 25.3111 4.02547 25.25 4.06242C25.241 4.06694 26.6508 5.41566 26.6508 5.41566Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M26.7969 1.72907C26.7967 2.0297 26.8857 2.32362 27.0527 2.57366C27.2196 2.8237 27.4569 3.01862 27.7346 3.13377C28.0123 3.24892 28.3179 3.27913 28.6128 3.22057C28.9077 3.16201 29.1785 3.01732 29.3912 2.80479C29.6038 2.59227 29.7486 2.32145 29.8073 2.02661C29.866 1.73176 29.836 1.42613 29.721 1.14837C29.606 0.870608 29.4112 0.633194 29.1612 0.466156C28.9112 0.299118 28.6174 0.209961 28.3167 0.209961C27.9138 0.21016 27.5275 0.370249 27.2425 0.655072C26.9576 0.939895 26.7973 1.32617 26.7969 1.72907V1.72907Z\"\r\n                                        fill=\"#C7D8EA\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M28.3193 0.20985C28.4376 0.209878 28.5555 0.223539 28.6707 0.25056C28.3382 0.329849 28.0422 0.51888 27.8304 0.787127C27.6186 1.05537 27.5034 1.38718 27.5034 1.72896C27.5034 2.07074 27.6186 2.40254 27.8304 2.67079C28.0422 2.93903 28.3382 3.12806 28.6707 3.20735C28.5556 3.23499 28.4377 3.24891 28.3193 3.24882C28.1169 3.25333 27.9157 3.21736 27.7274 3.14302C27.5391 3.06869 27.3675 2.95748 27.2228 2.81594C27.0781 2.67439 26.9631 2.50536 26.8846 2.31877C26.8061 2.13217 26.7656 1.93177 26.7656 1.72933C26.7656 1.52689 26.8061 1.32649 26.8846 1.1399C26.9631 0.953303 27.0781 0.784272 27.2228 0.642728C27.3675 0.501185 27.5391 0.389981 27.7274 0.315646C27.9157 0.241311 28.1169 0.205341 28.3193 0.20985V0.20985Z\"\r\n                                          fill=\"#A3B6BF\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M28.6717 3.20743C27.0991 3.51502 26.2095 1.53226 27.4036 0.56878C27.579 0.426534 27.7834 0.324355 28.0025 0.269399C28.2215 0.214443 28.4499 0.208039 28.6717 0.250635C27.7572 -0.0147378 26.7568 0.678849 26.75 1.72903C26.7575 2.76941 27.7489 3.47506 28.6717 3.20743Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M28.3203 1.60924C28.3206 1.73307 28.3576 1.85404 28.4265 1.95691C28.4954 2.05978 28.5933 2.13994 28.7077 2.18729C28.8221 2.23464 28.948 2.24707 29.0695 2.223C29.1909 2.19893 29.3026 2.13945 29.3903 2.05204C29.478 1.96464 29.5379 1.85322 29.5624 1.73184C29.5869 1.61046 29.5749 1.48454 29.528 1.36995C29.481 1.25536 29.4012 1.15722 29.2986 1.08792C29.196 1.01861 29.0752 0.98123 28.9513 0.980485C28.8685 0.979886 28.7863 0.995724 28.7097 1.02708C28.633 1.05844 28.5633 1.10469 28.5046 1.16317C28.4459 1.22164 28.3994 1.29118 28.3678 1.36774C28.3361 1.44431 28.32 1.52639 28.3203 1.60924V1.60924Z\"\r\n                                          fill=\"#C7D8EA\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M16 21.4265C24.8366 21.4265 32 18.2095 32 14.2411C32 10.2727 24.8366 7.05566 16 7.05566C7.16344 7.05566 0 10.2727 0 14.2411C0 18.2095 7.16344 21.4265 16 21.4265Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M30.1324 17.6149C29.8342 17.8643 29.5212 18.0957 29.1953 18.3077C29.9983 15.9619 30.3714 13.4905 30.2968 11.0122C30.5478 11.2342 30.7816 11.4749 30.9964 11.7322C30.9805 13.7235 30.6898 15.7031 30.1324 17.6149V17.6149Z\"\r\n                                        fill=\"#A2BFDC\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M1.00802 11.7253C1.22437 11.4687 1.45948 11.2286 1.71141 11.0068C1.57722 13.2919 2.03559 15.9826 2.94856 18.4018C2.60818 18.1884 2.28091 17.9548 1.96849 17.7022C1.33145 15.7074 0.998222 13.6108 1.00802 11.7253Z\"\r\n                                        fill=\"#A2BFDC\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M11.6495 24.4206C14.6179 24.0081 17.6245 23.9463 20.6074 24.2366C27.4791 24.9038 29.9278 14.6108 28.9477 9.4308C28.4487 6.79216 25.5047 4.8961 23.0191 4.30806C18.472 3.24028 13.7465 3.17827 9.17297 4.12637C6.74013 4.64354 4.3367 6.29157 3.39056 8.66107C1.41459 13.6097 4.93681 25.3516 11.6495 24.4206Z\"\r\n                                        fill=\"#A2BFDC\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M3.39055 8.66127C3.85797 7.48971 4.68198 6.49532 5.68919 5.72559C5.34917 6.17583 5.07031 6.66916 4.8599 7.19267C2.88242 12.142 6.40615 23.884 13.1158 22.9522C16.085 22.5403 19.0923 22.4785 22.0759 22.7682C23.5596 22.9321 25.0493 22.5164 26.2337 21.608C24.8706 23.3653 23.01 24.4728 20.6089 24.2368C17.626 23.9465 14.6194 24.0083 11.651 24.4208C4.9368 25.3518 1.41458 13.6099 3.39055 8.66127Z\"\r\n                                          fill=\"#A3B6BF\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M22.1044 8.22463C18.044 7.9095 13.9652 7.9095 9.90479 8.22463C3.3911 8.7305 1.15202 19.4924 12.9287 21.1095C16.6643 21.6214 21.1507 21.3538 24.4241 19.325C29.5514 16.1451 27.7232 8.66114 22.1044 8.22463Z\"\r\n                                        fill=\"#C7D8EA\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M16.1922 21.1535C15.109 21.1512 14.0272 21.0757 12.9542 20.9274C6.77223 20.08 4.65378 16.7379 4.73671 13.8927C4.8219 10.9842 7.05042 8.62221 9.91976 8.39906C11.9357 8.24225 13.9833 8.16309 16.0052 8.16309C18.0272 8.16309 20.0763 8.23848 22.0915 8.39906C24.5469 8.58979 26.5108 10.2672 27.0958 12.6722C27.7095 15.197 26.6247 17.7467 24.3313 19.1678C21.6866 20.806 18.4449 21.1505 16.1892 21.1505L16.1922 21.1535Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <g opacity=\"0.34\">\r\n                                        <path\r\n                                          d=\"M17.1349 5.61552C17.2043 6.23221 19.0694 6.52774 21.2655 6.81196C23.4639 7.07658 25.3449 7.24771 25.5628 6.66721C25.7844 6.10254 24.0324 4.91364 21.54 4.60681C19.0476 4.29997 17.0588 5.01391 17.1349 5.61552Z\"\r\n                                          fill=\"#A2BFDC\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M16.0576 19.472C13.7054 19.472 11.7167 17.6287 11.4324 15.1838C11.4267 15.1396 11.4299 15.0947 11.4417 15.0517C11.4536 15.0088 11.4738 14.9686 11.5013 14.9335C11.5288 14.8984 11.563 14.8691 11.6019 14.8474C11.6408 14.8257 11.6837 14.8119 11.728 14.8068C11.9134 14.7857 20.2025 14.7857 20.3872 14.8068C20.4316 14.8119 20.4744 14.8257 20.5134 14.8474C20.5523 14.8691 20.5866 14.8984 20.6141 14.9334C20.6417 14.9685 20.662 15.0087 20.6739 15.0517C20.6858 15.0946 20.6891 15.1395 20.6835 15.1838C20.3993 17.6287 18.4105 19.472 16.0576 19.472Z\"\r\n                                        fill=\"white\"\r\n                                        fillOpacity=\"0.8\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M10.803 11.5348C10.803 11.6799 10.76 11.8217 10.6794 11.9423C10.5988 12.063 10.4842 12.157 10.3502 12.2125C10.2162 12.268 10.0687 12.2826 9.92637 12.2543C9.78408 12.226 9.65338 12.1561 9.55079 12.0535C9.4482 11.9509 9.37834 11.8202 9.35003 11.6779C9.32173 11.5356 9.33626 11.3881 9.39178 11.2541C9.4473 11.1201 9.54132 11.0055 9.66195 10.9249C9.78258 10.8443 9.9244 10.8013 10.0695 10.8013C10.1658 10.8012 10.2613 10.8201 10.3503 10.8569C10.4394 10.8937 10.5203 10.9478 10.5884 11.0159C10.6565 11.084 10.7106 11.1649 10.7474 11.254C10.7842 11.343 10.8031 11.4385 10.803 11.5348V11.5348Z\"\r\n                                        fill=\"white\"\r\n                                        fillOpacity=\"0.8\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M22.7952 11.5348C22.7952 11.6799 22.7522 11.8217 22.6716 11.9423C22.591 12.063 22.4764 12.157 22.3424 12.2125C22.2083 12.268 22.0609 12.2826 21.9186 12.2543C21.7763 12.226 21.6456 12.1561 21.543 12.0535C21.4404 11.9509 21.3705 11.8202 21.3422 11.6779C21.3139 11.5356 21.3284 11.3881 21.384 11.2541C21.4395 11.1201 21.5335 11.0055 21.6541 10.9249C21.7748 10.8443 21.9166 10.8013 22.0617 10.8013C22.2562 10.8013 22.4428 10.8786 22.5804 11.0161C22.7179 11.1537 22.7952 11.3403 22.7952 11.5348Z\"\r\n                                        fill=\"white\"\r\n                                        fillOpacity=\"0.8\"\r\n                                      />\r\n                                    </svg>\r\n\r\n                                    {/* <div className=\"online\"></div> */}\r\n                                  </div>\r\n                                  <p className=\"text\"> {ans.nodeTitle} </p>\r\n                                </div>\r\n                              </Fragment>\r\n                            ) : null}\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"messages-chat\" key={index}>\r\n                            {ans.nodeTitle ? (\r\n                              <Fragment>\r\n                                <span className=\"status_bar text-left\">\r\n                                  {\" \"}\r\n                                  <p>\r\n                                    Workflow {moment(ans.date).format(\"LT\")}\r\n                                  </p>\r\n                                </span>\r\n                                <div className=\"mesage\">\r\n                                  <div className=\"photo_container chatbot_outer\">\r\n                                    <svg\r\n                                      width=\"32\"\r\n                                      height=\"25\"\r\n                                      viewBox=\"0 0 32 25\"\r\n                                      fill=\"none\"\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                      <path\r\n                                        d=\"M8.55477 4.17944C8.95585 4.87379 8.44169 5.9202 7.40659 6.51653C6.37148 7.11287 5.20822 7.03521 4.8079 6.34163C4.40757 5.64804 4.92098 4.59937 5.95307 4.00454C6.98516 3.40971 8.15445 3.4851 8.55477 4.17944Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M5.58971 5.22182C5.43064 5.03636 5.03711 4.33749 3.82031 2.16928L4.6496 1.54053C5.60328 2.49346 6.82837 3.74719 7.02891 3.9319C7.06359 3.96356 5.58971 5.22182 5.58971 5.22182Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M5.43665 1.53522C5.43665 1.8357 5.34754 2.12944 5.18058 2.37927C5.01363 2.6291 4.77633 2.82381 4.49871 2.93876C4.22108 3.05372 3.9156 3.08376 3.6209 3.02508C3.32621 2.96641 3.05553 2.82165 2.84311 2.60912C2.63069 2.3966 2.48607 2.12585 2.42754 1.83112C2.36901 1.53639 2.3992 1.23093 2.51429 0.953361C2.62938 0.675793 2.82421 0.438593 3.07412 0.271763C3.32404 0.104932 3.61782 0.0159643 3.9183 0.0161135C4.321 0.0165129 4.70708 0.176714 4.99176 0.461536C5.27644 0.746359 5.43645 1.13252 5.43665 1.53522V1.53522Z\"\r\n                                        fill=\"#C7D8EA\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M3.92238 0.0161133C3.80385 0.0161444 3.68572 0.0298043 3.57031 0.0568238C3.90277 0.136113 4.19879 0.325144 4.41059 0.59339C4.62238 0.861637 4.73758 1.19344 4.73758 1.53522C4.73758 1.877 4.62238 2.2088 4.41059 2.47705C4.19879 2.7453 3.90277 2.93433 3.57031 3.01362C3.77879 3.06287 3.99532 3.06748 4.20571 3.02714C4.41609 2.9868 4.61556 2.90242 4.79103 2.77954C4.9665 2.65666 5.11399 2.49806 5.22383 2.31415C5.33367 2.13024 5.40338 1.92518 5.42837 1.71243C5.45335 1.49967 5.43306 1.28404 5.36883 1.07968C5.30459 0.875325 5.19786 0.686864 5.05564 0.526671C4.91342 0.366477 4.73893 0.238174 4.54362 0.150182C4.34831 0.062191 4.1366 0.0165016 3.92238 0.0161133V0.0161133Z\"\r\n                                          fill=\"#A3B6BF\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M3.57031 3.01592C5.14295 3.32125 6.03406 1.3385 4.83912 0.377276C4.66374 0.234665 4.45932 0.132099 4.24015 0.0767543C4.02099 0.0214095 3.79238 0.0146226 3.57031 0.0568684C4.48555 -0.208504 5.48597 0.483575 5.49276 1.53526C5.48522 2.5764 4.49384 3.28129 3.57031 3.01592Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M3.92636 1.41631C3.92636 1.54036 3.88958 1.66163 3.82065 1.76478C3.75173 1.86793 3.65377 1.94833 3.53916 1.9958C3.42454 2.04328 3.29842 2.0557 3.17675 2.0315C3.05508 2.0073 2.94331 1.94756 2.85559 1.85983C2.76787 1.77211 2.70813 1.66035 2.68393 1.53868C2.65973 1.417 2.67215 1.29088 2.71962 1.17627C2.7671 1.06166 2.84749 0.963695 2.95064 0.894772C3.05379 0.82585 3.17506 0.789062 3.29912 0.789062C3.46547 0.789062 3.62502 0.855147 3.74265 0.972778C3.86028 1.09041 3.92636 1.24995 3.92636 1.41631V1.41631Z\"\r\n                                          fill=\"#C7D8EA\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M23.6832 4.37311C23.2821 5.0667 23.7963 6.11386 24.8314 6.7102C25.8665 7.30653 27.0297 7.22888 27.43 6.53529C27.8304 5.84171 27.317 4.79379 26.2819 4.19821C25.2468 3.60263 24.0835 3.67877 23.6832 4.37311Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M26.6508 5.41566C26.8084 5.23021 27.2034 4.53134 28.4202 2.36313L27.5871 1.73438C26.5784 2.74611 25.3111 4.02547 25.25 4.06242C25.241 4.06694 26.6508 5.41566 26.6508 5.41566Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M26.7969 1.72907C26.7967 2.0297 26.8857 2.32362 27.0527 2.57366C27.2196 2.8237 27.4569 3.01862 27.7346 3.13377C28.0123 3.24892 28.3179 3.27913 28.6128 3.22057C28.9077 3.16201 29.1785 3.01732 29.3912 2.80479C29.6038 2.59227 29.7486 2.32145 29.8073 2.02661C29.866 1.73176 29.836 1.42613 29.721 1.14837C29.606 0.870608 29.4112 0.633194 29.1612 0.466156C28.9112 0.299118 28.6174 0.209961 28.3167 0.209961C27.9138 0.21016 27.5275 0.370249 27.2425 0.655072C26.9576 0.939895 26.7973 1.32617 26.7969 1.72907V1.72907Z\"\r\n                                        fill=\"#C7D8EA\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M28.3193 0.20985C28.4376 0.209878 28.5555 0.223539 28.6707 0.25056C28.3382 0.329849 28.0422 0.51888 27.8304 0.787127C27.6186 1.05537 27.5034 1.38718 27.5034 1.72896C27.5034 2.07074 27.6186 2.40254 27.8304 2.67079C28.0422 2.93903 28.3382 3.12806 28.6707 3.20735C28.5556 3.23499 28.4377 3.24891 28.3193 3.24882C28.1169 3.25333 27.9157 3.21736 27.7274 3.14302C27.5391 3.06869 27.3675 2.95748 27.2228 2.81594C27.0781 2.67439 26.9631 2.50536 26.8846 2.31877C26.8061 2.13217 26.7656 1.93177 26.7656 1.72933C26.7656 1.52689 26.8061 1.32649 26.8846 1.1399C26.9631 0.953303 27.0781 0.784272 27.2228 0.642728C27.3675 0.501185 27.5391 0.389981 27.7274 0.315646C27.9157 0.241311 28.1169 0.205341 28.3193 0.20985V0.20985Z\"\r\n                                          fill=\"#A3B6BF\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M28.6717 3.20743C27.0991 3.51502 26.2095 1.53226 27.4036 0.56878C27.579 0.426534 27.7834 0.324355 28.0025 0.269399C28.2215 0.214443 28.4499 0.208039 28.6717 0.250635C27.7572 -0.0147378 26.7568 0.678849 26.75 1.72903C26.7575 2.76941 27.7489 3.47506 28.6717 3.20743Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M28.3203 1.60924C28.3206 1.73307 28.3576 1.85404 28.4265 1.95691C28.4954 2.05978 28.5933 2.13994 28.7077 2.18729C28.8221 2.23464 28.948 2.24707 29.0695 2.223C29.1909 2.19893 29.3026 2.13945 29.3903 2.05204C29.478 1.96464 29.5379 1.85322 29.5624 1.73184C29.5869 1.61046 29.5749 1.48454 29.528 1.36995C29.481 1.25536 29.4012 1.15722 29.2986 1.08792C29.196 1.01861 29.0752 0.98123 28.9513 0.980485C28.8685 0.979886 28.7863 0.995724 28.7097 1.02708C28.633 1.05844 28.5633 1.10469 28.5046 1.16317C28.4459 1.22164 28.3994 1.29118 28.3678 1.36774C28.3361 1.44431 28.32 1.52639 28.3203 1.60924V1.60924Z\"\r\n                                          fill=\"#C7D8EA\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M16 21.4265C24.8366 21.4265 32 18.2095 32 14.2411C32 10.2727 24.8366 7.05566 16 7.05566C7.16344 7.05566 0 10.2727 0 14.2411C0 18.2095 7.16344 21.4265 16 21.4265Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M30.1324 17.6149C29.8342 17.8643 29.5212 18.0957 29.1953 18.3077C29.9983 15.9619 30.3714 13.4905 30.2968 11.0122C30.5478 11.2342 30.7816 11.4749 30.9964 11.7322C30.9805 13.7235 30.6898 15.7031 30.1324 17.6149V17.6149Z\"\r\n                                        fill=\"#A2BFDC\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M1.00802 11.7253C1.22437 11.4687 1.45948 11.2286 1.71141 11.0068C1.57722 13.2919 2.03559 15.9826 2.94856 18.4018C2.60818 18.1884 2.28091 17.9548 1.96849 17.7022C1.33145 15.7074 0.998222 13.6108 1.00802 11.7253Z\"\r\n                                        fill=\"#A2BFDC\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M11.6495 24.4206C14.6179 24.0081 17.6245 23.9463 20.6074 24.2366C27.4791 24.9038 29.9278 14.6108 28.9477 9.4308C28.4487 6.79216 25.5047 4.8961 23.0191 4.30806C18.472 3.24028 13.7465 3.17827 9.17297 4.12637C6.74013 4.64354 4.3367 6.29157 3.39056 8.66107C1.41459 13.6097 4.93681 25.3516 11.6495 24.4206Z\"\r\n                                        fill=\"#A2BFDC\"\r\n                                      />\r\n                                      <g opacity=\"0.46\">\r\n                                        <path\r\n                                          d=\"M3.39055 8.66127C3.85797 7.48971 4.68198 6.49532 5.68919 5.72559C5.34917 6.17583 5.07031 6.66916 4.8599 7.19267C2.88242 12.142 6.40615 23.884 13.1158 22.9522C16.085 22.5403 19.0923 22.4785 22.0759 22.7682C23.5596 22.9321 25.0493 22.5164 26.2337 21.608C24.8706 23.3653 23.01 24.4728 20.6089 24.2368C17.626 23.9465 14.6194 24.0083 11.651 24.4208C4.9368 25.3518 1.41458 13.6099 3.39055 8.66127Z\"\r\n                                          fill=\"#A3B6BF\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M22.1044 8.22463C18.044 7.9095 13.9652 7.9095 9.90479 8.22463C3.3911 8.7305 1.15202 19.4924 12.9287 21.1095C16.6643 21.6214 21.1507 21.3538 24.4241 19.325C29.5514 16.1451 27.7232 8.66114 22.1044 8.22463Z\"\r\n                                        fill=\"#C7D8EA\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M16.1922 21.1535C15.109 21.1512 14.0272 21.0757 12.9542 20.9274C6.77223 20.08 4.65378 16.7379 4.73671 13.8927C4.8219 10.9842 7.05042 8.62221 9.91976 8.39906C11.9357 8.24225 13.9833 8.16309 16.0052 8.16309C18.0272 8.16309 20.0763 8.23848 22.0915 8.39906C24.5469 8.58979 26.5108 10.2672 27.0958 12.6722C27.7095 15.197 26.6247 17.7467 24.3313 19.1678C21.6866 20.806 18.4449 21.1505 16.1892 21.1505L16.1922 21.1535Z\"\r\n                                        fill=\"#043340\"\r\n                                      />\r\n                                      <g opacity=\"0.34\">\r\n                                        <path\r\n                                          d=\"M17.1349 5.61552C17.2043 6.23221 19.0694 6.52774 21.2655 6.81196C23.4639 7.07658 25.3449 7.24771 25.5628 6.66721C25.7844 6.10254 24.0324 4.91364 21.54 4.60681C19.0476 4.29997 17.0588 5.01391 17.1349 5.61552Z\"\r\n                                          fill=\"#A2BFDC\"\r\n                                        />\r\n                                      </g>\r\n                                      <path\r\n                                        d=\"M16.0576 19.472C13.7054 19.472 11.7167 17.6287 11.4324 15.1838C11.4267 15.1396 11.4299 15.0947 11.4417 15.0517C11.4536 15.0088 11.4738 14.9686 11.5013 14.9335C11.5288 14.8984 11.563 14.8691 11.6019 14.8474C11.6408 14.8257 11.6837 14.8119 11.728 14.8068C11.9134 14.7857 20.2025 14.7857 20.3872 14.8068C20.4316 14.8119 20.4744 14.8257 20.5134 14.8474C20.5523 14.8691 20.5866 14.8984 20.6141 14.9334C20.6417 14.9685 20.662 15.0087 20.6739 15.0517C20.6858 15.0946 20.6891 15.1395 20.6835 15.1838C20.3993 17.6287 18.4105 19.472 16.0576 19.472Z\"\r\n                                        fill=\"white\"\r\n                                        fillOpacity=\"0.8\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M10.803 11.5348C10.803 11.6799 10.76 11.8217 10.6794 11.9423C10.5988 12.063 10.4842 12.157 10.3502 12.2125C10.2162 12.268 10.0687 12.2826 9.92637 12.2543C9.78408 12.226 9.65338 12.1561 9.55079 12.0535C9.4482 11.9509 9.37834 11.8202 9.35003 11.6779C9.32173 11.5356 9.33626 11.3881 9.39178 11.2541C9.4473 11.1201 9.54132 11.0055 9.66195 10.9249C9.78258 10.8443 9.9244 10.8013 10.0695 10.8013C10.1658 10.8012 10.2613 10.8201 10.3503 10.8569C10.4394 10.8937 10.5203 10.9478 10.5884 11.0159C10.6565 11.084 10.7106 11.1649 10.7474 11.254C10.7842 11.343 10.8031 11.4385 10.803 11.5348V11.5348Z\"\r\n                                        fill=\"white\"\r\n                                        fillOpacity=\"0.8\"\r\n                                      />\r\n                                      <path\r\n                                        d=\"M22.7952 11.5348C22.7952 11.6799 22.7522 11.8217 22.6716 11.9423C22.591 12.063 22.4764 12.157 22.3424 12.2125C22.2083 12.268 22.0609 12.2826 21.9186 12.2543C21.7763 12.226 21.6456 12.1561 21.543 12.0535C21.4404 11.9509 21.3705 11.8202 21.3422 11.6779C21.3139 11.5356 21.3284 11.3881 21.384 11.2541C21.4395 11.1201 21.5335 11.0055 21.6541 10.9249C21.7748 10.8443 21.9166 10.8013 22.0617 10.8013C22.2562 10.8013 22.4428 10.8786 22.5804 11.0161C22.7179 11.1537 22.7952 11.3403 22.7952 11.5348Z\"\r\n                                        fill=\"white\"\r\n                                        fillOpacity=\"0.8\"\r\n                                      />\r\n                                    </svg>\r\n\r\n                                    {/* <div className=\"online\"></div> */}\r\n                                  </div>\r\n                                  <p className=\"text text-left\">\r\n                                    {\" \"}\r\n                                    {ans.nodeTitle}{\" \"}\r\n                                  </p>\r\n                                  {/* reply admin here */}\r\n                                </div>\r\n                              </Fragment>\r\n                            ) : null}\r\n\r\n                            {ans.userAnswer &&\r\n                            ans.userAnswer !== \"NO_REPLY\" &&\r\n                            ans.userAnswer !== \"No Reply\" &&\r\n                            ans.userAnswer !== \"reset\" ? (\r\n                              <Fragment>\r\n                                <span className=\"status_bar text-right\">\r\n                                  {\" \"}\r\n                                  <p>Visitor{visitorId}</p>\r\n                                </span>\r\n                                <div className=\"mesage text-only\">\r\n                                  <div className=\"response\">\r\n                                    <div className=\"photo_container\">\r\n                                      <svg\r\n                                        width=\"30\"\r\n                                        height=\"36\"\r\n                                        viewBox=\"0 0 34 40\"\r\n                                        fill=\"none\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      >\r\n                                        <path\r\n                                          d=\"M34 31.2255C32.6555 26.7773 29.7886 22.9439 26.4128 21.7617C24.5082 21.0946 22.6472 20.6671 20.7426 20C19.6006 21.1973 18.1861 21.8877 16.7544 21.9462C15.3228 22.0055 13.8205 21.2904 12.6293 20.1892C11.0505 20.5694 9.4719 20.9493 7.89324 21.3299C4.06759 22.2509 0 31 0 31C0 31 5.5 36.5 9.07198 37.5651C12.1955 39.1989 15.5305 39.2284 18.8636 38.9567C24.3764 38.507 29.3863 35.4279 34 31.2255Z\"\r\n                                          fill=\"#FDB044\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M9.60156 21.0724C10.5764 23.8268 13.4214 25.8036 16.343 25.756C19.2644 25.7087 22.0438 23.6406 22.9287 20.8558\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M6.21517 21.6576C6.47511 24.7023 6.34993 27.7792 5.84375 30.793\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M26.2422 21.5088C26.2627 24.3612 26.7483 27.2096 27.6734 29.9077\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M9.6875 2.84635C9.9784 3.02096 10.269 3.1953 10.5598 3.36963C10.532 2.96914 10.5043 2.56838 10.4766 2.16789\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M23.6641 3.92663C24.2715 3.61993 25.0362 3.64893 25.6189 4.00098C26.2013 4.35302 26.5823 5.01683 26.593 5.69727\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M9.18428 10.7186C8.93014 8.88013 8.67602 7.04216 8.42188 5.20421C9.8033 3.74027 11.4621 2.18141 13.2963 1.3534C15.1305 0.525396 17.2088 0.169128 19.1848 0.551871C21.1607 0.934896 23.0139 2.0989 24.0463 3.82645C24.5606 3.66535 25.1053 3.94755 25.4894 4.32579C25.8733 4.70403 26.027 5.2994 25.8744 5.8162C25.7215 6.333 25.2686 6.74899 24.7406 6.85742C24.4105 8.39853 24.0629 9.97089 23.7326 11.5117L9.18428 10.7186Z\"\r\n                                          fill=\"#060305\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M21.7616 19.7244C21.398 19.6534 21.0333 19.5858 20.6697 19.5148C20.6505 19.018 20.6663 18.4795 20.6474 17.9827C21.8863 17.409 22.8813 16.0924 23.0117 14.7332C23.6826 14.2792 24.2881 13.7044 24.6722 12.9913C25.0564 12.2782 25.202 11.4161 24.9598 10.6427C24.7178 9.86994 24.0312 9.30103 23.2308 9.17655C23.2804 7.70022 22.9244 6.34019 22.1105 5.10776C19.2615 5.16465 16.4512 5.15733 13.6021 5.21422C13.0485 6.88911 12.4948 8.564 11.9411 10.2389C11.647 9.80123 11.3527 9.36356 11.0585 8.9259C9.96619 8.9611 8.93373 9.74235 8.5742 10.7745C8.21481 11.8065 8.47949 13.0107 9.17652 13.8525C9.87367 14.6941 10.9633 15.1729 12.0558 15.2038C12.0422 16.6954 12.0217 18.223 12.0084 19.7145C11.6926 19.7936 11.246 19.8384 10.9302 19.9173C11.8666 21.987 14.128 23.5217 16.3985 23.4518C18.6692 23.382 20.9541 21.8479 21.7616 19.7244Z\"\r\n                                          fill=\"#FFC9C8\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M16.9425 13.099C16.737 14.034 15.8994 14.0692 14.9227 13.8549C13.9461 13.64 13.2135 13.197 13.4058 12.3219C13.5835 11.5128 14.4489 11.3517 15.4255 11.5666C16.4021 11.7809 17.1202 12.2898 16.9425 13.099Z\"\r\n                                          fill=\"#FF99A1\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M23.0324 12.3673C23.2512 13.2992 22.5108 13.693 21.5375 13.9211C20.5639 14.1498 19.7117 14.0664 19.5072 13.1942C19.3179 12.3879 20.0288 11.8685 21.0024 11.6401C21.9757 11.412 22.8434 11.5607 23.0324 12.3673Z\"\r\n                                          fill=\"#FF99A1\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M23.2453 9.0779C23.3658 11.0353 23.294 13.0042 23.0312 14.9478\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M23.3047 11.4639C23.6193 11.2648 23.9341 11.0662 24.249 10.8671\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M9.52344 10.5257C10.0845 10.9098 10.6454 11.2943 11.2065 11.6787\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M11.9464 15.2847C11.8758 14.954 11.805 14.6237 11.7344 14.2933\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M15.5469 18.4118C17.3055 19.1463 19.4271 18.9365 21.0079 17.8716\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M15.8449 10.8266C15.8449 10.5937 15.6558 10.4041 15.4224 10.4041C15.1892 10.4041 15 10.5937 15 10.8266C15 11.0603 15.1892 11.249 15.4224 11.249C15.6558 11.249 15.8449 11.0603 15.8449 10.8266Z\"\r\n                                          fill=\"#060305\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M21.548 10.8266C21.548 10.5937 21.3588 10.4041 21.1256 10.4041C20.8921 10.4041 20.7031 10.5937 20.7031 10.8266C20.7031 11.0603 20.8921 11.249 21.1256 11.249C21.3588 11.249 21.548 11.0603 21.548 10.8266Z\"\r\n                                          fill=\"#060305\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M18.6556 10.4163C18.7925 11.5448 18.9294 12.673 19.0662 13.8013C18.7708 13.8004 18.4754 13.7996 18.1797 13.7987\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M14.2188 8.39127C14.5342 8.00768 15.0491 7.79813 15.5426 7.85249C16.0361 7.90685 16.493 8.2237 16.7171 8.66699\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M20.0234 8.25098C20.5692 8.19296 21.115 8.13495 21.6608 8.07693\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                        <path\r\n                                          d=\"M16.4141 14.1005C16.4442 14.4101 16.6561 14.6951 16.9438 14.8134C17.2313 14.9316 17.5825 14.8779 17.8215 14.679\"\r\n                                          stroke=\"#060305\"\r\n                                          strokeWidth=\"0.344101\"\r\n                                          strokeMiterlimit=\"10\"\r\n                                          strokeLinecap=\"round\"\r\n                                          strokeLinejoin=\"round\"\r\n                                        />\r\n                                      </svg>\r\n\r\n                                      {/* <div className=\"online\"></div> */}\r\n                                    </div>\r\n                                    {ans.nodeTitle === \"Envoie data\" ? (\r\n                                      <p className=\"text\">\r\n                                        {\" \"}\r\n                                        <iframe\r\n                                          srcDoc={ans.userAnswer}\r\n                                          height={800}\r\n                                          width={600}\r\n                                        />\r\n                                      </p>\r\n                                    ) : (\r\n                                      <p className=\"text\">{ans.userAnswer}</p> // user answer\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </Fragment>\r\n                            ) : null}\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div\r\n                        className={`no-chats-container ${\r\n                          environment().isAI && \"no-chats-show mt-20\"\r\n                        }`}\r\n                      >\r\n                        {environment().isAI ? (\r\n                          <img\r\n                            src=\"\thttps://dlvkyia8i4zmz.cloudfront.net/A79FM1wBQHmW6evwmvZy_no_chats_to_show.svg\"\r\n                            alt=\"\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src=\"https://dlvkyia8i4zmz.cloudfront.net/JdqhzsvATdKZ203SvKa0_No_chats_animation__3_.svg\"\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                        <span className=\"mt-20\">\r\n                          {environment().isAI\r\n                            ? \"No chats to show under this tab.\"\r\n                            : \"No Chats to show right now\"}\r\n                        </span>\r\n                        {/* <button className=\"publish-bot-btn\">Publish your Bot</button> */}\r\n                      </div>\r\n                    )}\r\n                    {selectedChatId && allChatHistory && isChatLive && (\r\n                      <div\r\n                        className={`user-container-preview fx al-fx-end user-container-prev ${\r\n                          0\r\n                            ? \"dark-font dark-bg focus-dark\"\r\n                            : \"medium-bg light-font focus-light\"\r\n                        }`}\r\n                      >\r\n                        {window.screen.width > 768 ? (\r\n                          <textarea\r\n                            className={`userInput textBox ${\r\n                              0 ? \"dark-font dark-bg\" : \"medium-bg light-font\"\r\n                            }`}\r\n                            placeholder=\"Send A Message\"\r\n                            value={inputValue}\r\n                            onChange={(e) => setInputValue(e.target.value)}\r\n                            onKeyDown={(e) =>\r\n                              e.key === \"Enter\" &&\r\n                              !e.shiftKey &&\r\n                              handleSendReplyButton()\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          <input\r\n                            className={`userInput mob-screen-input ${\r\n                              0 ? \"dark-font dark-bg\" : \"medium-bg light-font\"\r\n                            }`}\r\n                            type=\"text\"\r\n                            placeholder=\"Send A Message\"\r\n                            value={inputValue}\r\n                            onChange={(e) => setInputValue(e.target.value)}\r\n                          />\r\n                        )}\r\n                        <div\r\n                          className={`userBtn mb-10 ${\r\n                            window.screen.width < 768\r\n                              ? \"mob-screen-userBtn\"\r\n                              : \"\"\r\n                          }`}\r\n                        >\r\n                          <div\r\n                            className=\"svg-box preview-svg-box\"\r\n                            id=\"1\"\r\n                            onClick={handleSendReplyButton}\r\n                          >\r\n                            <span>Send</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"chat-loader\">\r\n                    <SmallLoader />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* {!visitorId ? (\r\n                <div className=\"shared_info\">\r\n                  <div className=\"no-visitors border-bottom \">\r\n                    <svg\r\n                      width=\"51\"\r\n                      height=\"45\"\r\n                      viewBox=\"0 0 51 45\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        opacity=\"0.1\"\r\n                        d=\"M10.1075 11.2478L0.306534 37.6644C0.0130084 38.4709 -0.0715393 39.3386 0.0607677 40.1866C0.193075 41.0346 0.537928 41.8353 1.06319 42.5141C1.58845 43.1928 2.27701 43.7275 3.0647 44.0684C3.85238 44.4092 4.71354 44.5451 5.5679 44.4633L34.1916 41.6548C35.1025 41.5659 35.9724 41.2327 36.7096 40.6904C37.4469 40.1481 38.024 39.4168 38.3802 38.5738C38.7364 37.7308 38.8584 36.8072 38.7333 35.9006C38.6082 34.994 38.2407 34.138 37.6695 33.4229L18.8416 9.83568C18.2791 9.13361 17.5404 8.59338 16.7008 8.27015C15.8613 7.94691 14.951 7.85225 14.0629 7.99583C13.1749 8.13941 12.3408 8.51609 11.6459 9.08741C10.951 9.65873 10.4201 10.4042 10.1075 11.2478Z\"\r\n                        fill=\"#263238\"\r\n                      />\r\n                      <path\r\n                        d=\"M20.2221 3.80309L12.9995 31.1925C12.7817 32.0248 12.7786 32.8987 12.9907 33.7325C13.2027 34.5663 13.6229 35.3326 14.2119 35.9597C14.8008 36.5868 15.5393 37.0542 16.3581 37.3181C17.177 37.5819 18.0494 37.6337 18.8937 37.4685L46.9107 32.0031C47.7996 31.8258 48.625 31.4141 49.3012 30.8106C49.9775 30.207 50.4801 29.4336 50.757 28.5705C51.0338 27.7074 51.0749 26.786 50.8759 25.9016C50.6768 25.0173 50.245 24.2023 49.6251 23.541L28.8516 1.60127C28.2285 0.939229 27.4395 0.456179 26.5665 0.202359C25.6936 -0.0514606 24.7686 -0.0667875 23.8877 0.157973C23.0068 0.382733 22.2022 0.839379 21.5576 1.48042C20.9129 2.12145 20.4518 2.92347 20.2221 3.80309Z\"\r\n                        fill=\"#286B68\"\r\n                      />\r\n                      <path\r\n                        d=\"M18.8361 35.2642C18.3217 35.3573 17.7921 35.3189 17.2965 35.1525C16.8009 34.9861 16.3555 34.6971 16.0015 34.3124C15.6363 33.9418 15.3724 33.4836 15.235 32.9818C15.0976 32.4799 15.0914 31.9513 15.217 31.4463L22.4553 3.98373C22.5808 3.50386 22.8402 3.06958 23.2032 2.73158C23.5662 2.39357 24.0178 2.16578 24.5054 2.07478C25.0203 1.98281 25.55 2.0223 26.0456 2.18961C26.5411 2.35692 26.9864 2.64663 27.3401 3.03187L48.1868 24.9978C48.5525 25.3681 48.8171 25.8261 48.9553 26.3278C49.0936 26.8296 49.1009 27.3584 48.9765 27.8638C48.8501 28.3427 48.5904 28.7759 48.2274 29.1129C47.8645 29.4499 47.4133 29.6769 46.9263 29.7675L18.8361 35.2642Z\"\r\n                        fill=\"white\"\r\n                      />\r\n                      <path\r\n                        d=\"M25.8653 10.428L27.6487 10.0776C28.2245 9.98464 28.8144 10.1079 29.3048 10.4236C29.7953 10.7393 30.1517 11.2252 30.3055 11.7878L30.9436 14.1779C30.9677 14.2656 30.987 14.3547 31.0011 14.4446L32.136 21.9705C32.2245 22.4772 32.1092 22.9983 31.8154 23.4205C31.5216 23.8426 31.0729 24.1317 30.567 24.2247C30.0366 24.3127 29.4919 24.2165 29.0238 23.952C28.5556 23.6874 28.1921 23.2706 27.9939 22.7707L25.0965 15.6161C25.0613 15.5327 25.0316 15.4471 25.0075 15.3598L24.3486 12.9645C24.2629 12.6982 24.235 12.4167 24.2667 12.1388C24.2985 11.8609 24.3892 11.593 24.5327 11.3529C24.6763 11.1128 24.8694 10.9061 25.0992 10.7466C25.329 10.5871 25.5901 10.4785 25.8653 10.428ZM30.9122 26.2644L31.3986 26.1702C31.9144 26.0809 32.4449 26.1882 32.8855 26.4709C33.326 26.7536 33.6446 27.1912 33.7782 27.6974C33.8519 27.9331 33.8751 28.1817 33.8463 28.4269C33.8175 28.6722 33.7373 28.9086 33.611 29.1208C33.4847 29.333 33.315 29.5162 33.1131 29.6584C32.9113 29.8006 32.6817 29.8987 32.4394 29.9463L31.953 30.0404C31.4379 30.1299 30.9079 30.0234 30.4675 29.7417C30.0271 29.46 29.7081 29.0236 29.5733 28.5185C29.4996 28.2825 29.4764 28.0336 29.5052 27.788C29.5339 27.5424 29.6141 27.3056 29.7403 27.093C29.8666 26.8804 30.0362 26.6968 30.2381 26.554C30.44 26.4112 30.6697 26.3125 30.9122 26.2644Z\"\r\n                        fill=\"#286B68\"\r\n                      />\r\n                    </svg>\r\n                    <span className=\"no-user\">\r\n                      No Visitor data to show right now\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"chat_info\">\r\n                  <div className=\"shared_info\">\r\n                    <div className=\"profile_img\">\r\n                      <span>V</span>\r\n                    </div>\r\n                    <div className=\"profile_info\">\r\n                      <p className=\"name\">Visitor{visitorId}</p>\r\n                      {/* <div className=\"shared_icons\">\r\n                        <span>\r\n                          <svg\r\n                            width=\"16\"\r\n                            height=\"17\"\r\n                            viewBox=\"0 0 16 17\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M15.7616 0.183416C15.7596 0.182071 15.7589 0.18007 15.7576 0.178757C15.7536 0.175411 15.7496 0.174754 15.7456 0.171408C15.7103 0.140732 15.6683 0.120719 15.6271 0.0987041C15.6137 0.0920435 15.6038 0.0806923 15.5898 0.0746883C15.5878 0.0740317 15.5864 0.0740317 15.5851 0.0733437C15.5705 0.0673398 15.5585 0.0566765 15.5438 0.0513292C15.4886 0.0306594 15.43 0.0239675 15.3707 0.0186515C15.3527 0.0173069 15.3354 0.0093016 15.3174 0.0093016C15.2402 0.00864492 15.1623 0.0213095 15.0864 0.0486712L0.438671 5.38549C0.206315 5.4702 0.0398424 5.67703 0.00588624 5.9225C-0.0267279 6.16801 0.0777933 6.41148 0.279533 6.55557L4.70781 9.725L5.333 14.1125C5.37161 14.3794 5.5667 14.5969 5.82771 14.6642C5.88229 14.6783 5.93822 14.6849 5.99284 14.6849C6.19857 14.6849 6.39766 14.5889 6.5248 14.4181L8.09612 12.3201L12.2168 15.861C12.34 15.9664 12.4938 16.0218 12.6509 16.0218C12.7254 16.0218 12.8 16.0091 12.8733 15.9838C13.097 15.9037 13.2628 15.7096 13.3054 15.4748L15.9892 0.811141C16.0332 0.570983 15.94 0.334828 15.7616 0.183416ZM7.49424 10.8945L7.4463 10.9638L6.42428 12.3294L6.03743 9.61427L11.8146 4.59697L7.49424 10.8945Z\"\r\n                              fill=\"#3FABE8\"\r\n                            />\r\n                          </svg>\r\n                        </span>\r\n                        <span>\r\n                          <svg\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            viewBox=\"0 0 16 16\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15Z\"\r\n                              stroke=\"#FA7B7B\"\r\n                              strokeWidth=\"1.5\"\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                            />\r\n                            <path\r\n                              d=\"M3.33337 12.6668L12.6667 3.3335\"\r\n                              stroke=\"#FA7B7B\"\r\n                              strokeWidth=\"1.5\"\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                            />\r\n                          </svg>\r\n                        </span>\r\n\r\n                        <span>\r\n                          <svg\r\n                            width=\"16\"\r\n                            height=\"16\"\r\n                            viewBox=\"0 0 16 16\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <g clipPath=\"url(#clip0_1105_225)\">\r\n                              <path\r\n                                d=\"M2.66663 4.6665C2.66663 6.5134 2.66663 9.11587 2.66663 10.3752C2.74597 11.4665 2.8253 12.8937 2.90465 13.9011C2.98398 15.0764 3.93605 15.9998 5.04679 15.9998H10.9178C12.0286 15.9998 12.9807 15.0764 13.06 13.9011C13.1393 12.8937 13.2187 11.4665 13.298 10.3752C13.3773 9.11587 13.298 6.5134 13.298 4.6665H2.66663Z\"\r\n                                fill=\"#DA2F2F\"\r\n                              />\r\n                              <path\r\n                                d=\"M13.983 2.60869H11.8462L11.1625 1.30435C10.7351 0.521744 9.96587 0 9.11112 0H7.05987C6.20517 0 5.35047 0.521744 5.00859 1.30435L4.15389 2.60869H2.01713C1.67526 2.60869 1.33337 2.95652 1.33337 3.30435C1.33337 3.65217 1.67526 4 2.01713 4H13.983C14.3248 4 14.6667 3.73913 14.6667 3.30435C14.6667 2.86957 14.3248 2.60869 13.983 2.60869ZM5.60688 2.60869L6.03423 1.91304C6.20517 1.56521 6.54704 1.30435 6.97437 1.30435H9.02571C9.45304 1.30435 9.79487 1.47826 9.96587 1.91304L10.3932 2.60869H5.60688Z\"\r\n                                fill=\"#DA2F2F\"\r\n                              />\r\n                            </g>\r\n                            <defs>\r\n                              <clipPath id=\"clip0_1105_225\">\r\n                                <rect width=\"16\" height=\"16\" fill=\"white\" />\r\n                              </clipPath>\r\n                            </defs>\r\n                          </svg>\r\n                        </span>\r\n                      </div> }\r\n                    </div>\r\n                  </div>\r\n                  <ul className=\"channel\">\r\n                    <li>\r\n                      <div className=\"channel_name\">\r\n                        <svg\r\n                          width=\"14\"\r\n                          height=\"14\"\r\n                          viewBox=\"0 0 14 14\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M7 0C3.1339 0 0 3.1339 0 7C0 10.8661 3.1339 14 7 14C10.8661 14 14 10.8661 14 7C14 3.1339 10.8661 0 7 0ZM7 12.6L8.4 11.2L9.1 10.5V9.1H7.7V8.4L7 7.7H4.9V9.8L6.3 11.2V12.551C3.542 12.2052 1.4 9.8504 1.4 7L2.1 7.7H3.5V6.3H4.9L7 4.2V2.8H5.6L4.9 2.1V1.813C5.5489 1.547 6.258 1.4 7 1.4C7.742 1.4 8.4511 1.5484 9.1 1.813V2.8L8.4 3.5V4.9L9.1 5.6L11.291 3.409C11.8174 4.0369 12.2038 4.7838 12.4152 5.6H11.2L9.8 7V8.4L10.5 9.1H11.9L12.1002 9.3002C11.221 11.242 9.268 12.6 7 12.6Z\"\r\n                            fill=\"#27A013\"\r\n                          />\r\n                        </svg>{\" \"}\r\n                        <p>{countryName}</p>\r\n                      </div>\r\n                      <div className=\"channel_info text-left\">\r\n                        {\" \"}\r\n                        Seen 08 2022, 03:59PM{\" \"}\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div className=\"channel_name\">\r\n                        <svg\r\n                          width=\"14\"\r\n                          height=\"14\"\r\n                          viewBox=\"0 0 14 14\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M5.94861 12.8958H8.05153L8.36534 14H9.81079L7.82566 5.65416C8.29875 5.37183 8.61638 4.85512 8.61638 4.2653C8.61638 3.37412 7.89131 2.64905 7.00007 2.64905C6.10883 2.64905 5.38376 3.37412 5.38376 4.2653C5.38376 4.85512 5.70139 5.3719 6.17449 5.65416L4.18929 14H5.6348L5.94861 12.8958ZM7.00001 3.65038C7.33904 3.65038 7.61493 3.9262 7.61493 4.26523C7.61493 4.60433 7.33904 4.88021 7.00001 4.88021C6.66091 4.88021 6.38509 4.60433 6.38509 4.26523C6.38509 3.9262 6.66098 3.65038 7.00001 3.65038ZM10.1772 6.97769L9.29201 6.09252C9.78006 5.60447 10.0489 4.95557 10.0489 4.26536C10.0489 3.57515 9.78006 2.92625 9.29201 2.4382L10.1772 1.55309C10.9016 2.2776 11.3006 3.24087 11.3006 4.26542C11.3006 5.28997 10.9016 6.25318 10.1772 6.97769ZM11.7301 8.53078L10.845 7.64562C11.7479 6.74274 12.2452 5.54232 12.2452 4.26536C12.2452 2.98846 11.7479 1.78798 10.845 0.885104L11.7301 0C12.8694 1.13933 13.4969 2.65412 13.4969 4.26536C13.4969 5.87666 12.8695 7.39145 11.7301 8.53078ZM3.82291 6.97769C3.0984 6.25318 2.69941 5.28991 2.69941 4.26536C2.69941 3.24081 3.0984 2.27754 3.82285 1.55303L4.70801 2.43814C4.21996 2.92625 3.95115 3.57515 3.95115 4.26536C3.95115 4.95557 4.2199 5.60447 4.70801 6.09252L3.82291 6.97769ZM1.75491 4.26536C1.75491 5.54226 2.25217 6.74274 3.15504 7.64562L2.26988 8.53078C1.13061 7.39145 0.503174 5.87666 0.503174 4.26536C0.503174 2.65412 1.13061 1.13933 2.26988 0L3.15504 0.885166C2.2521 1.78798 1.75491 2.98846 1.75491 4.26536Z\"\r\n                            fill=\"#674FFF\"\r\n                          />\r\n                        </svg>\r\n                        <p>Channel</p>\r\n                      </div>\r\n                      <div className=\"channel_info text-left\">\r\n                        {\" \"}\r\n                        Seen Mar08 2022, 03:59PM{\" \"}\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div className=\"channel_name\">\r\n                        <svg\r\n                          width=\"14\"\r\n                          height=\"14\"\r\n                          viewBox=\"0 0 14 14\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M10.4453 12.9062C9.90391 12.9062 9.41172 12.5234 9.21484 11.9219C9.21484 11.8672 9.21484 11.8125 9.16562 11.8125H4.78516C4.78516 11.8672 4.78516 11.9219 4.73594 11.9219C4.58828 12.5234 4.09609 12.9062 3.55469 12.9062C3.25937 12.9062 3.0625 13.125 3.0625 13.4531C3.0625 13.7812 3.25937 14 3.55469 14H10.4453C10.7406 14 10.9375 13.7812 10.9375 13.4531C10.9375 13.125 10.7406 12.9062 10.4453 12.9062Z\"\r\n                            fill=\"black\"\r\n                          />\r\n                          <path\r\n                            d=\"M12.5 0.4375H1.5C0.65 0.4375 0 1.0875 0 1.9375V9.4375C0 10.2875 0.65 10.9375 1.5 10.9375H4.95H9H12.5C13.35 10.9375 14 10.2875 14 9.4375V1.9375C14 1.0875 13.35 0.4375 12.5 0.4375Z\"\r\n                            fill=\"black\"\r\n                          />\r\n                        </svg>\r\n                        <p>Browser</p>\r\n                      </div>\r\n                      <div className=\"channel_info text-left\">\r\n                        {\" \"}\r\n                        {browserName}{\" \"}\r\n                      </div>\r\n                    </li>\r\n\r\n                    <li>\r\n                      <div className=\"channel_name\">\r\n                        <svg\r\n                          width=\"14\"\r\n                          height=\"14\"\r\n                          viewBox=\"0 0 14 14\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M6.99996 0C3.14021 0 0 3.14013 0 6.99996C0 10.8598 3.14021 14 6.99996 14C10.8597 14 13.9999 10.8598 13.9999 6.99996C13.9999 3.14013 10.8598 0 6.99996 0ZM11.0195 5.81761L6.62174 10.2153C6.43475 10.4023 6.18619 10.5052 5.92177 10.5052C5.65735 10.5052 5.40879 10.4023 5.2218 10.2153L2.98046 7.974C2.79347 7.787 2.69048 7.53844 2.69048 7.27402C2.69048 7.00953 2.79347 6.76097 2.98046 6.57397C3.16738 6.38698 3.41595 6.28399 3.68044 6.28399C3.94485 6.28399 4.19349 6.38698 4.38041 6.57405L5.9217 8.11526L9.61937 4.41759C9.80636 4.2306 10.0549 4.12768 10.3193 4.12768C10.5838 4.12768 10.8323 4.2306 11.0193 4.41759C11.4054 4.8037 11.4054 5.43165 11.0195 5.81761Z\"\r\n                            fill=\"#3FABE8\"\r\n                          />\r\n                        </svg>\r\n                        <p>Created</p>\r\n                      </div>\r\n                      <div className=\"channel_info text-left\">\r\n                        {\" \"}\r\n                        03/08/2022, 03:59PM{\" \"}\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              )} */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n      {/* <Preview /> */}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n"],"names":["useGetAllLiveChats","botCustomIds","dispatch","useDispatch","useQuery","response","axiosGet","senderIds","value","userSlice","useGetAllbotUserResponses","ChatsLeftSideNav","liveChatSocket","setCurrentDrawFlowId","bot","setBot","useState","searchBot","setSearchBot","loadSpinner","setLoadSpinner","searchInput","setSearchInput","userId","useSelector","state","customId","chatId","senderId","liveRoomIds","loadedBotCustomIds","setLoadedBotCustomIds","allChats","setAllChats","getBotInOne","useGetAllBotInOne","allLiveChats","getAllbotUserResponsesQuery","useEffect","prevChats","selectFirstIds","prev","fetchParticularLiveChat","input","_c","_b","_a","_f","_e","_d","endedLiveChat","item","newCompletedChats","roomId","drawFlowId","$","ele","data","handleRegexReplace","result","char","setBotId","botId","setCustomId","setChatId","setSenderId","Fragment","jsxDEV","ChatIcon","environment","e","index","userList","SmallLoader","ongoingLiveChatSenderIds","visitor","this","SupportSideNav","SettingsLeftSideNav","environmentData","Chats","props","location","useLocation","inputValue","setInputValue","route","useNavigate","query","loader","setLoader","allChatHistory","setAllChatHistory","visitorId","setVistorId","selectedBotId","selectedChatId","selectedRoomId","credId","setCredId","isLoggedIn","userReply","setUserReply","isChatLive","setisChatLive","useRef","currentBotId","currentDrawFlowId","handleSendReplyButton","nodeTitle","temp","axiosPost","endLiveChat","userIdAsString","TabTitle","err","io","Loader","motion","Header","ans","moment"],"mappings":"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"}