{"version":3,"file":"index-Ds4Cdw-U.js","sources":["../../src/components/loaders/ThreeDot.tsx","../../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction ThreeDot() {\r\n  return (\r\n    <div className=\"three-dot-loader\">\r\n      <div className=\"dot1\"></div>\r\n      <div className=\"dot2\"></div>\r\n      <div className=\"dot3\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThreeDot;\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["ThreeDot","jsxDEV","SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","circle","direction","duration","enableAnimation","style","Skeleton","count","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","styleOptions","className","inline","elements","countCeil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","el","SkeletonTheme","children"],"mappings":"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","x_google_ignoreList":[1]}