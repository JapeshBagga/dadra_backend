{"version":3,"file":"Integration-C2gKFI2J.js","sources":["../../src/pages/integration/Integration.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userSlice } from \"@/redux/User\";\r\nimport { State } from \"@/redux/Types\";\r\nimport { TabTitle } from \"@/utils/TitleFuntion\";\r\nimport { INTEGRATIONS, SOCIALS, type ConfigId } from \"@/constants/ConfigData\";\r\nimport environment from \"@/constants/Environment\";\r\nimport Smtp from \"@/components/integration-modals/Smtp\";\r\nimport Twilio from \"@/components/integration-modals/Twilio\";\r\nimport Firebase from \"@/components/integration-modals/Firebase\";\r\nimport OpenAi from \"@/components/integration-modals/OpenAi\";\r\nimport LinkedIn from \"@/components/integration-modals/LinkedIn\";\r\nimport Zapier from \"@/components/builder/config/Zapier\";\r\nimport LockIcon from \"@/assets/LockIcon\";\r\nimport \"@/styles/config.css\";\r\nimport {\r\n  AiChatBotShortLogo,\r\n  ChatbotBuilderSVG,\r\n  DoubleArrowSvg,\r\n  IntOmniLogoSvg,\r\n  IntegrationIconSvg,\r\n  ZapierIconSvg,\r\n} from \"@/assets/AiBotAssets\";\r\nimport { motion } from \"framer-motion\";\r\nimport Gmail from \"@/components/integration-modals/Gmail\";\r\nimport Outlook from \"@/components/integration-modals/Outlook\";\r\nimport Warmy from \"@/components/integration-modals/Warmy\";\r\n\r\nconst environmentData = environment();\r\n\r\ninterface Props {\r\n  calledFromBuilder?: boolean;\r\n}\r\n\r\nexport default function Integration({ calledFromBuilder }: Props) {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const plan: any = useSelector((state: State) => state.user.plan);\r\n  const [selectedTab, setSelectedTab] = useState<Tab>(\"integrations\");\r\n  const [openModalId, setOpenModalId] = useState<ConfigId | \"\">(\"\");\r\n  const [isFeatureLock, setIsFeatureLock] = useState(false);\r\n\r\n  useEffect(() => {\r\n    TabTitle(\" | Integrations\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const isFeatureLock =\r\n      environmentData.isAI && !plan?.ai_currentLimits?.aiKey;\r\n    setIsFeatureLock(isFeatureLock);\r\n  }, [plan]);\r\n\r\n  function handleModalClose() {\r\n    setOpenModalId(\"\");\r\n  }\r\n  const trial = useSelector(\r\n    (state: State) => state.user.plan?.[\"trial\"] ?? null,\r\n  );\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, translateY: 15 }}\r\n      animate={{ opacity: 1, translateY: 0 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"integration-dashboard\"\r\n    >\r\n      <div className=\"general-container\">\r\n        <div className=\"gen-header profile-settings-nav\">\r\n          <div className=\"heading-wrapper profile-header fx al-cnt\">\r\n            <h1 className=\"flex-cnt no-m gap-8\">\r\n              <IntegrationIconSvg />\r\n              Integrations\r\n            </h1>\r\n            {/* <span className=\"integration-subheading\">\r\n              Connect with the right tools\r\n            </span> */}\r\n          </div>\r\n          <div className=\"settings-list\">\r\n            <ul className=\"integration-ul fx fx-d-col\">\r\n              {TAB.map((tab, index) => (\r\n                <li\r\n                  key={index}\r\n                  className={\r\n                    tab.name === selectedTab\r\n                      ? \"li-active capitalize\"\r\n                      : \"capitalize\"\r\n                  }\r\n                  onClick={() => setSelectedTab(tab.name)}\r\n                >\r\n                  {tab.icon} {tab.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {selectedTab === \"integrations\" && (\r\n          <div className=\"settings-container\">\r\n            <div className=\"api-header fx al-cnt mb-30\">\r\n              <h1>Integration</h1>\r\n            </div>\r\n            <div className=\"native-container settings_wrapper mt-84\">\r\n              {/* <div className=\"nat-head\">\r\n              <h1>Integrations</h1>\r\n            </div> */}\r\n\r\n              {/* <hr /> */}\r\n              <div className=\"gen-main-content native-head\"></div>\r\n              <div className=\"native-head jstfy-sp-btw\">\r\n                <h2 className=\"settings_heading\">Native</h2>\r\n              </div>\r\n              <div className=\"integrations mt-15\">\r\n                {INTEGRATIONS.map(\r\n                  (config, index) =>\r\n                    (!environmentData.isAI || config.id === \"openai\") && (\r\n                      <motion.div\r\n                        initial={{ opacity: 0, translateX: 70 }}\r\n                        animate={{ opacity: 1, translateX: 0 }}\r\n                        transition={{ duration: 0.05 }}\r\n                        key={index}\r\n                        className={`integration-box ${(\r\n                          (config.name === \"OPEN AI\" && isFeatureLock) ||\r\n                          (config.name === \"warmy\" && (trial || trial === null))\r\n                      ) ? \"integration-locked\" : \"\"}`}\r\n                        onClick={() => {\r\n                          if (\r\n                            (config.name === \"OPEN AI\" && isFeatureLock) ||\r\n                            (config.name === \"warmy\" && (trial || trial === null))\r\n                          )\r\n                            return;\r\n                          setOpenModalId(config.id);\r\n                        }}\r\n                      >\r\n                        <div className=\"integration-inner\">\r\n                          <div\r\n                            className=\"integration-box-head\"\r\n                            style={{ backgroundColor: config.background_color }}\r\n                          >\r\n                            {environmentData.isAI ? (\r\n                              <AiChatBotShortLogo />\r\n                            ) : (\r\n                              <IntOmniLogoSvg />\r\n                            )}\r\n                            <DoubleArrowSvg />\r\n                            <img src={config.logo} />\r\n                          </div>\r\n                          <div className=\"integration-box-content\">\r\n                            <h4 className=\"fx al-cnt mb-10 gap-10\">\r\n                              {environmentData.isAI\r\n                                ? \"Chatbotbuilder\"\r\n                                : \"Omniengage\"}{\" \"}\r\n                              <span> + </span> {config.name}\r\n                            </h4>\r\n                            <p className=\"mb-20\">{config.description}</p>  \r\n                            <span className=\"view_int\">View Integration</span>\r\n                          </div>\r\n                        </div>\r\n                        { ( (config.name === \"OPEN AI\" && isFeatureLock) ||\r\n                          (config.name === \"warmy\" && (trial || trial === null))) && (\r\n                          <div className=\"locked-default-card flex-cnt fx-d-col\">\r\n                            <LockIcon />\r\n                            <h4>Feature locked</h4>\r\n                            <p>\r\n                              Please upgrade your current plan to use this\r\n                              feature\r\n                            </p>\r\n                            <button\r\n                              className=\"buy-feature flex-cnt\"\r\n                              onClick={() => {\r\n                                navigate(\"/settings\");\r\n                                dispatch(userSlice.actions.setSettings(2));\r\n                              }}\r\n                            >\r\n                              Buy Plan\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </motion.div>\r\n                    ),\r\n                )}\r\n              </div>\r\n              {/* {!environmentData.isAI && (\r\n                <div>\r\n                  <div className=\"mt-30 native-head jstfy-sp-btw\">\r\n                    <h2 className=\"settings_heading\">Social</h2>\r\n                  </div>\r\n                  <div className=\"integrations mt-15\">\r\n                    {SOCIALS.map((value, index) => (\r\n                      <motion.div\r\n                        initial={{ opacity: 0, translateX: 70 }}\r\n                        animate={{ opacity: 1, translateX: 0 }}\r\n                        transition={{ duration: 0.05 }}\r\n                        key={index}\r\n                        className=\"integration-box disable\"\r\n                      >\r\n                        <div className=\"integration-inner\">\r\n                          <div\r\n                            className=\"integration-box-head\"\r\n                            style={{ backgroundColor: value.background_color }}\r\n                          >\r\n                            <IntOmniLogoSvg />\r\n                            <DoubleArrowSvg />\r\n                            <img src={value.logo} />\r\n                          </div>\r\n                          <div className=\"integration-box-content\">\r\n                            <h4 className=\"mb-10\">\r\n                              OMNIENGAGE <span>+</span> {value.name}\r\n                            </h4>\r\n                            <p className=\"mb-20\">{value.description}</p>\r\n                            <span className=\"view_int\">View Integration</span>\r\n                          </div>\r\n                        </div>\r\n                      </motion.div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )} */}\r\n              {/* <div className=\"no-result-found\">\r\n              <img\r\n                src=\"https://res.cloudinary.com/dnag1wvx8/image/upload/v1662360087/Frame_1826_yhxiyb.svg\"\r\n                alt=\"\"\r\n              />\r\n              <h3>No result Found</h3>\r\n              <div className=\"suggestions\">\r\n                <h1>Suggestions</h1>\r\n                <ul>\r\n                  <li>Make sure that all words are spelled correctly.</li>\r\n                  <li>Try different words.</li>\r\n                </ul>\r\n              </div>\r\n            </div> */}\r\n              {openModalId === \"smtp\" && <Smtp onClose={handleModalClose} />}\r\n              {openModalId === \"twilio\" && (\r\n                <Twilio onClose={handleModalClose} />\r\n              )}\r\n              {openModalId === \"firebase\" && (\r\n                <Firebase onClose={handleModalClose} />\r\n              )}\r\n              {openModalId === \"openai\" && (\r\n                <OpenAi onClose={handleModalClose} />\r\n              )}\r\n              {openModalId === \"linkedin\" && (\r\n                <LinkedIn onClose={handleModalClose} />\r\n              )}\r\n              {openModalId === \"gmail\" && <Gmail onClose={handleModalClose} />}\r\n              {openModalId === \"outlook\" && (\r\n                <Outlook onClose={handleModalClose} />\r\n              )}\r\n              {openModalId === \"warmy\" && <Warmy onClose={handleModalClose} />}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {selectedTab === \"zapier\" && (\r\n          <div className=\"native-container\">\r\n            <Zapier calledFromBuilder={calledFromBuilder} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nconst TAB = [\r\n  {\r\n    name: \"integrations\",\r\n    icon: <IntegrationIconSvg />,\r\n  },\r\n  {\r\n    name: \"zapier\",\r\n    icon: <ZapierIconSvg />,\r\n  },\r\n] as const;\r\ntype Tab = (typeof TAB)[number][\"name\"];\r\n"],"names":["environmentData","environment","Integration","calledFromBuilder","navigate","useNavigate","dispatch","useDispatch","plan","useSelector","state","selectedTab","setSelectedTab","useState","openModalId","setOpenModalId","isFeatureLock","setIsFeatureLock","useEffect","TabTitle","_a","handleModalClose","trial","jsxDEV","motion","IntegrationIconSvg","TAB","tab","index","INTEGRATIONS","config","AiChatBotShortLogo","IntOmniLogoSvg","DoubleArrowSvg","LockIcon","userSlice","Smtp","Twilio","Firebase","OpenAi","LinkedIn","Gmail","Outlook","Warmy","Zapier","this","ZapierIconSvg"],"mappings":"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"}