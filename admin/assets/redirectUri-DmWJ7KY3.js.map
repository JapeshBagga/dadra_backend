{"version":3,"file":"redirectUri-DmWJ7KY3.js","sources":["../../src/pages/redirectUri.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userSlice } from \"@/redux/User\";\r\nimport { axiosPost } from \"@/services/axiosService\";\r\nimport Loader from \"@/components/loaders/Loader\";\r\nimport useStore from \"./omni-builder/store\";\r\nimport BooleanModal from \"@/components/builder/BooleanModal\";\r\n\r\nexport default function redirectUri() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { integrationType } = useParams();\r\n  const [loader, setLoader] = useState(true);\r\n  const [searchParams] = useSearchParams();\r\n  const [successfullyLogin, setSuccessfullyLogin] = useState(false);\r\n  const setOpenConfigModalId = useStore((state) => state.setOpenConfigModalId);\r\n  const [showLoginLogoutPrompt, setShowLoginLogoutPrompt] = useState(false);\r\n\r\n  const prevStateJSON: any = searchParams.get(\"state\") ?? \"{}\";\r\n  let { prevUrl, forced: forcedLogin } = JSON.parse(prevStateJSON);\r\n  prevUrl = prevUrl ? prevUrl + \"?tab=configure\" : \"/dashboard\";\r\n\r\n  useEffect(() => {\r\n    getAuthCode(integrationType);\r\n  }, []);\r\n\r\n  async function emailAuthorization(type: string, code: string) {\r\n    try {\r\n      const res = await axiosPost(\"/configurations/emailConfig/\" + type, {\r\n        code,\r\n      });\r\n      if (res.status == 200) setSuccessfullyLogin(true);\r\n    } catch (err: any) {\r\n      dispatch(\r\n        userSlice.actions.setToastPopUp({\r\n          show: true,\r\n          toastType: \"error\",\r\n          message:\r\n            err.response?.data?.message ??\r\n            err?.message ??\r\n            \"Something went wrong\",\r\n        }),\r\n      );\r\n      console.log(err);\r\n    } finally {\r\n      setLoader(false);\r\n      setTimeout(() => {\r\n        close();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  async function getAuthCode(integrationType: string | undefined) {\r\n    const code = searchParams.get(\"code\");\r\n    if (!code) throw new Error(\"Login failed, Invalid code\");\r\n    if (!integrationType) throw new Error(\"Invalid Integration Type\");\r\n\r\n    if (integrationType === \"gmail\" || integrationType === \"outlook\")\r\n      await emailAuthorization(integrationType, code);\r\n    else if (integrationType === \"whatsapp\" || integrationType === \"facebook\")\r\n      await setMetaConfig();\r\n    else navigate(\"/dashboard\");\r\n  }\r\n\r\n  async function setMetaConfig() {\r\n    try {\r\n      const code = searchParams.get(\"code\");\r\n\r\n      if (!integrationType) throw new Error(\"Invalid provider\");\r\n      if (!code) throw new Error(\"Unable to connect whatsapp business account\");\r\n\r\n      const config = await axiosPost(\r\n        `/users/setAppConfig?forced=${forcedLogin ?? false}`,\r\n        {\r\n          code: code,\r\n          siteName: integrationType,\r\n        },\r\n      );\r\n\r\n      if (integrationType === \"whatsapp\") {\r\n        if (config?.data?.success === false) {\r\n          setShowLoginLogoutPrompt(true);\r\n          return;\r\n        }\r\n        setOpenConfigModalId(\"whatsapp\");\r\n      }\r\n      if (integrationType === \"facebook\") setOpenConfigModalId(\"facebook\");\r\n      navigate(prevUrl);\r\n    } catch (err: any) {\r\n      navigate(prevUrl);\r\n      dispatch(\r\n        userSlice.actions.setToastPopUp({\r\n          show: true,\r\n          toastType: \"error\",\r\n          message:\r\n            err.response?.data?.message ??\r\n            err?.message ??\r\n            \"Something went wrong\",\r\n        }),\r\n      );\r\n    }\r\n  }\r\n  // for whatsapp when account is tried to login to a different company\r\n  const handleLoginLogoutPopup = (forced: boolean) => {\r\n    if (!forced) {\r\n      navigate(prevUrl);\r\n      return;\r\n    }\r\n\r\n    navigate(prevUrl + \"&forced=true\");\r\n    setOpenConfigModalId(\"whatsapp\");\r\n  };\r\n\r\n  const close = () => {\r\n    window.close();\r\n  };\r\n\r\n  if (showLoginLogoutPrompt) {\r\n    return (\r\n      <BooleanModal\r\n        onConfirm={() => handleLoginLogoutPopup(true)}\r\n        onCancel={() => handleLoginLogoutPopup(false)}\r\n        content={{\r\n          title: \"Whatsapp account already connected to Omniengage\",\r\n          message:\r\n            \"This whatsapp account is already connected to another company. Do you want to logout from previous company and login here? *You will need to re-login Meta if you click yes\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loader ? (\r\n        <Loader />\r\n      ) : successfullyLogin ? (\r\n        <>\r\n          <h1>Login Successfully</h1>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div id=\"redirect-error\" className=\"modal fade\" role=\"dialog\">\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content modal-bg\">\r\n                <div className=\"modal-body text-center\">\r\n                  <div id=\"error\" className=\"\">\r\n                    <p className=\"subheading\">\r\n                      Sorry we were not able to process this request.\r\n                      <br />\r\n                      Please try again.\r\n                    </p>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-close btn-hover hide\"\r\n                      onClick={close}\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["redirectUri","dispatch","useDispatch","navigate","useNavigate","integrationType","useParams","loader","setLoader","useState","searchParams","useSearchParams","successfullyLogin","setSuccessfullyLogin","setOpenConfigModalId","useStore","state","showLoginLogoutPrompt","setShowLoginLogoutPrompt","prevStateJSON","prevUrl","forcedLogin","useEffect","getAuthCode","emailAuthorization","type","code","axiosPost","err","userSlice","_b","_a","close","setMetaConfig","config","_c","handleLoginLogoutPopup","forced","jsxDEV","BooleanModal","Fragment","Loader"],"mappings":"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"}