{"version":3,"file":"plansDetails-CUC7IOLO.js","sources":["../../src/components/pendingPlans/plansDetails.tsx"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { userSlice } from \"../../redux/User\";\r\nimport { State } from \"../../redux/Types\";\r\nimport { axiosGet, axiosPost } from \"../../services/axiosService\";\r\nimport { setCookie } from \"../../services/cookieService\";\r\nimport environment from \"./../../constants/Environment\";\r\nimport FreePlan from \"../../assets/plansimage/FreePlan\";\r\nimport PlusPlan from \"../../assets/plansimage/PlusPlan\";\r\nimport CustomPlan from \"../../assets/plansimage/CustomPlan\";\r\nimport moment from \"moment\";\r\nimport IconSideNav from \"../../components/layoutElements/iconSideNav\";\r\nimport DisableLayout from \"../../layouts/DisableLayout\";\r\nimport SmallLoader from \"../loaders/SmallLoader\";\r\nimport AIPricingExpired from \"../../pages/NewPricing/AIPricingExpired\";\r\nimport Coupon from \"../coupon\";\r\nimport { Crisp } from \"crisp-sdk-web\";\r\nimport PaymentSummary from \"../layoutElements/PaymentSummary\";\r\nimport useGetCompany from \"@/hooks/useGetCompany\";\r\nconst environmentData = environment();\r\n\r\nconst PlansDetails = () => {\r\n  const isAi = environment().isAI;\r\n  const dispatch = useDispatch();\r\n  const router = useNavigate();\r\n  const isLoggedIn = useSelector((state: State) => state.user.isLoggedIn);\r\n  const [checked, setChecked] = useState<any>(false);\r\n  const loader = useSelector((state: State) => state.user.switchLoad);\r\n  const [plan, setPlan] = useState<any>({});\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [billing, setBilling] = useState<any>();\r\n  const [loadCompany, setLoadCompany] = useState<boolean>(true);\r\n  const [planType, setPlanType] = useState<any>(\"\");\r\n  const [subscriptionId, setSubscriptionId] = useState<any>(\"\");\r\n  const [isApplied, setIsApplied] = useState<boolean>(false);\r\n  const [showCoupon, setShowCoupon] = useState<boolean>(false);\r\n  const [code, setCode] = useState<string>(\"\");\r\n  const [planCode, setPlaneCode] = useState('')\r\n  const [subscription, setSubscription] = useState<any>({});\r\n  const [checkOutPage, setCheckOutPage] = useState(false);\r\n  const [customerId, setCustomerId] = useState<any>(\"\");\r\n  const [subId, setSubId] = useState<any>(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const companyDetails = useGetCompany();\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      router(\"/login\");\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    dispatch(userSlice.actions.setSettings(2));\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (companyDetails.isSuccess) {\r\n      const response = companyDetails.data;\r\n      \r\n      const plan = isAi\r\n        ? response.data.data?.ai_subscription?.plan\r\n        : response.data.data?.subscription?.plan;\r\n      const billing = isAi\r\n        ? response.data.data?.ai_billing\r\n        : response.data.data?.billing;\r\n      if (response && response.data.token) {\r\n        setCookie(\r\n          \"token\",\r\n          response.data.token,\r\n          1,\r\n          environment()?.PUBLIC_DOMAIN,\r\n          \"/\"\r\n        );\r\n        setCookie(\r\n          \"token\",\r\n          response.data.token,\r\n          1,\r\n          environment()?.PAGE_DOMAIN,\r\n          \"/\"\r\n        );\r\n      }\r\n      if (plan.status === \"active\" || plan.status === \"trial\") {\r\n        return router(\"/dashboard\");\r\n      }\r\n      // } else if (plan?.plan_code.trim() !== \"trial_01\" && plan?.plan_code.trim() !== \"trial_02\" ) {\r\n      //   return router(\"/plan_expired\");\r\n      // }\r\n      setBilling(billing);\r\n      setPlan(plan);\r\n      setLoadCompany(false);\r\n      setPlanType(response.data?.data?.ai_subscription?.interval_unit);\r\n      setSubscriptionId(response?.data?.data?.ai_subscription?.subscription_id);\r\n      setSubId(response?.data?.data?.subscription?.subscription_id);\r\n      setCustomerId(response.data.data?.subscription?.customer?.customer_id);\r\n      setSubscription(response.data.data)\r\n     \r\n    }\r\n  }, [companyDetails.data]);\r\n\r\n  // useEffect(() => {\r\n  //   axiosGet(`/users/getCompany`).then((response) => {\r\n  //     const plan = isAi\r\n  //       ? response.data.data?.ai_subscription?.plan\r\n  //       : response.data.data?.subscription?.plan;\r\n  //     const billing = isAi\r\n  //       ? response.data.data?.ai_billing\r\n  //       : response.data.data?.billing;\r\n  //     if (response && response.data.token) {\r\n  //       setCookie(\r\n  //         \"token\",\r\n  //         response.data.token,\r\n  //         1,\r\n  //         environment()?.PUBLIC_DOMAIN,\r\n  //         \"/\"\r\n  //       );\r\n  //       setCookie(\r\n  //         \"token\",\r\n  //         response.data.token,\r\n  //         1,\r\n  //         environment()?.PAGE_DOMAIN,\r\n  //         \"/\"\r\n  //       );\r\n  //     }\r\n  //     if (plan.status === \"live\" || plan.status === \"trial\") {\r\n  //       return router(\"/dashboard\");\r\n  //     }\r\n  //     // } else if (plan?.plan_code.trim() !== \"trial_01\" && plan?.plan_code.trim() !== \"trial_02\" ) {\r\n  //     //   return router(\"/plan_expired\");\r\n  //     // }\r\n  //     setBilling(billing);\r\n  //     setPlan(plan);\r\n  //     setLoadCompany(false);\r\n  //     setPlanType(response.data?.data?.ai_subscription?.interval_unit);\r\n  //     setSubscriptionId(response?.data?.data?.ai_subscription?.subscription_id);\r\n  //     setSubId(response?.data?.data?.subscription?.subscription_id);\r\n  //     setCustomerId(response.data.data?.subscription?.customer?.customer_id);\r\n  //     setSubscription(response.data.data)\r\n  //   });\r\n  // }, [loader]);\r\n\r\n\r\n  const checkSaveMethod = async (planCode, price) => {\r\n    setPlaneCode(planCode);\r\n    setLoading(true);\r\n    setPrice(price)\r\n\r\n    try {\r\n      if (plan?.price > price) {\r\n        // for downgrade\r\n        const data = {\r\n          subId,\r\n          plan_code:planCode\r\n        };\r\n        const downgrade = await axiosPost(\"/payments/omniDowngrade\", data);\r\n        dispatch(\r\n          userSlice.actions.setInfoModal({\r\n            showModal: true,\r\n            modalType: \"success\",\r\n            modalTitle: \"Your plan downgraded successfully\",\r\n            modalMessage:\r\n              \"The downgrade changes made will be reflected in your account from next billing.\",\r\n            modalButtonText: \"Go To Billing\",\r\n          }),\r\n        );\r\n\r\n      } else {\r\n        setCheckOutPage(true);\r\n      }\r\n    } catch (err) {\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  // const selectPlans = (planCode) => {\r\n  //   setLoading(true);\r\n  //   const body = {\r\n  //     plan_code: planCode,\r\n  //   };\r\n  //   axiosPost(`/payments/hostedPage`, body)\r\n  //     .then((response) => {\r\n  //       window.location.assign(response.data.url);\r\n  //       // setLoading(false);\r\n  //     })\r\n  //     .catch((err: any) => {\r\n  //       console.log(err);\r\n  //       setLoading(false);\r\n  //       dispatch(\r\n  //         userSlice.actions.setInfoModal({\r\n  //           showModal: true,\r\n  //           modalType: \"error\",\r\n  //           modalTitle: \"Failed!\",\r\n  //           modalMessage: err.response.data.detailedMessage,\r\n  //         })\r\n  //       );\r\n  //     });\r\n  // };\r\n\r\n  const handlePlan = () => {\r\n    Crisp.chat.open();\r\n    Crisp.message.send(\"text\", \"We'll get back to you shortly\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loadCompany ? (\r\n        <SmallLoader />\r\n      ) : (\r\n        <div className=\"trial_expired\">\r\n          {/* <DisableLayout disable={true} grayScale={0} >\r\n            <IconSideNav />\r\n          </DisableLayout> */}\r\n          <div className=\"api-container payment profile-main-container\">\r\n            <div className=\"api-header payment\">\r\n              <h1>Plans and Pricing</h1>\r\n              <button type=\"button\" onClick={() => router(\"/logout\")}>\r\n                Logout\r\n              </button>\r\n            </div>\r\n            <hr />\r\n            {plan?.name === \"trial\" && (\r\n              <span className=\"pending plan-xk\">\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M9.69398 1.73161C9.54058 1.41217 9.30005 1.14256 9.00011 0.953859C8.70016 0.765158 8.35301 0.665039 7.99864 0.665039C7.64428 0.665039 7.29712 0.765158 6.99718 0.953859C6.69724 1.14256 6.45671 1.41217 6.30331 1.73161L0.892645 12.3749C0.245312 13.6456 1.06331 15.3329 2.58731 15.3329H13.4093C14.934 15.3329 15.7506 13.6463 15.1046 12.3749L9.69398 1.73161ZM7.99864 5.33294C8.17546 5.33294 8.34503 5.40318 8.47005 5.52821C8.59507 5.65323 8.66531 5.8228 8.66531 5.99961V9.33294C8.66531 9.50975 8.59507 9.67932 8.47005 9.80435C8.34503 9.92937 8.17546 9.99961 7.99864 9.99961C7.82183 9.99961 7.65226 9.92937 7.52724 9.80435C7.40222 9.67932 7.33198 9.50975 7.33198 9.33294V5.99961C7.33198 5.8228 7.40222 5.65323 7.52724 5.52821C7.65226 5.40318 7.82183 5.33294 7.99864 5.33294ZM7.99864 10.9996C8.17546 10.9996 8.34503 11.0698 8.47005 11.1949C8.59507 11.3199 8.66531 11.4895 8.66531 11.6663V11.9996C8.66531 12.1764 8.59507 12.346 8.47005 12.471C8.34503 12.596 8.17546 12.6663 7.99864 12.6663C7.82183 12.6663 7.65226 12.596 7.52724 12.471C7.40222 12.346 7.33198 12.1764 7.33198 11.9996V11.6663C7.33198 11.4895 7.40222 11.3199 7.52724 11.1949C7.65226 11.0698 7.82183 10.9996 7.99864 10.9996Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </svg>\r\n                Your free trial ended on &nbsp;{\" \"}\r\n                <strong>\r\n                  {moment(billing?.current_term_ends_at).format(\"MMM Do, YYYY\")}\r\n                </strong>\r\n                . Upgrade plan to keep using our product.\r\n              </span>\r\n            )}\r\n            <div className=\"pd-20-50\">\r\n              <div className=\"pricing-head\">\r\n                <h1>Choose the best plan for your business </h1>\r\n\r\n                <div className=\"pricing-toggle\">\r\n                  <span\r\n                    className={\r\n                      checked ? \"monthly-label\" : \"monthly-label selected\"\r\n                    }\r\n                  >\r\n                    Monthly\r\n                  </span>\r\n                  <label\r\n                    className=\"pricing-toggle-wrapper\"\r\n                    onChange={() => {\r\n                      setChecked(!checked);\r\n                    }}\r\n                  >\r\n                    <input type=\"checkbox\" checked={checked} />\r\n                    <span className=\"toggle-switch round\"></span>\r\n                  </label>\r\n                  <span\r\n                    className={\r\n                      checked ? \"yearly-label selected\" : \"yearly-label\"\r\n                    }\r\n                  >\r\n                    Yearly\r\n                  </span>\r\n                </div>\r\n                <p>(Save 2 months with annual billing)</p>\r\n              </div>\r\n              {isAi ? (\r\n                <Fragment>\r\n                  <AIPricingExpired\r\n                    checked={checked}\r\n                    aiPlan={plan}\r\n                    planType={planType}\r\n                    subscriptionId={subscriptionId}\r\n                  />\r\n                  {(plan?.plan_code === \"trial_01\" ||\r\n                    plan?.plan_code === \"trial_02\") && (\r\n                    <div\r\n                      className={`coupon-container fx al-fx-cnt jstfy-sp-btw gap-20 mt-30 ${\r\n                        isApplied ? \"coupon-applied\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <div className=\"fx al-fx-cnt gap-10\">\r\n                        {isApplied ? (\r\n                          <Fragment>\r\n                            <svg\r\n                              width=\"40\"\r\n                              height=\"40\"\r\n                              viewBox=\"0 0 40 40\"\r\n                              fill=\"none\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                              <path\r\n                                d=\"M40 20C40 31.0457 31.0457 40 20 40C8.9543 40 0 31.0457 0 20C0 8.9543 8.9543 0 20 0C31.0457 0 40 8.9543 40 20Z\"\r\n                                fill=\"#4CAF50\"\r\n                              />\r\n                              <path\r\n                                d=\"M12 18.9444L17.7778 24.7222L28 14.5\"\r\n                                stroke=\"white\"\r\n                                strokeWidth=\"2\"\r\n                              />\r\n                            </svg>\r\n                            <div className=\"coupon-details\">\r\n                              <h3>Coupon/Promo Code</h3>\r\n                              <p>{code} code is successfull applied</p>\r\n                            </div>\r\n                          </Fragment>\r\n                        ) : (\r\n                          <Fragment>\r\n                            <svg\r\n                              width=\"48\"\r\n                              height=\"48\"\r\n                              viewBox=\"0 0 48 48\"\r\n                              fill=\"none\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                              <rect\r\n                                y=\"0.000976562\"\r\n                                width=\"48\"\r\n                                height=\"47.999\"\r\n                                rx=\"23.9995\"\r\n                                fill=\"#FB5F66\"\r\n                              />\r\n                              <path\r\n                                d=\"M17.6924 19.9941C17.5512 19.9941 17.4158 20.0502 17.316 20.15C17.2162 20.2498 17.1602 20.3852 17.1602 20.5263V21.6823C17.1602 21.8234 17.2162 21.9588 17.316 22.0586C17.4158 22.1584 17.5512 22.2145 17.6924 22.2145C17.8335 22.2145 17.9689 22.1584 18.0687 22.0586C18.1685 21.9588 18.2246 21.8234 18.2246 21.6823V20.5263C18.2246 20.3852 18.1685 20.2498 18.0687 20.15C17.9689 20.0502 17.8335 19.9941 17.6924 19.9941ZM17.6924 22.8851C17.5512 22.8851 17.4158 22.9411 17.316 23.0409C17.2162 23.1408 17.1602 23.2761 17.1602 23.4173V24.5732C17.1602 24.7144 17.2162 24.8497 17.316 24.9495C17.4158 25.0493 17.5512 25.1054 17.6924 25.1054C17.8335 25.1054 17.9689 25.0493 18.0687 24.9495C18.1685 24.8497 18.2246 24.7144 18.2246 24.5732V23.4173C18.2246 23.2761 18.1685 23.1408 18.0687 23.0409C17.9689 22.9411 17.8335 22.8851 17.6924 22.8851ZM17.6924 25.776C17.5512 25.776 17.4158 25.8321 17.316 25.9319C17.2162 26.0317 17.1602 26.1671 17.1602 26.3082V27.4641C17.1602 27.6053 17.2162 27.7407 17.316 27.8405C17.4158 27.9403 17.5512 27.9963 17.6924 27.9963C17.8335 27.9963 17.9689 27.9403 18.0687 27.8405C18.1685 27.7407 18.2246 27.6053 18.2246 27.4641V26.3082C18.2246 26.1671 18.1685 26.0317 18.0687 25.9319C17.9689 25.8321 17.8335 25.776 17.6924 25.776Z\"\r\n                                fill=\"white\"\r\n                              />\r\n                              <path\r\n                                d=\"M16.0258 13.8877C15.713 13.9135 15.4147 14.0303 15.1675 14.2237C14.9204 14.4171 14.7353 14.6787 14.6351 14.9761L13.9262 17.116C13.0619 17.1884 12.3711 17.9143 12.3711 18.7957V20.9133C12.3712 21.0258 12.4069 21.1354 12.4732 21.2264C12.5394 21.3173 12.6328 21.3849 12.7399 21.4194C13.4041 21.6339 13.9677 22.4679 13.9677 23.4892C13.9677 24.511 13.4041 25.3455 12.7399 25.5594C12.6327 25.594 12.5393 25.6617 12.473 25.7527C12.4067 25.8438 12.3711 25.9535 12.3711 26.0661V29.2465C12.3732 29.695 12.5523 30.1246 12.8694 30.4417C13.1866 30.7588 13.6161 30.9379 14.0646 30.94H22.4667L31.5026 34.0252C32.3371 34.3099 33.2499 33.8437 33.525 33.0124L34.2148 30.9272C35.0876 30.8644 35.7885 30.1343 35.7885 29.2465V26.065C35.7884 25.9525 35.7527 25.8429 35.6864 25.752C35.6202 25.661 35.5268 25.5935 35.4197 25.5589C34.7555 25.3444 34.1919 24.5105 34.1919 23.4886C34.1919 22.4673 34.7555 21.6328 35.4197 21.4184C35.5268 21.3838 35.6202 21.3162 35.6864 21.2253C35.7527 21.1344 35.7884 21.0248 35.7885 20.9122V18.7957C35.7863 18.3473 35.6071 17.9179 35.29 17.6009C34.9729 17.2839 34.5434 17.1048 34.095 17.1027H25.6951L16.6607 13.9633C16.4516 13.8904 16.2233 13.8994 16.0263 13.8877H16.0258ZM16.104 14.9436C16.1732 14.9388 16.2451 14.9478 16.3169 14.9718L22.4502 17.1027H15.0524L15.6453 15.3092C15.6758 15.209 15.736 15.1204 15.8179 15.0552C15.8998 14.9899 15.9996 14.951 16.104 14.9436ZM14.0646 18.1671H17.161V18.6733C17.161 18.8144 17.2171 18.9498 17.3169 19.0496C17.4167 19.1494 17.5521 19.2055 17.6932 19.2055C17.8344 19.2055 17.9698 19.1494 18.0696 19.0496C18.1694 18.9498 18.2254 18.8144 18.2254 18.6733V18.1671H34.095C34.4527 18.1671 34.7241 18.4386 34.7241 18.7957V20.6078C33.7411 21.1257 33.1274 22.2417 33.1274 23.4892C33.1274 24.7361 33.7416 25.8522 34.7241 26.3695V29.2465C34.7241 29.6042 34.4527 29.8756 34.095 29.8756H18.2244C18.227 29.692 18.2254 29.5031 18.2254 29.3173C18.2254 29.1762 18.1694 29.0408 18.0696 28.941C17.9698 28.8412 17.8344 28.7851 17.6932 28.7851C17.5521 28.7851 17.4167 28.8412 17.3169 28.941C17.2171 29.0408 17.161 29.1762 17.161 29.3173C17.16 29.502 17.161 29.6931 17.1621 29.8756H14.0646C13.7064 29.8756 13.4355 29.6042 13.4355 29.2465V26.3705C14.4185 25.8527 15.0322 24.7367 15.0322 23.4892C15.0322 22.2417 14.418 21.1262 13.4355 20.6089V18.7957C13.4355 18.438 13.707 18.1671 14.0646 18.1671ZM25.7605 30.94H33.0891L32.5143 32.6777C32.4185 32.9666 32.1285 33.1141 31.8469 33.0183L25.7605 30.94Z\"\r\n                                fill=\"white\"\r\n                              />\r\n                              <path\r\n                                d=\"M28.7451 24.8289C29.6924 24.8289 30.4716 25.6075 30.4716 26.5548C30.4716 27.5022 29.6924 28.2824 28.7451 28.2824C27.7977 28.2824 27.0175 27.5022 27.0175 26.5548C27.0175 25.6075 27.7977 24.8289 28.7451 24.8289ZM28.7451 25.8933C28.3725 25.8933 28.0819 26.1828 28.0819 26.5548C28.0819 26.9269 28.373 27.218 28.7451 27.218C29.1171 27.218 29.4071 26.9274 29.4071 26.5548C29.4071 26.1823 29.1171 25.8933 28.7451 25.8933ZM23.6773 19.7607C24.1345 19.763 24.5724 19.9456 24.8957 20.2689C25.219 20.5922 25.4016 21.03 25.4038 21.4872C25.4038 22.4345 24.6247 23.2137 23.6768 23.2137C22.7289 23.2137 21.9492 22.4345 21.9492 21.4872C21.9515 21.0298 22.1342 20.5918 22.4578 20.2685C22.7813 19.9452 23.2199 19.7627 23.6773 19.7607ZM23.6773 20.8251C23.3048 20.8251 23.0136 21.1152 23.0136 21.4872C23.0136 21.8598 23.3048 22.1493 23.6768 22.1493C24.0493 22.1493 24.3394 21.8592 24.3394 21.4872C24.3394 21.1147 24.0499 20.8251 23.6773 20.8251ZM28.3688 21.1109L23.3 26.1796C23.203 26.28 23.1494 26.4145 23.1506 26.554C23.1518 26.6935 23.2078 26.827 23.3065 26.9257C23.4051 27.0244 23.5386 27.0803 23.6782 27.0816C23.8177 27.0828 23.9522 27.0291 24.0525 26.9322L29.1213 21.8635C29.2211 21.7637 29.2772 21.6283 29.2772 21.4872C29.2772 21.3461 29.2211 21.2107 29.1213 21.1109C28.9037 20.9178 28.5732 20.8975 28.3688 21.1109Z\"\r\n                                fill=\"white\"\r\n                              />\r\n                            </svg>\r\n                            <div className=\"coupon-details\">\r\n                              <h3>Coupon/Promo Code</h3>\r\n                              {/* <p>Apply your coupon code to receive a discount on our premium plan.</p> */}\r\n                            </div>\r\n                          </Fragment>\r\n                        )}\r\n                      </div>\r\n                      {isApplied ? (\r\n                        <a className=\"cp\">Applied</a>\r\n                      ) : (\r\n                        <a className=\"cp\" onClick={() => setShowCoupon(true)}>\r\n                          Apply Code\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {showCoupon && (\r\n                    <Coupon\r\n                      setIsApplied={setIsApplied}\r\n                      setShowCoupon={setShowCoupon}\r\n                      setCode={setCode}\r\n                    />\r\n                  )}\r\n                </Fragment>\r\n              ) : (\r\n                <div className=\"plan-nw\">\r\n                  <div\r\n                    className={`plus-plan-nw-bx  ${\r\n                      plan &&\r\n                      (plan?.name === \"Plus\" || plan?.name === \"Lifetime\")\r\n                        ? \"planactive\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"nw-plan-img-bx\">\r\n                      {!checked && plan?.trial && (\r\n                        <div className=\"nw-plan-recommend\">\r\n                          <span>Recommended</span>\r\n                        </div>\r\n                      )}\r\n                      {((checked && plan?.plan_code === environmentData.YEARLYPLAN) ||\r\n                        (!checked && plan?.plan_code === environmentData.MONTHLYPLAN)) && (\r\n                        <div className=\"current-pln pln-green\">\r\n                          {plan?.trial ? \"Trial Plan\" : \"Current Plan\"}\r\n                        </div>\r\n                      )}\r\n                      <PlusPlan />\r\n                    </div>\r\n                    <div className=\"nw-plan-head\">\r\n                      <div className=\"hd-rght\">\r\n                        <h1>\r\n                          {\" \"}\r\n                          {plan?.name === \"Lifetime\" && \"Lifetime\"} Plus plan\r\n                        </h1>\r\n                        <p className=\"no-m\">Scale up with ease</p>\r\n                      </div>\r\n                      <div>\r\n                        <hr />\r\n                      </div>\r\n                      <div className=\"hd-lft\">\r\n                        <div className=\"plan-tag\">\r\n                          <div className=\"starts-at\">Starts at</div>\r\n                          <div className=\"price-plan\">\r\n                            <span>\r\n                              <sup></sup>${checked ? 220 : 22}\r\n                            </span>\r\n                            <span className=\"nw-plan-time\">\r\n                              /{checked ? \"year\" : \"month\"}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"nw-panel\">\r\n                      <button\r\n                       onClick={() => {\r\n                        // checkSaveMethod(plan?.plan_code, plan?.price)\r\n                        checked\r\n                          ? checkSaveMethod(\r\n                              environmentData.YEARLYPLAN,\r\n                              220,\r\n                            )\r\n                          : checkSaveMethod(\r\n                              environmentData.MONTHLYPLAN,\r\n                              22,\r\n                            );\r\n                      }}\r\n                      disabled={\r\n                        (!plan?.trial &&\r\n                          plan?.plan_code ===\r\n                            environmentData.YEARLYPLAN &&\r\n                          checked) ||\r\n                        (!plan?.trial &&\r\n                          plan?.plan_code ===\r\n                            environmentData.MONTHLYPLAN &&\r\n                          !checked) || loading\r\n                      }\r\n                      >\r\n                        {loading ? \"Upgrading...\" : \"Upgrade\"}\r\n                      </button>\r\n                      {checkOutPage && (\r\n                           <PaymentSummary\r\n                            subscription={subscription}\r\n                           setCheckOutPage={setCheckOutPage}\r\n                           planCode={planCode}\r\n                           setIsEvent={''}\r\n                           setLoading={setLoading}\r\n                           isExpired={true}\r\n                           price={price}\r\n                           addon={false}\r\n                         />\r\n                         )}\r\n\r\n                        \r\n                      <i>\r\n                        Min. Bill amount {checked ? \"$220/year\" : \"$22/month\"}\r\n                      </i>\r\n                    </div>\r\n                    <ul className=\"nw-plan-list\">\r\n                        <li>\r\n                          <span>3 workflows</span>\r\n                        </li>\r\n                        <li>\r\n                          <span>\r\n                            {checked ? \"2400\" : \"200\"} AI Credits\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span>\r\n                            {\" \"}\r\n                            {checked ? \"6,000 yearly\" : \"500 monthly\"} emails\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span> A/B testing</span>\r\n                        </li>\r\n                      </ul>\r\n                    {/* <div className=\"add-onBar\"> Add-Ons</div>\r\n                    <ul className=\"nw-plan-list plus-plan-list\">\r\n                      <li>\r\n                        <span>\r\n                          {checked\r\n                            ? \"$30 for every 12,000 extra yearly\"\r\n                            : \"$3 for every 1000 extra monthly\"}{\" \"}\r\n                          push web notification\r\n                        </span>\r\n                      </li>\r\n                      <li>\r\n                        <span>\r\n                          {checked\r\n                            ? \"$30 for every 12,000 extra yearly\"\r\n                            : \"$3 for every 1000 extra monthly\"}{\" \"}\r\n                          emails\r\n                        </span>\r\n                      </li>\r\n                      {showViewMore && (\r\n                        <>\r\n                          <li>\r\n                            <span>\r\n                              {\" \"}\r\n                              Omniengage Branding removal:{\" \"}\r\n                              {checked ? \"$1500 per year\" : \"$150 per month\"}\r\n                            </span>\r\n                          </li>\r\n                          <li>\r\n                            <span>\r\n                              {\" \"}\r\n                              Extra user for{\" \"}\r\n                              {checked ? \"$120 per year\" : \"$12 per month\"}\r\n                            </span>\r\n                          </li>\r\n                          <li>\r\n                            <span>\r\n                              {checked\r\n                                ? \"$90 for every 12,000 extra yearly\"\r\n                                : \"$9 for every 1000 extra monthly\"}{\" \"}\r\n                              SMS\r\n                            </span>\r\n                          </li>\r\n                          <li>\r\n                            <span>\r\n                              {checked\r\n                                ? \"Extra branding for $750 per year\"\r\n                                : \"Extra branding for $75 per month\"}\r\n                            </span>\r\n                          </li>\r\n                        </>\r\n                      )}\r\n                    </ul>\r\n                    <div\r\n                      className=\"view-more\"\r\n                      onClick={(e) => {\r\n                        setShowViewMore((prev) => !prev);\r\n                      }}\r\n                    >\r\n                      View {showViewMore ? \"Less\" : \"More\"}\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"plan-nw-bx plan-nwcustom\">\r\n                    <div className=\"nw-plan-img-bx\">\r\n                      <CustomPlan />\r\n                    </div>\r\n                    <div className=\"nw-plan-head\">\r\n                      <div className=\"hd-rght\">\r\n                        <h1>Enterprise plan</h1>\r\n                        <p className=\"no-m\">Unleash your full potential</p>\r\n                      </div>\r\n                      <hr />\r\n                      <div className=\"hd-lft\">\r\n                        <span>Custom</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"nw-panel\">\r\n                      <button onClick={handlePlan}>Contact us</button>\r\n                      <i>\r\n                        Upgrade to Plus or Enterprise to enjoy more features.\r\n                      </i>\r\n                    </div>\r\n                    <ul className=\"nw-plan-list\">\r\n                      <li>\r\n                        <span>\r\n                          {\" \"}\r\n                          Perfect for businesses with high volume requirements\r\n                        </span>\r\n                      </li>\r\n                      {/* <li>\r\n                        <span>\r\n                          {\" \"}\r\n                          Take advantage of special rates and customized plans\r\n                        </span>\r\n                      </li> */}\r\n                      <li>\r\n                        <span> Over 20 workflows</span>\r\n                      </li>\r\n                      <li>\r\n                        <span> Access to all features</span>\r\n                      </li>\r\n                      <li>\r\n                        <span> Priority support</span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default PlansDetails;\r\n"],"names":["environmentData","environment","PlansDetails","isAi","dispatch","useDispatch","router","useNavigate","isLoggedIn","useSelector","state","checked","setChecked","useState","plan","setPlan","loading","setLoading","billing","setBilling","loadCompany","setLoadCompany","planType","setPlanType","subscriptionId","setSubscriptionId","isApplied","setIsApplied","showCoupon","setShowCoupon","code","setCode","planCode","setPlaneCode","subscription","setSubscription","checkOutPage","setCheckOutPage","customerId","setCustomerId","subId","setSubId","price","setPrice","companyDetails","useGetCompany","useEffect","userSlice","response","_b","_a","_d","_c","_e","_f","setCookie","_k","_j","_i","_n","_m","_l","_q","_p","_o","_t","_s","_r","checkSaveMethod","downgrade","axiosPost","handlePlan","Crisp","jsxDEV","Fragment","SmallLoader","this","moment","AIPricingExpired","Coupon","PlusPlan","PaymentSummary","CustomPlan"],"mappings":"8cAoBA,MAAMA,EAAkBC,EAAY,EAE9BC,GAAe,IAAM,CACnB,MAAAC,EAAOF,EAAc,EAAA,KACrBG,EAAWC,KACXC,EAASC,KACTC,EAAaC,EAAaC,GAAiBA,EAAM,KAAK,UAAU,EAChE,CAACC,EAASC,CAAU,EAAIC,WAAc,EAAK,EAClCJ,EAAaC,GAAiBA,EAAM,KAAK,UAAU,EAClE,KAAM,CAACI,EAAMC,CAAO,EAAIF,EAAA,SAAc,CAAE,CAAA,EAClC,CAACG,EAASC,CAAU,EAAIJ,WAAkB,EAAK,EAC/C,CAACK,EAASC,CAAU,EAAIN,EAAc,SAAA,EACtC,CAACO,EAAaC,CAAc,EAAIR,WAAkB,EAAI,EACtD,CAACS,EAAUC,CAAW,EAAIV,WAAc,EAAE,EAC1C,CAACW,EAAgBC,CAAiB,EAAIZ,WAAc,EAAE,EACtD,CAACa,EAAWC,CAAY,EAAId,WAAkB,EAAK,EACnD,CAACe,GAAYC,CAAa,EAAIhB,WAAkB,EAAK,EACrD,CAACiB,GAAMC,EAAO,EAAIlB,WAAiB,EAAE,EACrC,CAACmB,GAAUC,EAAY,EAAIpB,WAAS,EAAE,EACtC,CAACqB,GAAcC,EAAe,EAAItB,EAAA,SAAc,CAAE,CAAA,EAClD,CAACuB,GAAcC,CAAe,EAAIxB,WAAS,EAAK,EAChD,CAACyB,GAAYC,EAAa,EAAI1B,WAAc,EAAE,EAC9C,CAAC2B,GAAOC,EAAQ,EAAI5B,WAAc,EAAE,EACpC,CAAC6B,GAAOC,EAAQ,EAAI9B,WAAS,CAAC,EAC9B+B,EAAiBC,KAEvBC,EAAAA,UAAU,IAAM,CACTtC,GACHF,EAAO,QAAQ,CACjB,EACC,CAACE,CAAU,CAAC,EAEfsC,EAAAA,UAAU,IAAM,CACd1C,EAAS2C,EAAU,QAAQ,YAAY,CAAC,CAAC,CAC3C,EAAG,CAAE,CAAA,EAGLD,EAAAA,UAAU,IAAM,6CACd,GAAIF,EAAe,UAAW,CAC5B,MAAMI,EAAWJ,EAAe,KAE1B9B,EAAOX,GACT8C,GAAAC,EAAAF,EAAS,KAAK,OAAd,YAAAE,EAAoB,kBAApB,YAAAD,EAAqC,MACrCE,GAAAC,EAAAJ,EAAS,KAAK,OAAd,YAAAI,EAAoB,eAApB,YAAAD,EAAkC,KAChCjC,GAAUf,GACZkD,EAAAL,EAAS,KAAK,OAAd,YAAAK,EAAoB,YACpBC,EAAAN,EAAS,KAAK,OAAd,YAAAM,EAAoB,QAiBxB,GAhBIN,GAAYA,EAAS,KAAK,QAC5BO,EACE,QACAP,EAAS,KAAK,MACd,GACA/C,EAAAA,EAAe,IAAfA,YAAAA,EAAe,cACf,GAAA,EAEFsD,EACE,QACAP,EAAS,KAAK,MACd,GACA/C,EAAAA,EAAe,IAAfA,YAAAA,EAAe,YACf,GAAA,GAGAa,EAAK,SAAW,UAAYA,EAAK,SAAW,QAC9C,OAAOR,EAAO,YAAY,EAK5Ba,EAAWD,EAAO,EAClBH,EAAQD,CAAI,EACZO,EAAe,EAAK,EACpBE,GAAYiC,GAAAC,GAAAC,EAAAV,EAAS,OAAT,YAAAU,EAAe,OAAf,YAAAD,EAAqB,kBAArB,YAAAD,EAAsC,aAAa,EAC/D/B,GAAkBkC,GAAAC,GAAAC,EAAAb,GAAA,YAAAA,EAAU,OAAV,YAAAa,EAAgB,OAAhB,YAAAD,EAAsB,kBAAtB,YAAAD,EAAuC,eAAe,EACxElB,IAASqB,GAAAC,GAAAC,EAAAhB,GAAA,YAAAA,EAAU,OAAV,YAAAgB,EAAgB,OAAhB,YAAAD,EAAsB,eAAtB,YAAAD,EAAoC,eAAe,EAC5DvB,IAAc0B,GAAAC,GAAAC,EAAAnB,EAAS,KAAK,OAAd,YAAAmB,EAAoB,eAApB,YAAAD,EAAkC,WAAlC,YAAAD,EAA4C,WAAW,EACrD9B,GAAAa,EAAS,KAAK,IAAI,CAEpC,CAAA,EACC,CAACJ,EAAe,IAAI,CAAC,EA4ClB,MAAAwB,EAAkB,MAAOpC,EAAUU,IAAU,CACjDT,GAAaD,CAAQ,EACrBf,EAAW,EAAI,EACf0B,GAASD,CAAK,EAEV,GAAA,CACE,IAAA5B,GAAA,YAAAA,EAAM,OAAQ4B,EAAO,CAMvB,MAAM2B,EAAY,MAAMC,GAAU,0BAJrB,CACX,MAAA9B,GACA,UAAUR,CAAA,CAEqD,EACjE5B,EACE2C,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,UACX,WAAY,oCACZ,aACE,kFACF,gBAAiB,eAAA,CAClB,CAAA,CACH,MAGAV,EAAgB,EAAI,OAEV,CAAA,QACZ,CACApB,EAAW,EAAK,CAClB,CAAA,EA4BIsD,GAAa,IAAM,CACvBC,EAAM,KAAK,OACLA,EAAA,QAAQ,KAAK,OAAQ,+BAA+B,CAAA,EAG5D,OACGC,SAAAC,EAAAA,SAAA,CACE,SACCtD,EAAAqD,SAACE,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,CAAa,EAAAC,MAAA,WAEZ,MAAI,CAAA,UAAU,gBAIb,SAACH,EAAA,OAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAqB,EAAAG,MAAA,EACrBH,EAAAA,OAAC,UAAO,KAAK,SAAS,QAAS,IAAMnE,EAAO,SAAS,EAAG,SAAxD,QAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAsE,MAAA,CAAA,GAJF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAKA,EAAAA,MAAA,WACC,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAI,EAAAA,MAAA,GACH9D,GAAA,YAAAA,EAAM,QAAS,SACb2D,EAAA,OAAA,OAAA,CAAK,UAAU,kBACd,SAAA,CAAAA,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAAA,EAAA,OAAC,OAAA,CACC,SAAS,UACT,SAAS,UACT,EAAE,8pCACF,KAAK,OAAA,EAJP,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAKA,CAAA,EAZF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAaA,EAAM,6BAC0B,IAChCH,EAAAA,OAAC,UACE,SAAOI,GAAA3D,GAAA,YAAAA,EAAS,oBAAoB,EAAE,OAAO,cAAc,CAD9D,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAA0D,MAAA,EAAS,2CAAA,GAlBX,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAoBA,EAAAA,MAAA,EAEFH,EAAAA,OAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,yCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAA2C,EAAAG,MAAA,EAE3CH,EAAAA,OAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,UACE9D,EAAU,gBAAkB,yBAE/B,SAAA,SAAA,EAJD,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAiE,MAMA,EACAH,EAAA,OAAC,QAAA,CACC,UAAU,yBACV,SAAU,IAAM,CACd7D,EAAW,CAACD,CAAO,CACrB,EAEA,SAAA,CAAC8D,SAAA,QAAA,CAAM,KAAK,WAAW,QAAA9D,GAAvB,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAyC,EAAAiE,MAAA,EACzCH,EAAA,OAAC,OAAK,CAAA,UAAU,qBAAhB,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAsC,EAAAG,MAAA,CAAA,CAAA,EAPxC,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAQA,EACAH,EAAA,OAAC,OAAA,CACC,UACE9D,EAAU,wBAA0B,eAEvC,SAAA,QAAA,EAJD,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAiE,MAMA,CAAA,GAvBF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAwBA,EAAAA,MAAA,EACAH,EAAA,OAAC,KAAE,SAAH,qCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAsC,EAAAG,MAAA,CAAA,GA5BxC,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EA6BA,EAAAA,MAAA,EACCzE,WACEuE,WACC,CAAA,SAAA,CAAAD,EAAA,OAACK,GAAA,CACC,QAAAnE,EACA,OAAQG,EACR,SAAAQ,EACA,eAAAE,CAAA,EAJF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAoD,MAKA,IACE9D,GAAA,YAAAA,EAAM,aAAc,aACpBA,GAAA,YAAAA,EAAM,aAAc,aACpB2D,EAAA,OAAC,MAAA,CACC,UAAW,2DACT/C,EAAY,iBAAmB,EACjC,GAEA,SAAA,CAAA+C,SAAC,MAAI,CAAA,UAAU,sBACZ,SAAA/C,WACEgD,WACC,CAAA,SAAA,CAAAD,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,gHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAGA,EACAH,EAAA,OAAC,OAAA,CACC,EAAE,sCACF,OAAO,QACP,YAAY,GAAA,EAHd,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAIA,CAAA,CAAA,EAfF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAgBA,EACAH,EAAAA,OAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAqB,EAAAG,MAAA,WACpB,IAAG,CAAA,SAAA,CAAA9C,GAAK,8BAAA,GAAT,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAqC,EAAA8C,MAAA,CAAA,GAFvC,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,CAAA,GArBF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAsBA,EAAAA,MAAA,WAECF,EACC,SAAA,CAAA,SAAA,CAAAD,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,cACF,MAAM,KACN,OAAO,SACP,GAAG,UACH,KAAK,SAAA,EALP,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAMA,EACAH,EAAA,OAAC,OAAA,CACC,EAAE,wtCACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAGA,EACAH,EAAA,OAAC,OAAA,CACC,EAAE,s3EACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAGA,EACAH,EAAA,OAAC,OAAA,CACC,EAAE,wxCACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAGA,CAAA,CAAA,EAzBF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA0BA,WACC,MAAI,CAAA,UAAU,iBACb,SAAAH,EAAAA,OAAC,MAAG,SAAJ,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAAqB,CADvB,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,CAAA,GA/BF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAgCA,CA1DJ,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EA4DA,EAAAA,MAAA,EACClD,EACC+C,EAAA,OAAC,IAAE,CAAA,UAAU,KAAK,SAAlB,SAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAyBG,MAAA,EAExBH,EAAA,OAAA,IAAA,CAAE,UAAU,KAAK,QAAS,IAAM5C,EAAc,EAAI,EAAG,SAAtD,YAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAA+C,MAAA,CAAA,CAAA,EAvEJ,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAyEA,EAGDhD,IACC6C,EAAA,OAACM,GAAA,CACC,aAAApD,EACA,cAAAE,EACA,QAAAE,EAAA,EAHF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAA6C,MAIA,CAAA,GA1FJ,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA4FA,EAEAH,SAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAAAA,EAAA,OAAC,MAAA,CACC,UAAW,oBACT3D,KACCA,GAAA,YAAAA,EAAM,QAAS,SAAUA,GAAA,YAAAA,EAAM,QAAS,YACrC,aACA,EACN,GAEA,SAAA,CAAC2D,EAAAA,OAAA,MAAA,CAAI,UAAU,iBACZ,SAAA,CAAC,CAAA9D,IAAWG,GAAA,YAAAA,EAAM,QACjB2D,EAAA,OAAC,OAAI,UAAU,oBACb,SAACA,EAAA,OAAA,OAAA,CAAK,SAAN,aAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAAiB,CADnB,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,GAECjE,IAAWG,GAAA,YAAAA,EAAM,aAAcd,EAAgB,YAC/C,CAACW,IAAWG,GAAA,YAAAA,EAAM,aAAcd,EAAgB,uBAChD,MAAI,CAAA,UAAU,wBACZ,SAAMc,GAAA,MAAAA,EAAA,MAAQ,aAAe,cADhC,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAA8D,MAAA,WAEDI,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAU,EAAAJ,MAAA,CAAA,GAZZ,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAaA,EAAAA,MAAA,EACAH,EAAAA,OAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAAAA,SAAC,KACE,CAAA,SAAA,CAAA,KACA3D,GAAA,YAAAA,EAAM,QAAS,YAAc,WAAW,YAAA,GAF3C,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAGA,EAAA8D,MAAA,EACCH,SAAA,IAAA,CAAE,UAAU,OAAO,SAApB,oBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAsC,EAAAG,MAAA,CAAA,GALxC,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAMA,EAAAA,MAAA,EACAH,SAAC,MACC,CAAA,SAAAA,EAAAA,OAAC,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAAI,CADN,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,WACC,MAAI,CAAA,UAAU,SACb,SAACH,EAAA,OAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,YAAY,SAA3B,WAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAoC,EAAAG,MAAA,EACpCH,EAAAA,OAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAA,SAAC,OACC,CAAA,SAAA,CAAAA,EAAAA,OAAC,MAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAK,EAAAG,MAAA,EAAM,IAAEjE,EAAU,IAAM,EAAA,GAD/B,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAiE,MAAA,EACAH,EAAAA,OAAC,OAAK,CAAA,UAAU,eAAe,SAAA,CAAA,IAC3B9D,EAAU,OAAS,OAAA,GADvB,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAiE,MAAA,CAAA,GANF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAOA,EAAAA,MAAA,CAAA,GATF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAUA,CAXF,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAYA,EAAAA,MAAA,CAAA,GAvBF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAwBA,EAAAA,MAAA,EACAH,EAAAA,OAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAAAA,EAAA,OAAC,SAAA,CACA,QAAS,IAAM,CAGV9D,EAAAyD,EACEpE,EAAgB,WAChB,GAAA,EAEFoE,EACEpE,EAAgB,YAChB,EAAA,CAER,EACA,SACG,EAACc,GAAA,MAAAA,EAAM,SACNA,GAAA,YAAAA,EAAM,aACJd,EAAgB,YAClBW,GACD,EAACG,GAAA,MAAAA,EAAM,SACNA,GAAA,YAAAA,EAAM,aACJd,EAAgB,aAClB,CAACW,GAAYK,EAGd,WAAU,eAAiB,SAAA,EAxB9B,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAA4D,MAyBA,EACCxC,IACIqC,EAAA,OAACQ,GAAA,CACA,aAAA/C,GACD,gBAAAG,EACA,SAAAL,GACA,WAAY,GACZ,WAAAf,EACA,UAAW,GACX,MAAAyB,GACA,MAAO,EAAA,EARP,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAkC,MASF,WAIF,IAAE,CAAA,SAAA,CAAA,oBACiBjE,EAAU,YAAc,WAAA,GAD5C,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAiE,MAAA,CAAA,GA3CF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EA4CA,EAAAA,MAAA,EACAH,EAAAA,OAAC,KAAG,CAAA,UAAU,eACV,SAAA,CAACA,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,aAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAAiB,CADnB,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACAH,EAAA,OAAC,KACC,CAAA,SAAAA,EAAAA,OAAC,OACE,CAAA,SAAA,CAAA9D,EAAU,OAAS,MAAM,aAAA,GAD5B,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAiE,MAEA,CAHF,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAIA,EAAAA,MAAA,EACAH,EAAA,OAAC,KACC,CAAA,SAAAA,EAAAA,OAAC,OACE,CAAA,SAAA,CAAA,IACA9D,EAAU,eAAiB,cAAc,SAAA,GAF5C,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAiE,MAGA,CAJF,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAKA,EAAAA,MAAA,EACCH,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,cAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAAkB,CADpB,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,CAAA,GAjBJ,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAkBE,EAAAA,MAAA,CAAA,CAAA,EA9GJ,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA2KA,EACAH,EAAAA,OAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAA,EAAAA,OAAC,MAAI,CAAA,UAAU,iBACb,SAAAA,EAAA,OAACS,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAN,MAAY,CADd,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACAH,EAAAA,OAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,iBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAmB,EAAAG,MAAA,EAClBH,SAAA,IAAA,CAAE,UAAU,OAAO,SAApB,6BAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAA+C,EAAAG,MAAA,CAAA,GAFjD,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,WACC,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAI,EAAAA,MAAA,WACH,MAAI,CAAA,UAAU,SACb,SAAAH,EAAAA,OAAC,QAAK,SAAN,QAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAAY,CADd,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,CAAA,GARF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EASA,EAAAA,MAAA,EACAH,EAAAA,OAAC,MAAI,CAAA,UAAU,WACb,SAAA,CAACA,SAAA,SAAA,CAAO,QAASF,GAAY,SAA7B,YAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAuC,EAAAK,MAAA,EACvCH,EAAA,OAAC,KAAE,SAAH,uDAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAG,MAAA,CAAA,GAJF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAKA,EAAAA,MAAA,EACAH,EAAAA,OAAC,KAAG,CAAA,UAAU,eACZ,SAAA,CAACA,EAAA,OAAA,KAAA,CACC,kBAAC,OACE,CAAA,SAAA,CAAA,IAAI,sDAAA,GADP,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAGA,CAJF,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAKA,EAAAA,MAAA,EAOCH,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,oBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAAwB,CAD1B,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACCH,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,yBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAA6B,CAD/B,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACCH,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAG,MAAuB,CADzB,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,CAAA,GArBF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAsBA,EAAAA,MAAA,CAAA,GA1CF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EA2CA,EAAAA,MAAA,CAAA,GAxNF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAyNA,EAAAA,MAAA,CAAA,GAvVJ,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAyVA,EAAAA,MAAA,CAAA,GAxXF,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAyXA,CA7XF,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,CAAA,EAAAA,MA8XA,CAlYJ,EAAA,OAAA,GAAA,CAAA,SAAA,6GAAA,WAAA,IAAA,aAAA,CAoYA,EAAAA,MAAA,CAEJ"}