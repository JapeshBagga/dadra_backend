{"version":3,"file":"manageAddons-BhNzF9vr.js","sources":["../../src/components/layoutElements/HorizontalNavbars/SettingsNavbar.tsx","../../src/pages/NewPricing/AIPricing.tsx","../../src/components/layoutElements/plans.tsx","../../node_modules/moment-timezone/moment-timezone.js","../../node_modules/moment-timezone/index.js","../../src/assets/NoAddon.tsx","../../src/components/layoutElements/settings/DowngradeStep1.tsx","../../src/components/layoutElements/settings/DowngradeStep2.tsx","../../src/components/layoutElements/settings/DowngradeStep3.tsx","../../src/components/layoutElements/settings/Downgrade.tsx","../../src/components/layoutElements/manageAddons.tsx"],"sourcesContent":["\r\nfunction SettingsNavbar({title}) { \r\n    return (\r\n          <div className=\"api-header mb-30 fx al-cnt\">\r\n          <h1>{title}</h1>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SettingsNavbar\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./AIPricing.css\";\r\nimport AIPlan1 from \"../../assets/AIPlan1\";\r\nimport AIPlan2 from \"../../assets/AIPlan2\";\r\nimport AIPlan3 from \"../../assets/AIPlan3\";\r\nimport AIPlan4 from \"../../assets/AIPlan4\";\r\nimport { axiosPost } from \"../../services/axiosService\";\r\nimport Plans from \"../../components/layoutElements/plans\";\r\nimport AIAnimateFreePlan from \"../../assets/AIAnimteFreePlan\";\r\nimport AIAnimateBasic from \"../../assets/AIAnimateBasic\";\r\nimport AiAnimatestandard from \"../../assets/AiAnimatestandard\";\r\nimport AiAnimateAdvance from \"../../assets/AiAnimateAdvance\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userSlice } from \"../../redux/User\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Crisp } from \"crisp-sdk-web\";\r\n\r\nconst AIPricing = ({ checked, aiPlan, planType, subscriptionId, isEvent }) => {\r\n  const [buttonClicked, setButtonClicked] = useState(false);\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const queryParam = new URLSearchParams(location.search);\r\n  const [data, setData] = useState([\r\n    {\r\n      image: <AIPlan2 />,\r\n      animate_image: <AIAnimateBasic />,\r\n      title: \"Basic\",\r\n      desc: \"Good superb content for Advanced users  Advanced users\",\r\n      price: \"25\",\r\n      button: \"Upgrade Plan\",\r\n      button2: \"Change Plan\",\r\n      features: [\r\n        \"Create up to 5 bots\",\r\n        \"Send up to 3,000 messages per month\",\r\n        \"Use up to 11M characters for training a bot\",\r\n        \"Train a bot using up to 3,000 links\",\r\n        \"Upload multiple files for bot training\",\r\n        \"Configure Zapier Integration\",\r\n        \"View Conversation History\",\r\n        \"Capture Leads Data\",\r\n      ],\r\n      loading: false,\r\n      planCode: \"basic_01\",\r\n      interval_unit: \"months\",\r\n    },\r\n    {\r\n      image: <AIPlan3 />,\r\n      animate_image: <AiAnimatestandard />,\r\n      title: \"Professional\",\r\n      desc: \"Good superb content for Advanced users  Advanced users\",\r\n      price: \"95\",\r\n      button: \"Upgrade Plan\",\r\n      button2: \"Change Plan\",\r\n      features: [\r\n        \"Create up to 10 bots\",\r\n        \"Send up to 30,000 messages per month\",\r\n        \"Use up to 11M characters for training a bot\",\r\n        \"Train a bot using up to 5,000 links\",\r\n        \"Upload multiple files for bot training\",\r\n        \"Configure Zapier Integration\",\r\n        \"View Conversation History\",\r\n        \"Capture Leads Data\",\r\n        \"Ability to connect your OpenAI API Key\",\r\n        \"Ability to Remove Chatbot Builder Branding\",\r\n      ],\r\n      loading: false,\r\n      planCode: \"standard_01\",\r\n      interval_unit: \"months\",\r\n    },\r\n    {\r\n      image: <AIPlan4 />,\r\n      animate_image: <AiAnimateAdvance />,\r\n      title: \"Enterprise\",\r\n      desc: \"Good superb content for Advanced users  Advanced users\",\r\n      price: \"375\",\r\n      button: \"Upgrade Plan\",\r\n      button2: \"Change Plan\",\r\n      features: [\r\n        \"Personalized SLA\",\r\n        \"Custom limits\",\r\n        \"Team training\",\r\n        \"More messages per month\",\r\n        \"Unlimited bots\",\r\n        \"Unlimited links\",\r\n      ],\r\n      loading: false,\r\n      planCode: \"advanced_01\",\r\n      interval_unit: \"months\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const svgs = [\r\n      // \"https://dlvkyia8i4zmz.cloudfront.net/laOOO58rTEqLIunp3y8Q_free_plan_pricing.svg\",\r\n      \"https://dlvkyia8i4zmz.cloudfront.net/xvu3hijDRuqJXkQX0vYS_Basic_plan_pricing.svg\",\r\n      \"https://dlvkyia8i4zmz.cloudfront.net/DvxuWTfbQkhvfzUhTHmd_Standard_plan_pricing.svg\",\r\n      \"https://dlvkyia8i4zmz.cloudfront.net/ln7AutUUT6KMHYqlqeuS_Advanced_plan_pricing.svg\",\r\n    ];\r\n    const main = document.querySelectorAll(\".aiplan-bx\");\r\n    const imgBox = document.querySelectorAll(\".aiplan-ing-bx\");\r\n    const temp: any = [];\r\n    Array.from(imgBox).forEach((ele) => temp.push(ele.innerHTML));\r\n    Array.from(main).forEach((element, index) => {\r\n      element.addEventListener(\"mouseenter\", () => {\r\n        imgBox[\r\n          index\r\n        ].innerHTML = `<object type=\"image/svg+xml\" data=${svgs[index]}><img src=${svgs[index]} alt=\"\" /></object>`;\r\n      });\r\n    });\r\n    const updatedData = data.map((item) => {\r\n      if (checked) {\r\n        return {\r\n          ...item,\r\n          interval_unit: \"years\",\r\n          planCode: `${item.planCode.slice(0, item.planCode.length - 2)}02`,\r\n        };\r\n      } else {\r\n        return {\r\n          ...item,\r\n          interval_unit: \"months\",\r\n          planCode: `${item.planCode.slice(0, item.planCode.length - 2)}01`,\r\n        };\r\n      }\r\n    });\r\n    setData(updatedData);\r\n  }, [checked]);\r\n\r\n  const getPrice = (title) => {\r\n    const plan = data.find((plan) => plan?.title === title);\r\n    if (plan) {\r\n      if (checked) {\r\n        return parseInt(plan?.price) * (checked ? 10 : 1);\r\n      } else {\r\n        return plan?.price;\r\n      }\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const handlePlan = () => {\r\n    Crisp.chat.open();\r\n    Crisp.message.send(\"text\", \"We'll get back to you shortly\");\r\n  };\r\n\r\n  const selectedPlan = (planCode, title, price, type) => {\r\n    const body = {\r\n      plan_code: planCode,\r\n      subscriptionId,\r\n    };\r\n    let unit = aiPlan.plan_code.charAt(aiPlan.plan_code.length - 1);\r\n    if (checked) {\r\n      if (aiPlan.price >= price && unit == type) {\r\n        axiosPost(`/payments/downgrade`, body)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              setButtonClicked(false);\r\n              const updatedData = data.map((item) => {\r\n                if (item.title === title) {\r\n                  return { ...item, loading: false };\r\n                }\r\n                return item;\r\n              });\r\n              setData(updatedData);\r\n              dispatch(\r\n                userSlice.actions.setInfoModal({\r\n                  showModal: true,\r\n                  modalType: \"success\",\r\n                  modalTitle: \"Success\",\r\n                  modalMessage:\r\n                    \"Your plan downgrade has been scheduled, and the changes will only take effect upon renewal.\",\r\n                })\r\n              );\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            dispatch(\r\n              userSlice.actions.setToastPopUp({\r\n                show: true,\r\n                toastType: \"error\",\r\n                message: `Something went wrong`,\r\n              })\r\n            );\r\n          })\r\n          .finally(() => {\r\n            setTimeout(() => {\r\n              setButtonClicked(false);\r\n              const updatedData = data.map((item) => {\r\n                if (item.title === title) {\r\n                  return { ...item, loading: false };\r\n                }\r\n                return item;\r\n              });\r\n              setData(updatedData);\r\n            }, 1000);\r\n          });\r\n      } else {\r\n        axiosPost(`/payments/aihostedPage`, body)\r\n          .then((response) => {\r\n            window.location.assign(response.data.url);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            dispatch(\r\n              userSlice.actions.setToastPopUp({\r\n                show: true,\r\n                toastType: \"error\",\r\n                message: `Something went wrong`,\r\n              })\r\n            );\r\n          })\r\n          .finally(() => {\r\n            setTimeout(() => {\r\n              setButtonClicked(false);\r\n              const updatedData = data.map((item) => {\r\n                if (item.title === title) {\r\n                  return { ...item, loading: false };\r\n                }\r\n                return item;\r\n              });\r\n              setData(updatedData);\r\n            }, 1000);\r\n          });\r\n      }\r\n    } else {\r\n      if (\r\n        aiPlan.price >= price ||\r\n        (unit != type && aiPlan.plan_code !== \"trial_02\")\r\n      ) {\r\n        axiosPost(`/payments/downgrade`, body)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              setButtonClicked(false);\r\n              const updatedData = data.map((item) => {\r\n                if (item.title === title) {\r\n                  return { ...item, loading: false };\r\n                }\r\n                return item;\r\n              });\r\n              setData(updatedData);\r\n              dispatch(\r\n                userSlice.actions.setInfoModal({\r\n                  showModal: true,\r\n                  modalType: \"success\",\r\n                  modalTitle: \"Success\",\r\n                  modalMessage:\r\n                    \"Your plan downgrade has been scheduled, and the changes will only take effect upon renewal.\",\r\n                })\r\n              );\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            dispatch(\r\n              userSlice.actions.setToastPopUp({\r\n                show: true,\r\n                toastType: \"error\",\r\n                message: `Something went wrong`,\r\n              })\r\n            );\r\n          })\r\n          .finally(() => {\r\n            setTimeout(() => {\r\n              setButtonClicked(false);\r\n              const updatedData = data.map((item) => {\r\n                if (item.title === title) {\r\n                  return { ...item, loading: false };\r\n                }\r\n                return item;\r\n              });\r\n              setData(updatedData);\r\n            }, 1000);\r\n          });\r\n      } else {\r\n        axiosPost(`/payments/aihostedPage`, body)\r\n          .then((response) => {\r\n            window.location.assign(response.data.url);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            dispatch(\r\n              userSlice.actions.setToastPopUp({\r\n                show: true,\r\n                toastType: \"error\",\r\n                message: `Something went wrong`,\r\n              })\r\n            );\r\n          })\r\n          .finally(() => {\r\n            setTimeout(() => {\r\n              setButtonClicked(false);\r\n              const updatedData = data.map((item) => {\r\n                if (item.title === title) {\r\n                  return { ...item, loading: false };\r\n                }\r\n                return item;\r\n              });\r\n              setData(updatedData);\r\n            }, 1000);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpgrade = (title, price, interval_unit) => {\r\n    setButtonClicked(true);\r\n    const plan = data.find((plan) => plan?.title === title);\r\n    if (plan) {\r\n      const updatedData = data.map((item) => {\r\n        if (item.title === title) {\r\n          return { ...item, loading: true };\r\n        }\r\n        return item;\r\n      });\r\n      setData(updatedData);\r\n      if (title === \"Basic\") {\r\n        if (checked) {\r\n          selectedPlan(\"basic_02\", title, 250, \"2\");\r\n        } else {\r\n          selectedPlan(\"basic_01\", title, 25, \"1\");\r\n        }\r\n      } else if (title === \"Professional\") {\r\n        if (checked) {\r\n          selectedPlan(\"standard_02\", title, 950, \"2\");\r\n        } else {\r\n          selectedPlan(\"standard_01\", title, 95, \"1\");\r\n        }\r\n      } else if (title === \"Enterprise\") {\r\n        if (checked) {\r\n          selectedPlan(\"advanced_02\", title, 3750, \"2\");\r\n        } else {\r\n          selectedPlan(\"advanced_01\", title, 375, \"1\");\r\n        }\r\n      } else if (title === \"Free\") {\r\n        selectedPlan(\"free_01\", title, 0, \"1\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const handleMouseEnter = () => {\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsHovered(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"ai-plan-flex\"\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        {data.map((plan, i) => (\r\n          <div\r\n            className={`aiplan-bx ${\r\n              aiPlan?.plan_code === plan?.planCode ||\r\n              (aiPlan?.plan_code === \"trial_01\" &&\r\n                plan?.planCode === \"basic_01\") ||\r\n              (aiPlan?.plan_code === \"trial_02\" &&\r\n                plan?.planCode === \"basic_01\")\r\n                ? \"active-aiplan\"\r\n                : \"\"\r\n            }`}\r\n            key={i}\r\n          >\r\n            <div className=\"aiplan-ing-bx\">{plan?.image}</div>\r\n            <div className=\"aiplan-content-bx\">\r\n              <h2 className=\"mb-20\">\r\n                {plan?.title}\r\n\r\n                {(aiPlan?.trial || aiPlan?.name === \"Free\") &&\r\n                  plan?.title === \"Professional\" && (\r\n                    <span className=\"ai-recommend\">Recommended</span>\r\n                  )}\r\n\r\n                {(aiPlan?.plan_code === plan?.planCode ||\r\n                  (aiPlan?.plan_code === \"trial_01\" &&\r\n                    plan?.planCode === \"basic_01\") ||\r\n                  (aiPlan?.plan_code === \"trial_02\" &&\r\n                    plan?.planCode === \"basic_01\")) &&\r\n                  aiPlan?.trial && (\r\n                    <div className=\"nw-plan-img-bx\">\r\n                      <div className=\"current-pln pln-green pln-position\">\r\n                        Trial Plan\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n              </h2>\r\n\r\n              <div className=\"ai-plan-price fx jst-sp-bt\">\r\n                {plan.title === \"Enterprise\" ? (\r\n                  <span>Custom </span>\r\n                ) : (\r\n                  <>\r\n                    <span>${getPrice(plan?.title)}</span> per{\" \"}\r\n                    {checked ? \"year\" : \"month\"}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {((checked &&\r\n                plan?.title === aiPlan?.name?.trim() &&\r\n                (planType === \"years\" || plan?.title === \"Free\") &&\r\n                !aiPlan?.trial) ||\r\n                (!checked &&\r\n                  plan?.title === aiPlan?.name?.trim() &&\r\n                  planType === \"months\" &&\r\n                  !aiPlan?.trial)) && (\r\n                <button\r\n                  disabled={\r\n                    plan?.loading ||\r\n                    (plan?.planCode === aiPlan?.plan_code && !aiPlan?.trial) ||\r\n                    plan?.title?.trim() == \"Free\" ||\r\n                    buttonClicked ||\r\n                    isEvent\r\n                  }\r\n                >\r\n                  Current Plan\r\n                </button>\r\n              )}\r\n\r\n              {!(\r\n                !checked &&\r\n                plan?.title === aiPlan?.name?.trim() &&\r\n                (planType === \"months\" || plan?.title === \"Free\") &&\r\n                !aiPlan?.trial\r\n              ) &&\r\n                !(\r\n                  checked &&\r\n                  plan?.title === aiPlan?.name?.trim() &&\r\n                  (planType === \"years\" || plan?.title === \"Free\") &&\r\n                  !aiPlan?.trial\r\n                ) &&\r\n                plan.title !== \"Enterprise\" && (\r\n                  <Fragment>\r\n                    {checked ? (\r\n                      <button\r\n                        onClick={() =>\r\n                          handleUpgrade(\r\n                            plan?.title,\r\n                            plan?.price,\r\n                            plan?.interval_unit\r\n                          )\r\n                        }\r\n                        disabled={\r\n                          plan?.loading ||\r\n                          (plan?.planCode === aiPlan?.plan_code &&\r\n                            !aiPlan?.trial) ||\r\n                          plan?.title?.trim() == \"Free\" ||\r\n                          buttonClicked ||\r\n                          isEvent\r\n                        }\r\n                      >\r\n                        {getPrice(plan?.title) < aiPlan?.price &&\r\n                        plan.interval_unit === planType ? (\r\n                          <>{plan?.loading ? \"Changing...\" : plan?.button2}</>\r\n                        ) : (\r\n                          <>{plan?.loading ? \"Upgrading...\" : plan?.button}</>\r\n                        )}\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() =>\r\n                          handleUpgrade(\r\n                            plan?.title,\r\n                            plan?.price,\r\n                            plan?.interval_unit\r\n                          )\r\n                        }\r\n                        disabled={\r\n                          plan?.loading ||\r\n                          (plan?.planCode === aiPlan?.plan_code &&\r\n                            !aiPlan?.trial) ||\r\n                          plan?.title?.trim() == \"Free\" ||\r\n                          buttonClicked ||\r\n                          isEvent\r\n                        }\r\n                      >\r\n                        {getPrice(plan?.title) < aiPlan?.price ? (\r\n                          <>{plan?.loading ? \"Changing...\" : plan?.button2}</>\r\n                        ) : (\r\n                          <>{plan?.loading ? \"Upgrading...\" : plan?.button}</>\r\n                        )}\r\n                      </button>\r\n                    )}\r\n                  </Fragment>\r\n                )}\r\n              {plan.title === \"Enterprise\" && (\r\n                <button onClick={handlePlan}>Contact us</button>\r\n              )}\r\n\r\n              <ul>\r\n                {plan?.title === \"Enterprise\" ? (\r\n                  <span>Looking For: </span>\r\n                ) : (\r\n                  <span>Features</span>\r\n                )}\r\n                {/* <span>Features</span> */}\r\n                {plan?.features.map((feature: any, index) => (\r\n                  <li key={index}>\r\n                    <span> {feature}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AIPricing;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { userSlice } from \"../../redux/User\";\r\nimport { State } from \"../../redux/Types\";\r\nimport { axiosPost } from \"../../services/axiosService\";\r\nimport { setCookie } from \"../../services/cookieService\";\r\nimport \"../../assets/plansimage/FreePlan\";\r\nimport PlusPlan from \"../../assets/plansimage/PlusPlan\";\r\nimport CustomPlan from \"../../assets/plansimage/CustomPlan\";\r\nimport SmallLoader from \"../loaders/SmallLoader\";\r\nimport { io } from \"socket.io-client\";\r\nimport AIPricing from \"../../pages/NewPricing/AIPricing\";\r\nimport environment from \"./../../constants/Environment\";\r\nimport Coupon from \"../coupon\";\r\nimport * as GtmService from \"../../services/gtmService\";\r\nimport useGetCompany from \"@/hooks/useGetCompany\";\r\nimport { Crisp } from \"crisp-sdk-web\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useQueryClient } from \"@tanstack/react-query\";\r\nimport PaymentSummary from \"./PaymentSummary\";\r\nimport SettingsNavbar from \"./HorizontalNavbars/SettingsNavbar\";\r\nimport { PlanModals } from \"@/pages/agent/PlanAddonModal\";\r\nconst environmentData = environment();\r\n\r\ninterface Props {\r\n  calledFromAgent?: any;\r\n  showPlansModal?: string;\r\n  setShowPlansModal?: React.Dispatch<React.SetStateAction<PlanModals>>;\r\n}\r\n\r\nconst Plans = ({ calledFromAgent, showPlansModal = \"\", setShowPlansModal = () => {} } : Props) => {\r\n  const dispatch = useDispatch();\r\n  const router = useNavigate();\r\n  const location = useLocation();\r\n  const queryParam = new URLSearchParams(location.search).get(\"hostedpage_id\");\r\n  const upgraded = new URLSearchParams(location.search).get(\"checked\");\r\n  const priceCode = new URLSearchParams(location.search).get('code')\r\n  const priceVal = new URLSearchParams(location.search).get('price')\r\n  const add = new URLSearchParams(location.search).get('addon')\r\n  const [checked, setChecked] = useState<any>( (upgraded == 'true' || calledFromAgent) ? true : false);\r\n  const userEmail = useSelector((state: State) => state.user.userEmail);\r\n  const compDetails = useSelector((state: State) => state.user.companyDetails);\r\n  const websocketPrice = useSelector((state: State) => state.user.socket);\r\n  const [plan, setPlan] = useState<any>({});\r\n  const [planType, setPlanType] = useState<any>(\"\");\r\n  const [aiPlan, setAiPlan] = useState<any>({});\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [reloadState, setReloadState] = useState<boolean>(true);\r\n  const [subscriptionId, setSubscriptionId] = useState<any>(\"\");\r\n  const [subscription, setSubscription] = useState<any>({});\r\n  const [subId, setSubId] = useState<any>(\"\");\r\n  const [isEvent, setIsEvent] = useState(false);\r\n  const [checkOutPage, setCheckOutPage] = useState(priceCode ? true : false);\r\n  // const showCoupon = useSelector((state: State) => state.user.showCoupon)\r\n  const [isApplied, setIsApplied] = useState<boolean>(false);\r\n  const [showCoupon, setShowCoupon] = useState<boolean>(false);\r\n  const [code, setCode] = useState<string>(\"\");\r\n  const [price, setPrice] = useState(Number(priceVal) ?? 0);\r\n  const queryClient = useQueryClient();\r\n  const [addons, setAddons] = useState(add)\r\n  const [customerId, setCustomerId] = useState(\"\");\r\n  const [planCode, setPlaneCode] = useState(priceCode ?? \"\");\r\n  const companyDetails = useGetCompany();\r\n\r\n  useEffect(() => {\r\n    if (companyDetails.isSuccess) {\r\n      const response = companyDetails.data;\r\n      if (response && response.data.token) {\r\n        setCookie(\r\n          \"token\",\r\n          response.data.token,\r\n          1,\r\n          environment()?.PUBLIC_DOMAIN,\r\n          \"/\",\r\n        );\r\n        setCookie(\r\n          \"token\",\r\n          response.data.token,\r\n          1,\r\n          environment()?.PAGE_DOMAIN,\r\n          \"/\",\r\n        );\r\n      }\r\n      const units =\r\n        !environment().isAI && response.data.data.subscription?.interval_unit;\r\n\r\n      const plan = environment().isAI\r\n        ? response.data.data.ai_subscription?.plan\r\n        : response.data.data.subscription?.plan;\r\n      const billing = environment().isAI\r\n        ? response.data.data.ai_billing?.current_term_ends_at\r\n        : response.data.data.billing?.current_term_ends_at;\r\n\r\n      const customer = environment().isAI\r\n        ? response.data.data?.ai_subscription?.customer?.customer_id\r\n        : response.data.data?.subscription?.customer?.customer_id;\r\n\r\n      setCustomerId(customer);\r\n      setSubscription(response.data.data);\r\n\r\n      // if (!plan?.trial) {\r\n      //   const currentDate = new Date().getTime();\r\n      //   const trialEndDate = new Date(billing?.current_term_ends_at).getTime();\r\n      //   if (currentDate <= trialEndDate) {\r\n      //     router(\"/dashboard\");\r\n      //   }\r\n      // }\r\n      // setBilling(billing);\r\n      setPlan(response?.data?.data?.subscription?.plan ?? {});\r\n      setAiPlan(response?.data?.data?.ai_subscription?.plan ?? {});\r\n      setSubscriptionId(response?.data?.data?.ai_subscription?.subscription_id);\r\n      setSubId(response?.data?.data?.subscription?.subscription_id);\r\n\r\n      setPlanType(response.data?.data?.ai_subscription?.interval_unit);\r\n\r\n      const checkCode = environment().isAI\r\n        ? response?.data?.data?.ai_subscription?.plan?.plan_code\r\n        : response?.data?.data?.subscription?.plan?.plan_code;\r\n      // if ((upgraded == \"true\")) setChecked(true);\r\n      console.log('qwewffd',calledFromAgent, upgraded)\r\n      if (\r\n        checkCode === \"standard_02\" ||\r\n        checkCode === \"basic_02\" ||\r\n        checkCode === \"advanced_02\" ||\r\n        checkCode === environmentData.YEARLYPLAN ||\r\n        units === \"year\" \r\n    \r\n      ) {\r\n        setChecked(true);\r\n      } \r\n      setReloadState(false);\r\n    }\r\n  }, [companyDetails.data]);\r\n\r\n  useEffect(() => {\r\n    const socket = io(environmentData.SERVER_API_URL, {\r\n      reconnection: false,\r\n      transports: [\"websocket\"],\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"socket conneted\");\r\n      dispatch(userSlice.actions.setSocket(true));\r\n    });\r\n\r\n    socket.emit(\"price\", { userEmail: userEmail });\r\n    socket.on(\"event\", (res) => {\r\n      const companyName: any = compDetails.compName;\r\n      const userId: any = compDetails.userId;\r\n      const compId: any = compDetails._id;\r\n      console.log(\r\n        \"sockettt:::\",\r\n        res.data?.previous_attributes?.items?.data[0].plan.id,\r\n        res.data?.object?.items?.data[0].plan?.id,\r\n      );\r\n\r\n      console.log(\"socket data : \", res.data);\r\n      queryClient.invalidateQueries({\r\n        queryKey: [\"getCompany\"],\r\n      });\r\n      if (\r\n        res.data?.previous_attributes?.items?.data[0].plan.id ===\r\n        res.data?.object?.items?.data[0].plan?.id\r\n      ) {\r\n        socket.off(\"connect\");\r\n        socket.disconnect();\r\n        dispatch(userSlice.actions.setSocket(false));\r\n        setIsEvent(false);\r\n\r\n        return;\r\n      }\r\n      if (typeof window.gr === \"function\") {\r\n        window.gr(\"track\", \"conversion\", {\r\n          email: userEmail,\r\n        });\r\n      }\r\n      GtmService.pushToDataLayer({\r\n        event:\r\n          res.data?.previous_attributes?.items?.data[0].plan.id ===\r\n          environmentData.TRIALPLAN\r\n            ? \"purchase\"\r\n            : \"upgrade\",\r\n        user_email: userEmail ?? \"\",\r\n        plan_name: res.data?.object?.items?.data[0].plan?.nickname ?? \"\",\r\n        plan_code: res.data?.object?.items?.data[0].plan?.id ?? \"\",\r\n        customer_id: res.data?.object?.customer ?? \"\",\r\n        subscription_id: res.data?.object?.id ?? \"\",\r\n        company_name: companyName ?? \"\",\r\n        company_id: compId ?? \"\",\r\n        user_id: userId ?? \"\",\r\n      });\r\n\r\n      if (\r\n        // res.data?.plan?.plan_code === \"basic_01\" ||\r\n        // res.data?.plan?.plan_code === \"basic_02\" ||\r\n        // res.data?.plan?.plan_code === \"standard_01\" ||\r\n        // res.data?.plan?.plan_code === \"standard_02\" ||\r\n        res.data?.object?.items?.data[0].plan?.id ===\r\n          environmentData.MONTHLYPLAN ||\r\n        res.data?.object?.items?.data[0].plan?.id ===\r\n          environmentData.YEARLYPLAN\r\n      ) {\r\n        dispatch(\r\n          userSlice.actions.setToastPopUp({\r\n            show: true,\r\n            toastType: \"success\",\r\n            message: `Your plan upgraded successfully`,\r\n          }),\r\n        );\r\n      }\r\n      setIsEvent(false);\r\n      dispatch(userSlice.actions.setSocket(false));\r\n      socket.off(\"connect\");\r\n      socket.disconnect();\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!calledFromAgent) {\r\n      if (queryParam && queryParam.trim().length >= 1) {\r\n        setIsEvent(true);\r\n      }\r\n      router(\"/settings\");\r\n    }\r\n    calledFromAgent && setShowPlansModal(\"plan\");\r\n  }, [])\r\n\r\n  const checkSaveMethod = async (planCode, price) => {\r\n    setPlaneCode(planCode);\r\n    setLoading(true);\r\n    setPrice(price);\r\n    setIsEvent(true);\r\n \r\n \r\n    try {\r\n      if (plan?.price > price) {\r\n        // for downgrade\r\n        const data = {\r\n          subId,\r\n          plan_code: planCode,\r\n        };\r\n        const downgrade = await axiosPost(\"/payments/omniDowngrade\", data);\r\n        dispatch(\r\n          userSlice.actions.setInfoModal({\r\n            showModal: true,\r\n            modalType: \"success\",\r\n            modalTitle: \"Your plan downgraded successfully\",\r\n            modalMessage:\r\n              \"The downgrade changes made will be reflected in your account from next billing.\",\r\n            modalButtonText: \"Go To Billing\",\r\n          }),\r\n        );\r\n      } else {\r\n        const data = {\r\n          customerId,\r\n        };\r\n        setCheckOutPage(true);\r\n        // if (plan.trial) {\r\n        //   setCheckOutPage(true);\r\n        // } else {\r\n        //   const data = {\r\n        //     subscriptionId,\r\n        //     customerId,\r\n        //     planCode,\r\n        //   };\r\n        //   const res = await axiosPost(\"/payments/upgradePlan\", data);\r\n        //     if(res.data.message === 'your plan will be updated shortly'){\r\n        //       dispatch(\r\n        //         userSlice.actions.setToastPopUp({\r\n        //           show: true,\r\n        //           toastType: \"success\",\r\n        //           message: res.data.message,\r\n        //         }),\r\n        //       );\r\n\r\n        //     }else {\r\n        //       dispatch(\r\n        //         userSlice.actions.setInfoModal({\r\n        //           showModal: true,\r\n        //           modalType: \"success\",\r\n        //           modalTitle: \"Plan Schedule Successfully\",\r\n        //           modalMessage: res.data.message,\r\n        //           modalButtonText: \"Go To Billing\"\r\n        //         })\r\n        //       );\r\n        //     }\r\n\r\n        // }\r\n      }\r\n    } catch (err) {\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const handlePlan = async () => {\r\n    Crisp.chat.open();\r\n    Crisp.message.send(\r\n      \"text\",\r\n      \"I'm looking for an enterprise plan quote. Would you be able to help?\",\r\n    );\r\n    await axiosPost(`/internal/email`, {\r\n      userEmail,\r\n      current_plan: plan.name,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {(calledFromAgent ? showPlansModal === \"plan\" : 1) && (<motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 1 }}\r\n        className=\"api-container transition-group settings-container\"\r\n      >\r\n       \r\n        {!calledFromAgent && <SettingsNavbar title={\"Plans and Pricing\"} />}\r\n        {reloadState ? (\r\n          <SmallLoader />\r\n        ) : (\r\n          <>\r\n            {environment().isAI ? (\r\n              <Fragment>\r\n                <div className=\"pricing-head mt-84\">\r\n                  <h1>Choose the best plan for your business </h1>\r\n\r\n                  <div className=\"pricing-toggle\">\r\n                    <span\r\n                      className={\r\n                        checked ? \"monthly-label\" : \"monthly-label selected\"\r\n                      }\r\n                    >\r\n                      Monthly\r\n                    </span>\r\n                    <label\r\n                      className=\"pricing-toggle-wrapper\"\r\n                      onChange={() => {\r\n                        setChecked(!checked);\r\n                      }}\r\n                    >\r\n                      <input type=\"checkbox\" checked={checked} />\r\n                      <span className=\"toggle-switch round\"></span>\r\n                    </label>\r\n                    <span\r\n                      className={\r\n                        checked ? \"yearly-label selected\" : \"yearly-label\"\r\n                      }\r\n                    >\r\n                      Yearly\r\n                    </span>\r\n                  </div>\r\n                  <p>(Save 2 months with annual billing)</p>\r\n                </div>\r\n                <AIPricing\r\n                  checked={checked}\r\n                  aiPlan={aiPlan}\r\n                  planType={planType}\r\n                  subscriptionId={subscriptionId}\r\n                  isEvent={isEvent}\r\n                />\r\n                {(aiPlan.plan_code === \"trial_01\" ||\r\n                  aiPlan.plan_code === \"trial_02\") && (\r\n                  <>\r\n                    <div\r\n                      className={`coupon-container fx al-fx-cnt jstfy-sp-btw mt-30 gap-20 ${\r\n                        isApplied ? \"coupon-applied\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <div className=\"fx al-fx-cnt gap-10\">\r\n                        {isApplied ? (\r\n                          <Fragment>\r\n                            <svg\r\n                              width=\"40\"\r\n                              height=\"40\"\r\n                              viewBox=\"0 0 40 40\"\r\n                              fill=\"none\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                              <path\r\n                                d=\"M40 20C40 31.0457 31.0457 40 20 40C8.9543 40 0 31.0457 0 20C0 8.9543 8.9543 0 20 0C31.0457 0 40 8.9543 40 20Z\"\r\n                                fill=\"#4CAF50\"\r\n                              />\r\n                              <path\r\n                                d=\"M12 18.9444L17.7778 24.7222L28 14.5\"\r\n                                stroke=\"white\"\r\n                                strokeWidth=\"2\"\r\n                              />\r\n                            </svg>\r\n                            <div className=\"coupon-details\">\r\n                              <h3>Coupon/Promo Code</h3>\r\n                              <p>{code} code is successfull applied</p>\r\n                            </div>\r\n                          </Fragment>\r\n                        ) : (\r\n                          <Fragment>\r\n                            <svg\r\n                              width=\"48\"\r\n                              height=\"48\"\r\n                              viewBox=\"0 0 48 48\"\r\n                              fill=\"none\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                              <rect\r\n                                y=\"0.000976562\"\r\n                                width=\"48\"\r\n                                height=\"47.999\"\r\n                                rx=\"23.9995\"\r\n                                fill=\"#FB5F66\"\r\n                              />\r\n                              <path\r\n                                d=\"M17.6924 19.9941C17.5512 19.9941 17.4158 20.0502 17.316 20.15C17.2162 20.2498 17.1602 20.3852 17.1602 20.5263V21.6823C17.1602 21.8234 17.2162 21.9588 17.316 22.0586C17.4158 22.1584 17.5512 22.2145 17.6924 22.2145C17.8335 22.2145 17.9689 22.1584 18.0687 22.0586C18.1685 21.9588 18.2246 21.8234 18.2246 21.6823V20.5263C18.2246 20.3852 18.1685 20.2498 18.0687 20.15C17.9689 20.0502 17.8335 19.9941 17.6924 19.9941ZM17.6924 22.8851C17.5512 22.8851 17.4158 22.9411 17.316 23.0409C17.2162 23.1408 17.1602 23.2761 17.1602 23.4173V24.5732C17.1602 24.7144 17.2162 24.8497 17.316 24.9495C17.4158 25.0493 17.5512 25.1054 17.6924 25.1054C17.8335 25.1054 17.9689 25.0493 18.0687 24.9495C18.1685 24.8497 18.2246 24.7144 18.2246 24.5732V23.4173C18.2246 23.2761 18.1685 23.1408 18.0687 23.0409C17.9689 22.9411 17.8335 22.8851 17.6924 22.8851ZM17.6924 25.776C17.5512 25.776 17.4158 25.8321 17.316 25.9319C17.2162 26.0317 17.1602 26.1671 17.1602 26.3082V27.4641C17.1602 27.6053 17.2162 27.7407 17.316 27.8405C17.4158 27.9403 17.5512 27.9963 17.6924 27.9963C17.8335 27.9963 17.9689 27.9403 18.0687 27.8405C18.1685 27.7407 18.2246 27.6053 18.2246 27.4641V26.3082C18.2246 26.1671 18.1685 26.0317 18.0687 25.9319C17.9689 25.8321 17.8335 25.776 17.6924 25.776Z\"\r\n                                fill=\"white\"\r\n                              />\r\n                              <path\r\n                                d=\"M16.0258 13.8877C15.713 13.9135 15.4147 14.0303 15.1675 14.2237C14.9204 14.4171 14.7353 14.6787 14.6351 14.9761L13.9262 17.116C13.0619 17.1884 12.3711 17.9143 12.3711 18.7957V20.9133C12.3712 21.0258 12.4069 21.1354 12.4732 21.2264C12.5394 21.3173 12.6328 21.3849 12.7399 21.4194C13.4041 21.6339 13.9677 22.4679 13.9677 23.4892C13.9677 24.511 13.4041 25.3455 12.7399 25.5594C12.6327 25.594 12.5393 25.6617 12.473 25.7527C12.4067 25.8438 12.3711 25.9535 12.3711 26.0661V29.2465C12.3732 29.695 12.5523 30.1246 12.8694 30.4417C13.1866 30.7588 13.6161 30.9379 14.0646 30.94H22.4667L31.5026 34.0252C32.3371 34.3099 33.2499 33.8437 33.525 33.0124L34.2148 30.9272C35.0876 30.8644 35.7885 30.1343 35.7885 29.2465V26.065C35.7884 25.9525 35.7527 25.8429 35.6864 25.752C35.6202 25.661 35.5268 25.5935 35.4197 25.5589C34.7555 25.3444 34.1919 24.5105 34.1919 23.4886C34.1919 22.4673 34.7555 21.6328 35.4197 21.4184C35.5268 21.3838 35.6202 21.3162 35.6864 21.2253C35.7527 21.1344 35.7884 21.0248 35.7885 20.9122V18.7957C35.7863 18.3473 35.6071 17.9179 35.29 17.6009C34.9729 17.2839 34.5434 17.1048 34.095 17.1027H25.6951L16.6607 13.9633C16.4516 13.8904 16.2233 13.8994 16.0263 13.8877H16.0258ZM16.104 14.9436C16.1732 14.9388 16.2451 14.9478 16.3169 14.9718L22.4502 17.1027H15.0524L15.6453 15.3092C15.6758 15.209 15.736 15.1204 15.8179 15.0552C15.8998 14.9899 15.9996 14.951 16.104 14.9436ZM14.0646 18.1671H17.161V18.6733C17.161 18.8144 17.2171 18.9498 17.3169 19.0496C17.4167 19.1494 17.5521 19.2055 17.6932 19.2055C17.8344 19.2055 17.9698 19.1494 18.0696 19.0496C18.1694 18.9498 18.2254 18.8144 18.2254 18.6733V18.1671H34.095C34.4527 18.1671 34.7241 18.4386 34.7241 18.7957V20.6078C33.7411 21.1257 33.1274 22.2417 33.1274 23.4892C33.1274 24.7361 33.7416 25.8522 34.7241 26.3695V29.2465C34.7241 29.6042 34.4527 29.8756 34.095 29.8756H18.2244C18.227 29.692 18.2254 29.5031 18.2254 29.3173C18.2254 29.1762 18.1694 29.0408 18.0696 28.941C17.9698 28.8412 17.8344 28.7851 17.6932 28.7851C17.5521 28.7851 17.4167 28.8412 17.3169 28.941C17.2171 29.0408 17.161 29.1762 17.161 29.3173C17.16 29.502 17.161 29.6931 17.1621 29.8756H14.0646C13.7064 29.8756 13.4355 29.6042 13.4355 29.2465V26.3705C14.4185 25.8527 15.0322 24.7367 15.0322 23.4892C15.0322 22.2417 14.418 21.1262 13.4355 20.6089V18.7957C13.4355 18.438 13.707 18.1671 14.0646 18.1671ZM25.7605 30.94H33.0891L32.5143 32.6777C32.4185 32.9666 32.1285 33.1141 31.8469 33.0183L25.7605 30.94Z\"\r\n                                fill=\"white\"\r\n                              />\r\n                              <path\r\n                                d=\"M28.7451 24.8289C29.6924 24.8289 30.4716 25.6075 30.4716 26.5548C30.4716 27.5022 29.6924 28.2824 28.7451 28.2824C27.7977 28.2824 27.0175 27.5022 27.0175 26.5548C27.0175 25.6075 27.7977 24.8289 28.7451 24.8289ZM28.7451 25.8933C28.3725 25.8933 28.0819 26.1828 28.0819 26.5548C28.0819 26.9269 28.373 27.218 28.7451 27.218C29.1171 27.218 29.4071 26.9274 29.4071 26.5548C29.4071 26.1823 29.1171 25.8933 28.7451 25.8933ZM23.6773 19.7607C24.1345 19.763 24.5724 19.9456 24.8957 20.2689C25.219 20.5922 25.4016 21.03 25.4038 21.4872C25.4038 22.4345 24.6247 23.2137 23.6768 23.2137C22.7289 23.2137 21.9492 22.4345 21.9492 21.4872C21.9515 21.0298 22.1342 20.5918 22.4578 20.2685C22.7813 19.9452 23.2199 19.7627 23.6773 19.7607ZM23.6773 20.8251C23.3048 20.8251 23.0136 21.1152 23.0136 21.4872C23.0136 21.8598 23.3048 22.1493 23.6768 22.1493C24.0493 22.1493 24.3394 21.8592 24.3394 21.4872C24.3394 21.1147 24.0499 20.8251 23.6773 20.8251ZM28.3688 21.1109L23.3 26.1796C23.203 26.28 23.1494 26.4145 23.1506 26.554C23.1518 26.6935 23.2078 26.827 23.3065 26.9257C23.4051 27.0244 23.5386 27.0803 23.6782 27.0816C23.8177 27.0828 23.9522 27.0291 24.0525 26.9322L29.1213 21.8635C29.2211 21.7637 29.2772 21.6283 29.2772 21.4872C29.2772 21.3461 29.2211 21.2107 29.1213 21.1109C28.9037 20.9178 28.5732 20.8975 28.3688 21.1109Z\"\r\n                                fill=\"white\"\r\n                              />\r\n                            </svg>\r\n                            <div className=\"coupon-details\">\r\n                              <h3>Coupon/Promo Code</h3>\r\n                              {/* <p>Apply your coupon code to receive a discount on our premium plan.</p> */}\r\n                            </div>\r\n                          </Fragment>\r\n                        )}\r\n                      </div>\r\n                      {isApplied ? (\r\n                        <a className=\"cp\">Applied</a>\r\n                      ) : (\r\n                        <a className=\"cp\" onClick={() => setShowCoupon(true)}>\r\n                          Apply Code\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                    {showCoupon && (\r\n                      <Coupon\r\n                        setIsApplied={setIsApplied}\r\n                        setShowCoupon={setShowCoupon}\r\n                        setCode={setCode}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <div className=\"settings_wrapper mt-84\">\r\n                  <div className=\"pricing-head pb-30\">\r\n                    <h1>Choose the best plan for your business </h1>\r\n\r\n                    <div className=\"pricing-toggle\">\r\n                      <span\r\n                        className={\r\n                          checked ? \"monthly-label\" : \"monthly-label selected\"\r\n                        }\r\n                      >\r\n                        Monthly\r\n                      </span>\r\n                      <label\r\n                        className=\"pricing-toggle-wrapper\"\r\n                        onChange={() => {\r\n                          setChecked(!checked);\r\n                        }}\r\n                      >\r\n                        <input type=\"checkbox\" checked={checked} />\r\n                        <span className=\"toggle-switch round\"></span>\r\n                      </label>\r\n                      <span\r\n                        className={\r\n                          checked ? \"yearly-label selected\" : \"yearly-label\"\r\n                        }\r\n                      >\r\n                        Yearly\r\n                      </span>\r\n                    </div>\r\n                    <p>(Save 2 months with annual billing)</p>\r\n                  </div>\r\n                  <div className=\"plan-nw no-p gap-30\">\r\n                    <div\r\n                      className={`plus-plan-nw-bx ${\r\n                        (checked &&\r\n                          (plan?.plan_code ===\r\n                            environmentData.YEARLYPLAN ||\r\n                            plan?.plan_code === \"lifetime_02\")) ||\r\n                        (!checked &&\r\n                          (plan?.plan_code ===\r\n                            environmentData.MONTHLYPLAN ||\r\n                            plan?.plan_code === \"lifetime_01\" ||\r\n                            plan?.plan_code ===\r\n                              environmentData.TRIALPLAN ||\r\n                            plan?.plan_code === \"trial_02\"))\r\n                          ? \"planactive\"\r\n                          : \"\"\r\n                      } `}\r\n                    >\r\n                      <div className=\"nw-plan-img-bx\">\r\n                        {((checked &&\r\n                          plan?.plan_code ===\r\n                            environmentData.YEARLYPLAN) ||\r\n                          (!checked &&\r\n                            (plan?.plan_code ===\r\n                              environmentData.MONTHLYPLAN ||\r\n                              plan?.plan_code ===\r\n                                environmentData.TRIALPLAN ||\r\n                              plan?.plan_code === \"trial_02\"))) && (\r\n                          <div className={`current-pln pln-green`}>\r\n                            {plan?.trial ? \"Trial Plan\" : \"Current Plan\"}\r\n                          </div>\r\n                        )}\r\n                        <PlusPlan />\r\n                      </div>\r\n\r\n                      <div className=\"nw-plan-head\">\r\n                        <div className=\"hd-rght\">\r\n                          <h1>\r\n                            {\" \"}\r\n                            {plan?.name === \"Omniengage Lifetime\" &&\r\n                              \"Lifetime\"}{\" \"}\r\n                            Plus plan{\" \"}\r\n                          </h1>\r\n                          <p className=\"no-m\">Scale up with ease</p>\r\n                        </div>\r\n                        <div>\r\n                          <hr />\r\n                        </div>\r\n                        <div className=\"hd-lft\">\r\n                          <div className=\"plan-tag\">\r\n                            <div className=\"starts-at\">Starts at</div>\r\n                            <div className=\"price-plan\">\r\n                            <span>\r\n                                {plan?.price === 220 ? (\r\n                                  <>\r\n                                    <sup></sup>${checked ? 220 : 22}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    <sup></sup>{checked ? <><del>$220</del> $187</> : <>$22</>}\r\n                                  </>\r\n                                )}\r\n                              </span>\r\n                              <span className=\"nw-plan-time\">\r\n                                /{checked ? \"year\" : \"month\"}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div\r\n                        className=\"nw-panel\"\r\n                        style={{ position: \"relative\" }}\r\n                      >\r\n                        <button\r\n                          className=\"mt-20\"\r\n                          onClick={() => {\r\n                            // checkSaveMethod(plan?.plan_code, plan?.price)\r\n                            calledFromAgent && setShowPlansModal(\"summary\");\r\n                            checked\r\n                              ? checkSaveMethod(\r\n                                  environmentData.YEARLYPLAN,\r\n                                  220,\r\n                                )\r\n                              : checkSaveMethod(\r\n                                  environmentData.MONTHLYPLAN,\r\n                                  22,\r\n                                );\r\n                          }}\r\n                          disabled={\r\n                            (!plan?.trial &&\r\n                              plan?.plan_code ===\r\n                                environmentData.YEARLYPLAN &&\r\n                              checked) ||\r\n                            (!plan?.trial &&\r\n                              plan?.plan_code ===\r\n                                environmentData.MONTHLYPLAN &&\r\n                              !checked) ||\r\n                            isEvent ||\r\n                            loading\r\n                          }\r\n                        >\r\n                          {loading ? \"Upgrading...\" : \"Upgrade Now\"}\r\n                        </button>\r\n                        {/* <button className=\"customize-plan-btn\" onClick={handlePlan}>\r\n                    Customize Plan\r\n                  </button> */}\r\n                        <i className=\"mb-20\">\r\n                          Min. Bill amount {checked ? \"$220/year\" : \"$22/month\"}\r\n                        </i>\r\n                      </div>\r\n\r\n                      <ul className=\"nw-plan-list\">\r\n                        <li>\r\n                          <span>3 Workflows</span>\r\n                        </li>\r\n                        <li>\r\n                          <span>{checked ? \"3600\" : \"300\"} AI Credits</span>\r\n                        </li>\r\n                        <li>\r\n                          <span> {checked ? \"6,000\" : \"500\"} Emails</span>\r\n                        </li>\r\n                        {/* <li>\r\n                <span>{checked ? \"10\" : \"10\"} Audience segments</span>\r\n              </li>\r\n               <li>\r\n                <span>{checked ? \"15\" : \"15\"} Data tags</span>\r\n              </li> */}\r\n                        <li>\r\n                          <span> A/B testing</span>\r\n                        </li>\r\n                        <li>\r\n                          <span> Email Warmup</span>\r\n                        </li>\r\n                      </ul>\r\n                      {/* <div className=\"add-onBar\"> AddOns</div>\r\n                      <ul className=\"nw-plan-list plus-plan-list\">\r\n                        <li>\r\n                          <span>\r\n                            {checked\r\n                              ? \"$30 for every 12,000 extra yearly\"\r\n                              : \"$3 for every 1000 extra monthly\"}{\" \"}\r\n                            push web notifications\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span>\r\n                            {checked\r\n                              ? \"$30 for every 12,000 extra yearly\"\r\n                              : \"$3 for every 1000 extra monthly\"}{\" \"}\r\n                            emails\r\n                          </span>\r\n                        </li>\r\n                        {showViewMore && (\r\n                          <>\r\n                            <li>\r\n                              <span>\r\n                                {\" \"}\r\n                                Omniengage Branding removal:{\" \"}\r\n                                {checked ? \"$750 per year\" : \"$75 per month\"}\r\n                              </span>\r\n                            </li>\r\n                            <li>\r\n                              <span>\r\n                                {\" \"}\r\n                                Extra user for{\" \"}\r\n                                {checked ? \"$120 per year\" : \"$12 per month\"}\r\n                              </span>\r\n                            </li>\r\n                            <li>\r\n                              <span>\r\n                                {checked\r\n                                  ? \"$90 for every 12,000 extra yearly\"\r\n                                  : \"$9 for every 1000 extra monthly\"}{\" \"}\r\n                                SMS\r\n                              </span>\r\n                            </li>\r\n                          </>\r\n                        )}\r\n                      </ul>\r\n                      <div\r\n                        className=\"view-more\"\r\n                        onClick={(e) => {\r\n                          setShowViewMore((prev) => !prev);\r\n                        }}\r\n                      >\r\n                        View {showViewMore ? \"Less\" : \"More\"}\r\n                      </div> */}\r\n                    </div>\r\n                    <div className=\"plan-nw-bx plan-nwcustom\">\r\n                      <div className=\"nw-plan-img-bx\">\r\n                        {/* {(plan.name === \"Plus\" || plan.name === \"Lifetime\") && <div className=\"current-pln pln-yellow\">Current Plan</div>} */}\r\n                        <CustomPlan />\r\n                      </div>\r\n                      <div className=\"nw-plan-head\">\r\n                        <div className=\"hd-rght\">\r\n                          <h1>Enterprise plan</h1>\r\n                          <p className=\"no-m\">Unleash your full potential</p>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"hd-lft\">\r\n                          <span>Custom</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"nw-panel\">\r\n                        <button onClick={handlePlan}>Contact us</button>\r\n                      </div>\r\n                      <ul className=\"nw-plan-list\">\r\n                        <li>\r\n                          <span>\r\n                            {\" \"}\r\n                            Perfect for businesses with high volume requirements\r\n                          </span>\r\n                        </li>\r\n                        {/* <li>\r\n                          <span>\r\n                            {\" \"}\r\n                            Take advantage of special rates and customized plans\r\n                          </span>\r\n                        </li> */}\r\n                        <li>\r\n                          <span> Over 20 workflows</span>\r\n                        </li>\r\n                        <li>\r\n                          <span> Access to all features</span>\r\n                        </li>\r\n                        <li>\r\n                          <span> Priority support</span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </>\r\n        )}\r\n      </motion.div>)}\r\n      {checkOutPage && (\r\n        <PaymentSummary\r\n          subscription={subscription}\r\n          setCheckOutPage={setCheckOutPage}\r\n          planCode={planCode}\r\n          setIsEvent={setIsEvent}\r\n          setLoading={setLoading}\r\n          isExpired={false}\r\n          price={price}\r\n          addon={addons}\r\n          calledFromAgent={calledFromAgent}\r\n          setShowPlansModal={setShowPlansModal}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Plans;\r\n","//! moment-timezone.js\n//! version : 0.5.45\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Resolves es6 module loading issue\n\tif (moment.version === undefined && moment.default) {\n\t\tmoment = moment.default;\n\t}\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.45\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tcountries = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tfunction closest (num, arr) {\n\t\tvar len = arr.length;\n\t\tif (num < arr[0]) {\n\t\t\treturn 0;\n\t\t} else if (len > 1 && arr[len - 1] === Infinity && num >= arr[len - 2]) {\n\t\t\treturn len - 1;\n\t\t} else if (num >= arr[len - 1]) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tvar mid;\n\t\tvar lo = 0;\n\t\tvar hi = len - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor((lo + hi) / 2);\n\t\t\tif (arr[mid] <= num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t}\n\t\treturn hi;\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\ti = closest(target, untils);\n\t\t\tif (i >= 0) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t},\n\n\t\tcountries : function () {\n\t\t\tvar zone_name = this.name;\n\t\t\treturn Object.keys(countries).filter(function (country_code) {\n\t\t\t\treturn countries[country_code].zones.indexOf(zone_name) !== -1;\n\t\t\t});\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCountry object\n\t************************************/\n\n\tfunction Country (country_name, zone_names) {\n\t\tthis.name = country_name;\n\t\tthis.zones = zone_names;\n\t}\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\tlastOffset = last.offset,\n\t\t\toffsets = [last],\n\t\t\tchange, next, nextOffset, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnextOffset = new Date(startYear, i, 1).getTimezoneOffset();\n\t\t\tif (nextOffset !== lastOffset) {\n\t\t\t\t// Create OffsetAt here to avoid unnecessary abbr parsing before checking offsets\n\t\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t\tlast = next;\n\t\t\t\tlastOffset = nextOffset;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\tcheckedOffsets = {},\n\t\t\ti, j, offset, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\toffset = offsets[i].offset;\n\t\t\tif (checkedOffsets.hasOwnProperty(offset)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tguessesOffset = guesses[offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckedOffsets[offset] = true;\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction getCountryNames () {\n\t\treturn Object.keys(countries);\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction addCountries (data) {\n\t\tvar i, country_code, country_zones, split;\n\t\tif (!data || !data.length) return;\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tsplit = data[i].split('|');\n\t\t\tcountry_code = split[0].toUpperCase();\n\t\t\tcountry_zones = split[1].split(' ');\n\t\t\tcountries[country_code] = new Country(\n\t\t\t\tcountry_code,\n\t\t\t\tcountry_zones\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction getCountry (name) {\n\t\tname = name.toUpperCase();\n\t\treturn countries[name] || null;\n\t}\n\n\tfunction zonesForCountry(country, with_offset) {\n\t\tcountry = getCountry(country);\n\n\t\tif (!country) return null;\n\n\t\tvar zones = country.zones.sort();\n\n\t\tif (with_offset) {\n\t\t\treturn zones.map(function (zone_name) {\n\t\t\t\tvar zone = getZone(zone_name);\n\t\t\t\treturn {\n\t\t\t\t\tname: zone_name,\n\t\t\t\t\toffset: zone.utcOffset(new Date())\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\treturn zones;\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\taddCountries(data.countries);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tout  = moment.utc.apply(null, args),\n\t\t\tzone;\n\n\t\tif (!moment.isMoment(input) && needsOffset(out) && (zone = getZone(name))) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz._countries\t= countries;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\ttz.countries    = getCountryNames;\n\ttz.zonesForCountry = zonesForCountry;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC && mom.isValid()) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n","var moment = module.exports = require(\"./moment-timezone\");\nmoment.tz.load(require('./data/packed/latest.json'));\n","const NoAddon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"264\" height=\"252\" viewBox=\"0 0 378 357\" fill=\"none\">\r\n      <path\r\n        d=\"M376.341 171.616C388.697 213.1 321.508 224.287 283.068 263.503C244.628 302.718 219.574 325.405 185.939 330.266C152.304 335.128 109.745 322.164 61.3524 277.439C12.9593 233.038 -13.7172 177.172 7.56202 130.826C28.8412 84.8049 98.4194 48.3031 184.909 53.8127C271.742 58.9982 363.986 130.456 376.341 171.616Z\"\r\n        fill=\"#F3F3F3\"\r\n      />\r\n      <path\r\n        d=\"M285.479 5.09165V351.218L280.419 355.826L275.337 351.218L270.266 355.826L265.206 351.218L260.124 355.826L255.053 351.218L249.971 355.826L244.911 351.218L239.84 355.826L234.758 351.218L229.687 355.826L224.627 351.218L219.556 355.826L214.474 351.218L209.415 355.826L204.344 351.218L199.262 355.826L194.191 351.218L189.12 355.826L184.049 351.218L178.978 355.826L173.907 351.218L168.836 355.826L163.765 351.218L158.683 355.826L153.623 351.218L148.552 355.826L143.47 351.218L138.399 355.826L133.339 351.218L128.257 355.826L123.186 351.218L118.126 355.826L113.044 351.218L107.973 355.826L102.902 351.218L97.8312 355.826L92.7603 351.218V5.09165L97.8312 0.472656L102.902 5.09165L107.973 0.472656L113.044 5.09165L118.126 0.472656L123.186 5.09165L128.257 0.472656L133.339 5.09165L138.399 0.472656L143.47 5.09165L148.552 0.472656L153.623 5.09165L158.683 0.472656L163.765 5.09165L168.836 0.472656L173.907 5.09165L178.978 0.472656L184.049 5.09165L189.12 0.472656L194.191 5.09165L199.262 0.472656L204.344 5.09165L209.415 0.472656L214.474 5.09165L219.556 0.472656L224.627 5.09165L229.687 0.472656L234.758 5.09165L239.84 0.472656L244.911 5.09165L249.971 0.472656L255.053 5.09165L260.124 0.472656L265.206 5.09165L270.266 0.472656L275.337 5.09165L280.419 0.472656L285.479 5.09165Z\"\r\n        fill=\"white\"\r\n      />\r\n      <path\r\n        d=\"M285.497 5.09301C285.497 5.20325 286.048 351.484 285.751 351.495L280.691 356.103L280.437 356.335L280.173 356.103L275.102 351.506H275.576L270.505 356.114L270.24 356.346L269.976 356.114L264.916 351.517H265.445L260.363 356.114L260.098 356.357L259.834 356.114L254.752 351.517H255.292L250.221 356.125L249.956 356.379L249.681 356.125L244.61 351.528H245.161L240.09 356.136L239.814 356.39L239.528 356.136L234.457 351.539H235.019L229.948 356.136L229.662 356.401L229.375 356.136L224.315 351.539H224.866L219.795 356.147L219.509 356.412L219.211 356.147L214.129 351.55H214.724L209.664 356.147L209.367 356.423L209.069 356.147L203.987 351.561H204.593L199.522 356.158L199.214 356.434L198.905 356.158L193.834 351.561H194.451L189.391 356.169L189.083 356.445L188.763 356.169L183.692 351.572H184.32L179.249 356.169L178.93 356.456L178.61 356.169L173.539 351.572H174.179L169.108 356.18L168.788 356.478L168.468 356.18L163.386 351.583H164.037L158.966 356.191L158.635 356.489L158.304 356.191L153.244 351.594H153.906L148.835 356.191L148.504 356.5L148.162 356.191L143.091 351.594H143.764L138.693 356.202L138.351 356.511L138.009 356.202L132.938 351.605H133.633L128.562 356.202L128.209 356.522L127.867 356.202L122.785 351.605H123.491L118.431 356.213L118.078 356.533L117.725 356.213L112.643 351.616H113.36L108.289 356.224L107.925 356.544L107.561 356.224L102.49 351.628H103.218L98.1581 356.224L97.7833 356.555L97.4195 356.224L92.3485 351.628L92.1611 351.462V351.22C92.1611 351.22 92.1611 4.79537 92.4698 4.82844L97.5518 0.220473L97.7833 0L98.0258 0.220473L103.086 4.82844H102.612L107.694 0.220473L107.925 0.011022L108.157 0.220473L113.228 4.83947H112.776L117.847 0.2315L118.078 0.022044L118.299 0.2315L123.447 4.83947H123.006L128.077 0.2315L128.297 0.0330702L128.518 0.2315L133.589 4.85049H133.159L138.23 0.242522L138.439 0.0440922L138.649 0.242522L143.72 4.86151H143.29L148.372 0.253548L148.581 0.0661404L148.791 0.253548L153.862 4.86151H153.454L158.514 0.253548L158.712 0.0771666L158.922 0.253548L163.992 4.87254H163.596L168.667 0.26457L168.865 0.0881886L169.063 0.26457L174.134 4.88356H173.749L178.82 0.275596L179.007 0.0992147L179.194 0.275596L184.265 4.88356H183.891L188.984 0.286618L189.16 0.132285L189.325 0.286618L194.385 4.90561H193.999L199.081 0.308666L199.236 0.165355L199.39 0.308666L204.461 4.92765H204.163L209.245 0.330714L209.389 0.198425L209.521 0.330714L214.581 4.9497H214.316L219.409 0.341736L219.531 0.242522L219.641 0.341736L224.712 4.97175H224.491L229.562 0.363785L229.662 0.275596L229.761 0.363785L234.832 4.9938H234.644L239.726 0.385833L239.814 0.308666L239.892 0.385833L244.963 5.00482H244.819L249.89 0.407881H249.956H250.012L255.083 5.02687H254.972L260.054 0.429929L265.125 5.04892H265.048L270.119 0.451977C270.119 0.451977 275.311 5.11506 275.157 5.07097L280.239 0.462999C280.239 0.462999 285.288 5.09301 285.31 5.09301H285.497ZM285.497 5.09301L280.426 0.485048C280.503 0.485048 275.355 5.11506 275.377 5.11506C275.399 5.11506 270.284 0.51812 270.251 0.507096H270.306L265.258 5.12608L260.176 0.529144H260.142L255.083 5.14813L255.027 5.20325L254.972 5.14813L249.89 0.551192H250.012L244.963 5.17018L244.885 5.23632L244.819 5.17018L239.726 0.573236H239.892L234.843 5.24735H234.788L234.688 5.17018L229.606 0.562214H229.805L224.723 5.24735L224.613 5.34656L224.502 5.24735L219.42 0.639381H219.652L214.592 5.24735L214.46 5.35758L214.327 5.24735L209.256 0.639381H209.532L204.472 5.24735L204.329 5.37963L204.174 5.24735L199.092 0.650407H199.401L194.341 5.24735L194.176 5.40168L193.999 5.24735L188.928 0.650407H189.27L184.221 5.24735L184.034 5.41271L183.846 5.24735L178.775 0.639381H179.15L174.09 5.25837L173.892 5.43475L173.704 5.25837L168.645 0.694499H169.041L163.97 5.30247L163.772 5.48987L163.574 5.30247L158.492 0.694499H158.899L153.84 5.31349L153.63 5.5009L153.432 5.31349L148.35 0.705525H148.758L143.687 5.32451L143.477 5.51192L143.268 5.32451L138.197 0.716547H138.616L133.556 5.32451L133.346 5.52294L133.126 5.32451L128.044 0.716547H128.485L123.447 5.33554L123.226 5.53397L123.006 5.33554L117.935 0.727573H118.387L113.316 5.34656L113.084 5.54499L112.864 5.34656L107.782 0.738595H108.245L103.174 5.34656L102.942 5.56704L102.7 5.34656L97.64 0.738595H98.092L93.021 5.35758C93.2856 3.85834 93.2635 351.594 93.3297 351.22L93.1533 350.812L98.2242 355.42H97.4857L102.557 350.823L102.92 350.492L103.284 350.823L108.355 355.431H107.628L112.71 350.834L113.062 350.503L113.426 350.834L118.497 355.431H117.792L122.852 350.834L123.204 350.514L123.557 350.834L128.628 355.442H127.856L132.927 350.845L133.28 350.525L133.622 350.845L138.682 355.442H137.998L143.08 350.845L143.411 350.547L143.753 350.845L148.824 355.453H148.151L153.233 350.856L153.564 350.558L153.895 350.856L158.955 355.464H158.304L163.375 350.867L163.706 350.569L164.026 350.867L169.097 355.464H168.457L173.528 350.867L173.859 350.58L174.179 350.867L179.238 355.475H178.599L183.681 350.878L183.99 350.591L184.309 350.878L189.38 355.486H188.752L193.823 350.889L194.132 350.602L194.44 350.889L199.511 355.486H198.905L203.976 350.889L204.285 350.613L204.582 350.889L209.653 355.497H209.058L214.118 350.9L214.416 350.624L214.713 350.9L219.784 355.497H219.2L224.282 350.9L224.569 350.646L224.855 350.9L229.915 355.508H229.342L234.424 350.911L234.71 350.657L234.986 350.911L240.057 355.519H239.495L244.577 350.922L244.852 350.668L245.128 350.922L250.188 355.519H249.648L254.719 350.922L254.994 350.679L255.259 350.922L260.33 355.53H259.801L264.883 350.933L265.147 350.69L265.412 350.933L270.472 355.53H269.943L275.025 350.944L275.278 350.702L275.543 350.944L280.614 355.541H280.096L285.167 350.944C284.935 352.598 285.453 4.64104 285.42 5.09301H285.497Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M104.38 75.834H102.175V76.3852H104.38V75.834Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M269.482 76.3841H265.138V75.7998H269.482V76.3841ZM260.795 76.3841H256.452V75.7998H260.795V76.3841ZM252.108 76.3841H247.765V75.7998H252.108V76.3841ZM243.421 76.3841H239.067V75.7998H243.421V76.3841ZM234.724 76.3841H230.38V75.7998H234.724V76.3841ZM226.037 76.3841H221.694V75.7998H226.037V76.3841ZM217.35 76.3841H213.007V75.7998H217.35V76.3841ZM208.652 76.3841H204.309V75.7998H208.652V76.3841ZM199.966 76.3841H195.622V75.7998H199.966V76.3841ZM191.279 76.3841H186.935V75.7998H191.279V76.3841ZM182.592 76.3841H178.249V75.7998H182.592V76.3841ZM173.894 76.3841H169.551V75.7998H173.894V76.3841ZM165.207 76.3841H160.864V75.7998H165.207V76.3841ZM156.521 76.3841H152.177V75.7998H156.521V76.3841ZM147.834 76.3841H143.479V75.7998H147.834V76.3841ZM139.136 76.3841H134.793V75.7998H139.136V76.3841ZM130.449 76.3841H126.106V75.7998H130.449V76.3841ZM121.762 76.3841H117.419V75.7998H121.762V76.3841ZM113.065 76.3841H108.721V75.7998H113.065V76.3841Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M276.042 75.834H273.837V76.3852H276.042V75.834Z\" fill=\"#DCDFE0\" />\r\n      <path d=\"M104.38 195.441H102.175V195.993H104.38V195.441Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M269.482 195.96H265.138V195.409H269.482V195.96ZM260.795 195.96H256.452V195.409H260.795V195.96ZM252.108 195.96H247.765V195.409H252.108V195.96ZM243.421 195.96H239.067V195.409H243.421V195.96ZM234.724 195.96H230.38V195.409H234.724V195.96ZM226.037 195.96H221.694V195.409H226.037V195.96ZM217.35 195.96H213.007V195.409H217.35V195.96ZM208.652 195.96H204.309V195.409H208.652V195.96ZM199.966 195.96H195.622V195.409H199.966V195.96ZM191.279 195.96H186.935V195.409H191.279V195.96ZM182.592 195.96H178.249V195.409H182.592V195.96ZM173.894 195.96H169.551V195.409H173.894V195.96ZM165.207 195.96H160.864V195.409H165.207V195.96ZM156.521 195.96H152.177V195.409H156.521V195.96ZM147.834 195.96H143.479V195.409H147.834V195.96ZM139.136 195.96H134.793V195.409H139.136V195.96ZM130.449 195.96H126.106V195.409H130.449V195.96ZM121.762 195.96H117.419V195.409H121.762V195.96ZM113.065 195.96H108.721V195.409H113.065V195.96Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M276.042 195.441H273.837V195.993H276.042V195.441Z\" fill=\"#DCDFE0\" />\r\n      <path d=\"M104.38 245.808H102.175V246.359H104.38V245.808Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M269.482 246.359H265.138V245.808H269.482V246.359ZM260.795 246.359H256.452V245.808H260.795V246.359ZM252.108 246.359H247.765V245.808H252.108V246.359ZM243.421 246.359H239.067V245.808H243.421V246.359ZM234.724 246.359H230.38V245.808H234.724V246.359ZM226.037 246.359H221.694V245.808H226.037V246.359ZM217.35 246.359H213.007V245.808H217.35V246.359ZM208.652 246.359H204.309V245.808H208.652V246.359ZM199.966 246.359H195.622V245.808H199.966V246.359ZM191.279 246.359H186.935V245.808H191.279V246.359ZM182.592 246.359H178.249V245.808H182.592V246.359ZM173.894 246.359H169.551V245.808H173.894V246.359ZM165.207 246.359H160.864V245.808H165.207V246.359ZM156.521 246.359H152.177V245.808H156.521V246.359ZM147.834 246.359H143.479V245.808H147.834V246.359ZM139.136 246.359H134.793V245.808H139.136V246.359ZM130.449 246.359H126.106V245.808H130.449V246.359ZM121.762 246.359H117.419V245.808H121.762V246.359ZM113.065 246.359H108.721V245.808H113.065V246.359Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M276.042 245.808H273.837V246.359H276.042V245.808Z\" fill=\"#DCDFE0\" />\r\n      <path d=\"M104.38 311.853H102.175V312.404H104.38V311.853Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M269.482 312.393H265.138V311.842H269.482V312.393ZM260.795 312.393H256.452V311.842H260.795V312.393ZM252.108 312.393H247.765V311.842H252.108V312.393ZM243.421 312.393H239.067V311.842H243.421V312.393ZM234.724 312.393H230.38V311.842H234.724V312.393ZM226.037 312.393H221.694V311.842H226.037V312.393ZM217.35 312.393H213.007V311.842H217.35V312.393ZM208.652 312.393H204.309V311.842H208.652V312.393ZM199.966 312.393H195.622V311.842H199.966V312.393ZM191.279 312.393H186.935V311.842H191.279V312.393ZM182.592 312.393H178.249V311.842H182.592V312.393ZM173.894 312.393H169.551V311.842H173.894V312.393ZM165.207 312.393H160.864V311.842H165.207V312.393ZM156.521 312.393H152.177V311.842H156.521V312.393ZM147.834 312.393H143.479V311.842H147.834V312.393ZM139.136 312.393H134.793V311.842H139.136V312.393ZM130.449 312.393H126.106V311.842H130.449V312.393ZM121.762 312.393H117.419V311.842H121.762V312.393ZM113.065 312.393H108.721V311.842H113.065V312.393Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M276.042 311.853H273.837V312.404H276.042V311.853Z\" fill=\"#DCDFE0\" />\r\n      <path d=\"M104.38 52.9458H102.175V53.497H104.38V52.9458Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M269.482 53.497H265.138V52.9458H269.482V53.497ZM260.795 53.497H256.452V52.9458H260.795V53.497ZM252.108 53.497H247.765V52.9458H252.108V53.497ZM243.421 53.497H239.067V52.9458H243.421V53.497ZM234.724 53.497H230.38V52.9458H234.724V53.497ZM226.037 53.497H221.694V52.9458H226.037V53.497ZM217.35 53.497H213.007V52.9458H217.35V53.497ZM208.652 53.497H204.309V52.9458H208.652V53.497ZM199.966 53.497H195.622V52.9458H199.966V53.497ZM191.279 53.497H186.935V52.9458H191.279V53.497ZM182.592 53.497H178.249V52.9458H182.592V53.497ZM173.894 53.497H169.551V52.9458H173.894V53.497ZM165.207 53.497H160.864V52.9458H165.207V53.497ZM156.521 53.497H152.177V52.9458H156.521V53.497ZM147.834 53.497H143.479V52.9458H147.834V53.497ZM139.136 53.497H134.793V52.9458H139.136V53.497ZM130.449 53.497H126.106V52.9458H130.449V53.497ZM121.762 53.497H117.419V52.9458H121.762V53.497ZM113.065 53.497H108.721V52.9458H113.065V53.497Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M276.042 52.9458H273.837V53.497H276.042V52.9458Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M162.511 66.7945C179.675 66.2544 198.57 66.2433 215.734 66.7945C198.57 67.3457 179.675 67.3347 162.511 66.7945Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M152.371 62.1192C175.896 61.5791 202.309 61.568 225.834 62.1192C202.309 62.6594 175.896 62.6484 152.371 62.1192Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M166.21 101.132H165.659V101.684H166.21V101.132Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M228.463 101.683H227.361V101.154H228.463V101.683ZM225.156 101.683H224.054V101.154H225.156V101.683ZM221.849 101.683H220.746V101.154H221.849V101.683ZM218.542 101.683H217.439V101.154H218.542V101.683ZM215.235 101.683H214.132V101.154H215.235V101.683ZM211.927 101.683H210.825V101.154H211.927V101.683ZM208.62 101.683H207.518V101.154H208.62V101.683ZM205.313 101.683H204.211V101.154H205.313V101.683ZM202.006 101.683H200.904V101.154H202.006V101.683ZM198.699 101.683H197.596V101.154H198.699V101.683ZM195.392 101.683H194.289V101.154H195.392V101.683ZM192.084 101.683H190.982V101.154H192.084V101.683ZM188.777 101.683H187.675V101.154H188.777V101.683ZM185.47 101.683H184.368V101.154H185.47V101.683ZM182.163 101.683H181.061V101.154H182.163V101.683ZM178.856 101.683H177.753V101.154H178.856V101.683ZM175.549 101.683H174.446V101.154H175.549V101.683ZM172.242 101.683H171.139V101.154H172.242V101.683ZM168.934 101.683H167.832V101.154H168.934V101.683Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M231.197 101.132H230.646V101.684H231.197V101.132Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M110.922 101.408C126.995 100.846 143.884 100.857 159.967 101.408C143.884 101.948 126.995 101.959 110.922 101.408Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M155.764 116.292H155.213V116.843H155.764V116.292Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M228.439 116.843H227.337V116.292H228.439V116.843ZM225.132 116.843H224.03V116.292H225.132V116.843ZM221.825 116.843H220.723V116.292H221.825V116.843ZM218.518 116.843H217.415V116.292H218.518V116.843ZM215.211 116.843H214.108V116.292H215.211V116.843ZM211.904 116.843H210.801V116.292H211.904V116.843ZM208.596 116.843H207.494V116.292H208.596V116.843ZM205.289 116.843H204.187V116.292H205.289V116.843ZM201.982 116.843H200.88V116.292H201.982V116.843ZM198.675 116.843H197.573V116.292H198.675V116.843ZM195.368 116.843H194.265V116.292H195.368V116.843ZM192.061 116.843H190.958V116.292H192.061V116.843ZM188.753 116.843H187.651V116.292H188.753V116.843ZM185.446 116.843H184.344V116.292H185.446V116.843ZM182.139 116.843H181.037V116.292H182.139V116.843ZM178.832 116.843H177.73V116.292H178.832V116.843ZM175.525 116.843H174.422V116.292H175.525V116.843ZM172.218 116.843H171.115V116.292H172.218V116.843ZM168.911 116.843H167.808V116.292H168.911V116.843ZM165.603 116.843H164.501V116.292H165.603V116.843ZM162.296 116.843H161.194V116.292H162.296V116.843ZM158.989 116.843H157.887V116.292H158.989V116.843Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M231.197 116.292H230.646V116.843H231.197V116.292Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M110.922 116.588C123.784 116.037 136.645 116.037 149.506 116.588C136.637 117.154 123.776 117.154 110.922 116.588Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M181.67 131.461H181.119V132.012H181.67V131.461Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M228.418 132.022H227.315V131.471H228.418V132.022ZM225.11 132.022H224.008V131.471H225.11V132.022ZM221.803 132.022H220.701V131.471H221.803V132.022ZM218.496 132.022H217.394V131.471H218.496V132.022ZM215.189 132.022H214.087V131.471H215.189V132.022ZM211.882 132.022H210.779V131.471H211.882V132.022ZM208.575 132.022H207.472V131.471H208.575V132.022ZM205.268 132.022H204.165V131.471H205.268V132.022ZM201.96 132.022H200.858V131.471H201.96V132.022ZM198.653 132.022H197.551V131.471H198.653V132.022ZM195.346 132.022H194.244V131.471H195.346V132.022ZM192.039 132.022H190.937V131.471H192.039V132.022ZM188.732 132.022H187.629V131.471H188.732V132.022ZM185.425 132.022H184.322V131.471H185.425V132.022Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M231.197 131.461H230.646V132.012H231.197V131.461Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M110.922 131.735C131.735 131.195 154.621 131.184 175.434 131.735C154.632 132.276 131.735 132.276 110.922 131.735Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M163.062 146.618H162.511V147.169H163.062V146.618Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M228.469 147.169H227.366V146.618H228.469V147.169ZM225.161 147.169H224.059V146.618H225.161V147.169ZM221.854 147.169H220.752V146.618H221.854V147.169ZM218.547 147.169H217.445V146.618H218.547V147.169ZM215.24 147.169H214.138V146.618H215.24V147.169ZM211.933 147.169H210.83V146.618H211.933V147.169ZM208.626 147.169H207.523V146.618H208.626V147.169ZM205.318 147.169H204.216V146.618H205.318V147.169ZM202.011 147.169H200.909V146.618H202.011V147.169ZM198.704 147.169H197.602V146.618H198.704V147.169ZM195.397 147.169H194.295V146.618H195.397V147.169ZM192.09 147.169H190.987V146.618H192.09V147.169ZM188.783 147.169H187.68V146.618H188.783V147.169ZM185.476 147.169H184.373V146.618H185.476V147.169ZM182.168 147.169H181.066V146.618H182.168V147.169ZM178.861 147.169H177.759V146.618H178.861V147.169ZM175.554 147.169H174.452V146.618H175.554V147.169ZM172.247 147.169H171.145V146.618H172.247V147.169ZM168.94 147.169H167.837V146.618H168.94V147.169ZM165.633 147.169H164.53V146.618H165.633V147.169Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M231.197 146.618H230.646V147.169H231.197V146.618Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M110.922 146.892C126.216 146.341 141.51 146.341 156.804 146.892C141.51 147.45 126.216 147.45 110.922 146.892Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M173.285 161.786H172.734V162.337H173.285V161.786Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M228.479 162.337H227.377V161.786H228.479V162.337ZM225.227 162.337H224.125V161.786H225.227V162.337ZM221.986 162.337H220.884V161.786H221.986V162.337ZM218.734 162.337H217.632V161.786H218.734V162.337ZM215.493 162.337H214.391V161.786H215.493V162.337ZM212.241 162.337H211.139V161.786H212.241V162.337ZM209 162.337H207.898V161.786H209V162.337ZM205.748 162.337H204.645V161.786H205.748V162.337ZM202.507 162.337H201.404V161.786H202.507V162.337ZM199.2 162.337H198.097V161.786H199.2V162.337ZM195.959 162.337H194.856V161.786H195.959V162.337ZM192.707 162.337H191.604V161.786H192.707V162.337ZM189.455 162.337H188.352V161.786H189.455V162.337ZM186.214 162.337H185.111V161.786H186.214V162.337ZM182.962 162.337H181.859V161.786H182.962V162.337ZM179.721 162.337H178.618V161.786H179.721V162.337ZM176.413 162.337H175.311V161.786H176.413V162.337Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M231.197 161.786H230.646V162.337H231.197V161.786Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M110.922 162.063C129.024 161.522 148.944 161.511 167.045 162.063C148.944 162.614 129.024 162.603 110.922 162.063Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M144.58 176.955H144.029V177.506H144.58V176.955Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M228.387 177.506H227.285V176.955H228.387V177.506ZM225.08 177.506H223.977V176.955H225.08V177.506ZM221.773 177.506H220.67V176.955H221.773V177.506ZM218.466 177.506H217.363V176.955H218.466V177.506ZM215.158 177.506H214.056V176.955H215.158V177.506ZM211.796 177.506H210.694V176.955H211.796V177.506ZM208.489 177.506H207.387V176.955H208.489V177.506ZM205.182 177.506H204.079V176.955H205.182V177.506ZM201.875 177.506H200.772V176.955H201.875V177.506ZM198.567 177.506H197.465V176.955H198.567V177.506ZM195.26 177.506H194.158V176.955H195.26V177.506ZM191.953 177.506H190.851V176.955H191.953V177.506ZM188.591 177.506H187.489V176.955H188.591V177.506ZM185.284 177.506H184.181V176.955H185.284V177.506ZM181.977 177.506H180.874V176.955H181.977V177.506ZM178.669 177.506H177.567V176.955H178.669V177.506ZM175.362 177.506H174.26V176.955H175.362V177.506ZM172.055 177.506H170.953V176.955H172.055V177.506ZM168.693 177.506H167.59V176.955H168.693V177.506ZM165.386 177.506H164.283V176.955H165.386V177.506ZM162.079 177.506H160.976V176.955H162.079V177.506ZM158.771 177.506H157.669V176.955H158.771V177.506ZM155.464 177.506H154.362V176.955H155.464V177.506ZM152.157 177.506H151.055V176.955H152.157V177.506ZM148.85 177.506H147.748V176.955H148.85V177.506Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M231.197 176.955H230.646V177.506H231.197V176.955Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M110.922 177.22C120.052 176.652 129.209 176.652 138.339 177.22C129.209 177.782 120.052 177.782 110.922 177.22Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M160.528 214.381H159.977V214.933H160.528V214.381Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M228.474 214.933H227.371V214.381H228.474V214.933ZM225.244 214.933H224.141V214.381H225.244V214.933ZM222.003 214.933H220.9V214.381H222.003V214.933ZM218.773 214.933H217.67V214.381H218.773V214.933ZM215.532 214.933H214.429V214.381H215.532V214.933ZM212.291 214.933H211.188V214.381H212.291V214.933ZM209.061 214.933H207.958V214.381H209.061V214.933ZM205.82 214.933H204.717V214.381H205.82V214.933ZM202.59 214.933H201.487V214.381H202.59V214.933ZM199.349 214.933H198.246V214.381H199.349V214.933ZM196.108 214.933H195.005V214.381H196.108V214.933ZM192.878 214.933H191.775V214.381H192.878V214.933ZM189.637 214.933H188.534V214.381H189.637V214.933ZM186.407 214.933H185.304V214.381H186.407V214.933ZM183.166 214.933H182.063V214.381H183.166V214.933ZM179.936 214.933H178.833V214.381H179.936V214.933ZM176.695 214.933H175.592V214.381H176.695V214.933ZM173.454 214.933H172.351V214.381H173.454V214.933ZM170.224 214.933H169.121V214.381H170.224V214.933ZM166.983 214.933H165.88V214.381H166.983V214.933ZM163.753 214.933H162.65V214.381H163.753V214.933Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M231.197 214.381H230.646V214.933H231.197V214.381Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M111.76 213.112C111.852 213.006 111.982 212.939 112.122 212.927C112.261 212.915 112.401 212.957 112.51 213.046C113.064 213.51 113.751 213.784 114.472 213.829C114.927 213.839 115.373 213.708 115.751 213.454C115.879 213.376 115.987 213.268 116.063 213.14C116.14 213.011 116.184 212.865 116.192 212.715C116.193 212.598 116.158 212.482 116.092 212.385C116.015 212.262 115.909 212.16 115.784 212.087C115.352 211.838 114.877 211.674 114.384 211.602C113.929 211.521 113.485 211.388 113.061 211.205C112.674 211.033 112.345 210.754 112.113 210.4C111.957 210.149 111.877 209.858 111.881 209.563C111.891 209.266 111.969 208.976 112.111 208.716C112.253 208.456 112.453 208.232 112.697 208.063C113.219 207.705 113.839 207.516 114.472 207.523C115.274 207.569 116.043 207.857 116.677 208.35C116.773 208.435 116.834 208.552 116.851 208.679C116.867 208.806 116.836 208.934 116.765 209.041C116.694 209.147 116.586 209.224 116.463 209.257C116.339 209.29 116.207 209.277 116.092 209.221C115.623 208.844 115.05 208.617 114.45 208.57C114.055 208.572 113.67 208.695 113.348 208.923C113.235 208.99 113.14 209.083 113.071 209.194C113.002 209.306 112.961 209.432 112.951 209.563C112.944 209.664 112.971 209.765 113.028 209.849C113.1 209.956 113.194 210.046 113.303 210.114C113.695 210.349 114.13 210.502 114.582 210.566C115.068 210.653 115.542 210.797 115.993 210.996C116.407 211.178 116.762 211.472 117.019 211.844C117.178 212.107 117.262 212.408 117.261 212.715C117.254 213.032 117.17 213.341 117.016 213.618C116.862 213.894 116.644 214.13 116.379 214.303C115.831 214.696 115.169 214.901 114.494 214.887C113.531 214.841 112.609 214.481 111.87 213.862C111.76 213.775 111.687 213.648 111.666 213.509C111.646 213.37 111.679 213.228 111.76 213.112Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M120.737 214.898C120.174 214.895 119.635 214.67 119.236 214.272C118.838 213.873 118.613 213.334 118.61 212.771V210.29C118.613 210.148 118.671 210.012 118.771 209.911C118.872 209.811 119.008 209.753 119.15 209.75C119.221 209.75 119.291 209.764 119.357 209.791C119.422 209.818 119.482 209.858 119.532 209.908C119.582 209.958 119.622 210.018 119.649 210.083C119.676 210.149 119.69 210.219 119.69 210.29V212.737C119.688 212.88 119.716 213.022 119.772 213.153C119.827 213.285 119.909 213.404 120.013 213.502C120.116 213.6 120.239 213.676 120.373 213.725C120.507 213.773 120.65 213.794 120.793 213.785C121.076 213.785 121.348 213.677 121.553 213.482C121.758 213.287 121.881 213.02 121.895 212.737V210.29C121.894 210.22 121.906 210.15 121.932 210.084C121.958 210.019 121.997 209.959 122.046 209.909C122.095 209.859 122.154 209.819 122.219 209.791C122.284 209.764 122.354 209.75 122.424 209.75C122.568 209.753 122.705 209.81 122.807 209.911C122.91 210.011 122.97 210.147 122.975 210.29V212.737C122.964 213.32 122.722 213.875 122.302 214.28C121.883 214.685 121.32 214.907 120.737 214.898Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M125 212.352V208.296C125.026 208.168 125.095 208.054 125.195 207.971C125.296 207.889 125.422 207.844 125.552 207.844C125.681 207.844 125.807 207.889 125.908 207.971C126.008 208.054 126.077 208.168 126.103 208.296V210.225C126.502 209.942 126.98 209.792 127.47 209.795C127.872 209.788 128.27 209.875 128.631 210.051C128.993 210.226 129.309 210.484 129.552 210.804C129.795 211.124 129.96 211.497 130.032 211.893C130.104 212.288 130.082 212.695 129.967 213.081C129.853 213.466 129.649 213.819 129.373 214.111C129.096 214.403 128.755 214.625 128.376 214.76C127.998 214.896 127.592 214.94 127.194 214.889C126.795 214.839 126.413 214.695 126.081 214.469C126.066 214.615 125.994 214.75 125.88 214.843C125.767 214.936 125.621 214.98 125.474 214.965C125.328 214.95 125.194 214.878 125.101 214.765C125.008 214.651 124.964 214.505 124.978 214.359L125 212.352ZM126.103 212.352C126.102 212.731 126.248 213.094 126.511 213.367C126.633 213.499 126.782 213.604 126.947 213.676C127.112 213.748 127.29 213.785 127.47 213.786C127.651 213.784 127.831 213.746 127.997 213.674C128.164 213.603 128.314 213.498 128.44 213.367C128.703 213.09 128.849 212.723 128.849 212.341C128.849 211.96 128.703 211.593 128.44 211.316C128.314 211.185 128.164 211.08 127.997 211.008C127.831 210.936 127.651 210.899 127.47 210.897C127.29 210.898 127.112 210.935 126.947 211.007C126.782 211.079 126.633 211.184 126.511 211.316C126.248 211.596 126.105 211.968 126.114 212.352H126.103Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M134.043 210.347C134.04 210.497 133.979 210.64 133.871 210.746C133.764 210.851 133.62 210.91 133.47 210.909H133.205V213.765C133.357 213.765 133.503 213.825 133.611 213.933C133.718 214.04 133.779 214.186 133.779 214.338C133.779 214.413 133.764 214.487 133.735 214.556C133.706 214.625 133.664 214.687 133.61 214.739C133.557 214.792 133.493 214.833 133.424 214.861C133.354 214.888 133.28 214.902 133.205 214.9C132.913 214.9 132.633 214.784 132.426 214.577C132.219 214.37 132.103 214.09 132.103 213.798V210.943H131.805C131.656 210.943 131.513 210.883 131.408 210.778C131.302 210.672 131.243 210.529 131.243 210.38C131.243 210.231 131.302 210.088 131.408 209.983C131.513 209.877 131.656 209.818 131.805 209.818H132.103V208.33C132.103 208.255 132.118 208.181 132.147 208.112C132.176 208.043 132.218 207.981 132.272 207.928C132.325 207.876 132.388 207.835 132.458 207.807C132.527 207.78 132.602 207.766 132.676 207.768C132.751 207.766 132.824 207.78 132.893 207.807C132.962 207.835 133.025 207.876 133.077 207.929C133.13 207.982 133.171 208.044 133.199 208.113C133.226 208.182 133.24 208.256 133.239 208.33V209.818H133.503C133.643 209.823 133.776 209.88 133.875 209.978C133.975 210.076 134.035 210.208 134.043 210.347Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M136.155 214.149C135.693 213.665 135.439 213.02 135.449 212.352C135.452 211.686 135.703 211.045 136.155 210.555C136.38 210.313 136.653 210.119 136.957 209.987C137.26 209.854 137.587 209.785 137.918 209.783C138.242 209.783 138.561 209.852 138.856 209.985C139.15 210.118 139.413 210.313 139.627 210.555C140.091 211.038 140.348 211.682 140.344 212.352C140.352 212.684 140.293 213.015 140.169 213.324C140.046 213.633 139.862 213.913 139.627 214.149C139.417 214.397 139.156 214.596 138.86 214.731C138.565 214.866 138.243 214.935 137.918 214.931C137.586 214.931 137.258 214.86 136.954 214.726C136.65 214.591 136.378 214.394 136.155 214.149ZM136.562 212.352C136.545 212.753 136.679 213.146 136.937 213.454C137.067 213.581 137.22 213.68 137.389 213.746C137.557 213.813 137.737 213.844 137.918 213.84C138.092 213.841 138.265 213.807 138.426 213.741C138.586 213.675 138.733 213.577 138.855 213.454C139.112 213.155 139.252 212.773 139.252 212.379C139.252 211.985 139.112 211.604 138.855 211.304C138.599 211.069 138.267 210.932 137.918 210.919C137.556 210.925 137.207 211.062 136.937 211.304C136.691 211.597 136.558 211.969 136.562 212.352Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M144.185 210.347C144.182 210.497 144.121 210.64 144.013 210.746C143.906 210.851 143.762 210.91 143.612 210.909H143.358V213.765C143.433 213.765 143.507 213.78 143.576 213.808C143.645 213.837 143.707 213.88 143.76 213.933C143.812 213.987 143.853 214.05 143.881 214.119C143.909 214.189 143.922 214.263 143.921 214.338C143.922 214.412 143.909 214.486 143.881 214.555C143.853 214.624 143.812 214.686 143.759 214.739C143.707 214.791 143.644 214.833 143.575 214.86C143.506 214.888 143.433 214.902 143.358 214.9C143.066 214.9 142.786 214.784 142.579 214.577C142.372 214.37 142.256 214.09 142.256 213.798V210.943H141.958C141.809 210.943 141.666 210.883 141.561 210.778C141.455 210.672 141.396 210.529 141.396 210.38C141.395 210.306 141.408 210.232 141.436 210.163C141.464 210.095 141.505 210.032 141.557 209.979C141.61 209.927 141.673 209.886 141.741 209.858C141.81 209.83 141.884 209.817 141.958 209.818H142.179V208.33C142.179 208.255 142.194 208.181 142.223 208.112C142.252 208.043 142.294 207.981 142.347 207.928C142.401 207.876 142.464 207.835 142.533 207.807C142.603 207.78 142.677 207.766 142.752 207.768C142.826 207.766 142.9 207.78 142.969 207.807C143.038 207.835 143.1 207.876 143.153 207.929C143.205 207.982 143.247 208.044 143.275 208.113C143.302 208.182 143.316 208.256 143.314 208.33V209.818H143.568C143.643 209.811 143.72 209.818 143.792 209.841C143.865 209.864 143.932 209.901 143.99 209.951C144.047 210 144.094 210.061 144.128 210.129C144.162 210.197 144.181 210.271 144.185 210.347Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M150.015 212.352V214.358C150.015 214.429 150.001 214.499 149.974 214.565C149.947 214.63 149.907 214.69 149.857 214.74C149.806 214.79 149.747 214.83 149.681 214.857C149.616 214.884 149.546 214.898 149.475 214.898C149.349 214.894 149.227 214.849 149.13 214.769C149.032 214.69 148.963 214.58 148.934 214.457C148.54 214.743 148.066 214.898 147.579 214.898C147.252 214.899 146.929 214.833 146.63 214.704C146.33 214.575 146.06 214.386 145.837 214.149C145.391 213.654 145.144 213.012 145.144 212.346C145.144 211.68 145.391 211.038 145.837 210.544C146.06 210.305 146.329 210.114 146.629 209.983C146.928 209.852 147.252 209.784 147.579 209.783C148.066 209.784 148.54 209.938 148.934 210.224C148.962 210.101 149.03 209.99 149.128 209.91C149.226 209.83 149.348 209.785 149.475 209.783C149.546 209.783 149.618 209.798 149.684 209.825C149.75 209.853 149.81 209.894 149.861 209.945C149.911 209.997 149.95 210.057 149.977 210.124C150.003 210.191 150.016 210.263 150.015 210.334V212.352ZM148.912 212.352C148.925 212.151 148.896 211.949 148.828 211.76C148.76 211.57 148.653 211.396 148.516 211.249C148.395 211.117 148.247 211.011 148.083 210.938C147.919 210.866 147.741 210.828 147.562 210.828C147.382 210.828 147.205 210.866 147.041 210.938C146.877 211.011 146.729 211.117 146.608 211.249C146.36 211.544 146.223 211.917 146.223 212.302C146.223 212.688 146.36 213.061 146.608 213.355C146.732 213.483 146.88 213.585 147.044 213.655C147.208 213.725 147.384 213.761 147.562 213.761C147.74 213.761 147.916 213.725 148.08 213.655C148.244 213.585 148.392 213.483 148.516 213.355C148.773 213.084 148.918 212.726 148.923 212.352H148.912Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M152.808 207.733C152.958 207.733 153.102 207.792 153.209 207.897C153.317 208.003 153.378 208.146 153.381 208.296V214.337C153.378 214.487 153.317 214.63 153.209 214.735C153.102 214.84 152.958 214.899 152.808 214.899C152.659 214.899 152.516 214.84 152.41 214.734C152.305 214.629 152.246 214.486 152.246 214.337V208.296C152.246 208.147 152.305 208.004 152.41 207.898C152.516 207.793 152.659 207.733 152.808 207.733Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M150.081 263.989H149.53V264.54H150.081V263.989Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M228.452 264.54H227.349V263.989H228.452V264.54ZM225.144 264.54H224.042V263.989H225.144V264.54ZM221.837 264.54H220.735V263.989H221.837V264.54ZM218.53 264.54H217.428V263.989H218.53V264.54ZM215.223 264.54H214.121V263.989H215.223V264.54ZM211.916 264.54H210.813V263.989H211.916V264.54ZM208.609 264.54H207.506V263.989H208.609V264.54ZM205.301 264.54H204.199V263.989H205.301V264.54ZM201.994 264.54H200.892V263.989H201.994V264.54ZM198.687 264.54H197.585V263.989H198.687V264.54ZM195.38 264.54H194.278V263.989H195.38V264.54ZM192.073 264.54H190.971V263.989H192.073V264.54ZM188.766 264.54H187.663V263.989H188.766V264.54ZM185.459 264.54H184.356V263.989H185.459V264.54ZM182.151 264.54H181.049V263.989H182.151V264.54ZM178.844 264.54H177.742V263.989H178.844V264.54ZM175.537 264.54H174.435V263.989H175.537V264.54ZM172.23 264.54H171.128V263.989H172.23V264.54ZM168.923 264.54H167.82V263.989H168.923V264.54ZM165.616 264.54H164.513V263.989H165.616V264.54ZM162.309 264.54H161.206V263.989H162.309V264.54ZM159.001 264.54H157.899V263.989H159.001V264.54ZM155.694 264.54H154.592V263.989H155.694V264.54ZM152.387 264.54H151.285V263.989H152.387V264.54Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path d=\"M231.197 263.989H230.646V264.54H231.197V263.989Z\" fill=\"#DCDFE0\" />\r\n      <path\r\n        d=\"M238.098 256.691C238.157 256.689 238.215 256.699 238.269 256.721C238.323 256.743 238.372 256.775 238.414 256.816C238.455 256.858 238.487 256.907 238.509 256.961C238.531 257.015 238.541 257.073 238.539 257.132V257.363C239.106 257.423 239.649 257.615 240.127 257.925C240.219 257.969 240.296 258.038 240.351 258.123C240.406 258.209 240.435 258.309 240.435 258.41C240.436 258.485 240.421 258.559 240.392 258.628C240.363 258.697 240.32 258.76 240.267 258.812C240.214 258.864 240.15 258.905 240.081 258.933C240.011 258.961 239.937 258.974 239.862 258.973C239.754 258.968 239.648 258.937 239.554 258.884C239.232 258.676 238.878 258.524 238.506 258.432V260.395C240.061 260.792 240.711 261.409 240.711 262.511C240.711 263.614 239.829 264.385 238.506 264.507V265.124C238.508 265.182 238.497 265.24 238.476 265.294C238.454 265.349 238.422 265.398 238.381 265.439C238.339 265.48 238.29 265.513 238.236 265.534C238.182 265.556 238.124 265.566 238.065 265.565C237.947 265.565 237.834 265.519 237.75 265.436C237.665 265.354 237.616 265.242 237.613 265.124V264.485C236.859 264.405 236.137 264.131 235.519 263.691C235.435 263.638 235.365 263.565 235.317 263.478C235.269 263.392 235.243 263.294 235.243 263.195C235.242 263.12 235.255 263.047 235.283 262.978C235.311 262.909 235.352 262.846 235.405 262.794C235.457 262.741 235.52 262.7 235.589 262.672C235.657 262.645 235.731 262.631 235.806 262.633C235.928 262.635 236.046 262.674 236.147 262.743C236.588 263.089 237.106 263.324 237.658 263.426V261.409C236.169 261.023 235.453 260.461 235.453 259.303C235.465 259.034 235.531 258.77 235.646 258.526C235.761 258.282 235.923 258.063 236.123 257.882C236.322 257.7 236.556 257.56 236.81 257.47C237.064 257.379 237.333 257.339 237.602 257.352V257.132C237.604 257.069 237.618 257.008 237.644 256.951C237.67 256.895 237.707 256.844 237.754 256.803C237.801 256.761 237.855 256.73 237.914 256.711C237.974 256.691 238.036 256.685 238.098 256.691ZM237.691 260.185V258.366C237.04 258.432 236.709 258.785 236.709 259.237C236.709 259.689 236.908 259.899 237.691 260.185ZM238.506 261.607V263.47C239.157 263.404 239.521 263.073 239.521 262.577C239.521 262.081 239.289 261.85 238.506 261.607Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M117.103 258.475H115.483V263.987C115.483 264.136 115.423 264.279 115.318 264.385C115.212 264.49 115.069 264.55 114.92 264.55C114.846 264.551 114.771 264.538 114.702 264.51C114.632 264.482 114.569 264.441 114.516 264.389C114.462 264.336 114.42 264.274 114.391 264.205C114.362 264.136 114.347 264.062 114.347 263.987V258.475H112.738C112.663 258.475 112.589 258.461 112.52 258.432C112.451 258.403 112.389 258.36 112.336 258.307C112.284 258.253 112.243 258.19 112.215 258.121C112.187 258.051 112.174 257.977 112.175 257.902C112.174 257.828 112.187 257.754 112.215 257.685C112.243 257.616 112.284 257.554 112.337 257.501C112.389 257.449 112.452 257.407 112.521 257.38C112.59 257.352 112.663 257.338 112.738 257.34H117.147C117.296 257.34 117.439 257.399 117.545 257.505C117.65 257.61 117.709 257.753 117.709 257.902C117.71 257.98 117.694 258.058 117.663 258.129C117.632 258.201 117.587 258.266 117.53 258.32C117.473 258.373 117.406 258.415 117.333 258.442C117.259 258.468 117.181 258.48 117.103 258.475Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M124.435 258.233C125.098 258.93 125.469 259.855 125.469 260.818C125.469 261.78 125.098 262.706 124.435 263.403C124.126 263.748 123.749 264.024 123.328 264.214C122.906 264.403 122.45 264.503 121.987 264.505C121.517 264.504 121.052 264.405 120.621 264.215C120.19 264.026 119.804 263.749 119.485 263.403C118.833 262.7 118.471 261.777 118.471 260.818C118.471 259.859 118.833 258.936 119.485 258.233C119.802 257.885 120.188 257.607 120.619 257.417C121.05 257.227 121.516 257.129 121.987 257.13C122.45 257.133 122.906 257.232 123.328 257.422C123.749 257.612 124.126 257.888 124.435 258.233ZM124.302 260.812C124.302 260.151 124.054 259.514 123.608 259.026C123.401 258.792 123.146 258.604 122.861 258.475C122.576 258.347 122.267 258.28 121.954 258.28C121.641 258.28 121.332 258.347 121.047 258.475C120.762 258.604 120.507 258.792 120.301 259.026C119.849 259.511 119.601 260.15 119.606 260.812C119.597 261.475 119.846 262.115 120.301 262.598C120.507 262.833 120.762 263.021 121.047 263.149C121.332 263.278 121.641 263.345 121.954 263.345C122.267 263.345 122.576 263.278 122.861 263.149C123.146 263.021 123.401 262.833 123.608 262.598C124.058 262.113 124.306 261.474 124.302 260.812Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M131.321 258.475H129.69V263.987C129.691 264.062 129.678 264.135 129.65 264.204C129.622 264.273 129.581 264.336 129.528 264.388C129.476 264.441 129.413 264.482 129.344 264.51C129.275 264.538 129.202 264.551 129.127 264.55C128.978 264.55 128.835 264.49 128.73 264.385C128.624 264.279 128.565 264.136 128.565 263.987V258.475H126.945C126.87 258.475 126.796 258.461 126.727 258.432C126.658 258.403 126.595 258.36 126.543 258.307C126.491 258.253 126.45 258.19 126.422 258.121C126.394 258.051 126.381 257.977 126.382 257.902C126.381 257.828 126.394 257.754 126.422 257.685C126.45 257.616 126.491 257.554 126.544 257.501C126.596 257.449 126.659 257.407 126.728 257.38C126.797 257.352 126.87 257.338 126.945 257.34H131.354C131.503 257.34 131.646 257.399 131.752 257.505C131.857 257.61 131.916 257.753 131.916 257.902C131.916 257.979 131.901 258.056 131.871 258.127C131.841 258.198 131.796 258.262 131.741 258.316C131.685 258.369 131.619 258.411 131.547 258.438C131.475 258.466 131.398 258.478 131.321 258.475Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M136.256 262.819H133.764L133.257 264.142C133.217 264.25 133.144 264.342 133.05 264.407C132.955 264.472 132.843 264.507 132.728 264.506C132.662 264.517 132.595 264.517 132.53 264.506C132.388 264.452 132.274 264.343 132.212 264.205C132.15 264.067 132.145 263.909 132.199 263.767L134.47 257.693C134.514 257.587 134.589 257.497 134.686 257.434C134.782 257.371 134.895 257.338 135.01 257.34C135.126 257.335 135.24 257.366 135.337 257.43C135.434 257.493 135.509 257.585 135.55 257.693L137.821 263.723C137.871 263.867 137.864 264.024 137.8 264.162C137.736 264.3 137.621 264.407 137.479 264.462C137.414 264.474 137.346 264.474 137.281 264.462C137.168 264.462 137.057 264.427 136.964 264.362C136.872 264.297 136.801 264.205 136.763 264.098L136.256 262.819ZM135.837 261.717L134.999 259.512L134.172 261.717H135.837Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M139.21 263.943V257.902C139.21 257.753 139.269 257.61 139.374 257.505C139.48 257.399 139.623 257.34 139.772 257.34C139.847 257.338 139.921 257.352 139.99 257.38C140.06 257.407 140.123 257.448 140.177 257.501C140.23 257.553 140.272 257.616 140.301 257.684C140.33 257.753 140.345 257.827 140.345 257.902V263.414H143.123C143.243 263.448 143.348 263.521 143.423 263.62C143.498 263.72 143.539 263.841 143.539 263.965C143.539 264.09 143.498 264.211 143.423 264.31C143.348 264.41 143.243 264.482 143.123 264.516H139.816C139.738 264.523 139.659 264.512 139.585 264.486C139.51 264.46 139.443 264.419 139.385 264.365C139.328 264.311 139.283 264.245 139.253 264.173C139.223 264.1 139.208 264.022 139.21 263.943Z\"\r\n        fill=\"#DCDFE0\"\r\n      />\r\n      <path\r\n        d=\"M140.051 33.125C140 33.125 139.96 33.111 139.932 33.0829C139.904 33.0501 139.89 33.0103 139.89 32.9635V28.3785C139.89 28.327 139.904 28.2872 139.932 28.2591C139.96 28.2263 140 28.2099 140.051 28.2099H141.975C142.326 28.2099 142.612 28.2685 142.832 28.3855C143.056 28.4978 143.22 28.6523 143.323 28.8489C143.431 29.0455 143.485 29.2655 143.485 29.5089C143.485 29.7008 143.452 29.867 143.386 30.0075C143.326 30.1432 143.248 30.2555 143.155 30.3445C143.061 30.4287 142.97 30.4943 142.881 30.5411C143.063 30.63 143.225 30.7751 143.365 30.9764C143.51 31.1777 143.583 31.4211 143.583 31.7067C143.583 31.9641 143.524 32.2005 143.407 32.4158C143.29 32.6312 143.115 32.8044 142.881 32.9354C142.651 33.0618 142.366 33.125 142.024 33.125H140.051ZM140.578 32.5563H141.933C142.237 32.5563 142.471 32.4743 142.635 32.3105C142.799 32.1467 142.881 31.9454 142.881 31.7067C142.881 31.4586 142.799 31.2549 142.635 31.0958C142.471 30.932 142.237 30.85 141.933 30.85H140.578V32.5563ZM140.578 30.2883H141.87C142.169 30.2883 142.396 30.2204 142.551 30.0847C142.705 29.9443 142.783 29.7547 142.783 29.5159C142.783 29.2772 142.705 29.0947 142.551 28.9683C142.396 28.8419 142.169 28.7787 141.87 28.7787H140.578V30.2883ZM144.664 33.125C144.617 33.125 144.577 33.111 144.544 33.0829C144.516 33.0501 144.502 33.0103 144.502 32.9635V29.6353C144.502 29.5885 144.516 29.5511 144.544 29.523C144.577 29.4902 144.617 29.4738 144.664 29.4738H145.001C145.048 29.4738 145.085 29.4902 145.113 29.523C145.141 29.5511 145.155 29.5885 145.155 29.6353V32.9635C145.155 33.0103 145.141 33.0501 145.113 33.0829C145.085 33.111 145.048 33.125 145.001 33.125H144.664ZM144.608 28.7927C144.561 28.7927 144.521 28.7787 144.488 28.7506C144.46 28.7178 144.446 28.678 144.446 28.6312V28.2521C144.446 28.2053 144.46 28.1678 144.488 28.1397C144.521 28.107 144.561 28.0906 144.608 28.0906H145.05C145.097 28.0906 145.134 28.107 145.162 28.1397C145.195 28.1678 145.211 28.2053 145.211 28.2521V28.6312C145.211 28.678 145.195 28.7178 145.162 28.7506C145.134 28.7787 145.097 28.7927 145.05 28.7927H144.608ZM146.371 33.125C146.324 33.125 146.285 33.111 146.252 33.0829C146.224 33.0501 146.21 33.0103 146.21 32.9635V28.3012C146.21 28.2544 146.224 28.217 146.252 28.1889C146.285 28.1561 146.324 28.1397 146.371 28.1397H146.701C146.753 28.1397 146.793 28.1561 146.821 28.1889C146.849 28.217 146.863 28.2544 146.863 28.3012V32.9635C146.863 33.0103 146.849 33.0501 146.821 33.0829C146.793 33.111 146.753 33.125 146.701 33.125H146.371ZM148.079 33.125C148.032 33.125 147.992 33.111 147.959 33.0829C147.931 33.0501 147.917 33.0103 147.917 32.9635V28.3012C147.917 28.2544 147.931 28.217 147.959 28.1889C147.992 28.1561 148.032 28.1397 148.079 28.1397H148.409C148.46 28.1397 148.5 28.1561 148.528 28.1889C148.556 28.217 148.57 28.2544 148.57 28.3012V32.9635C148.57 33.0103 148.556 33.0501 148.528 33.0829C148.5 33.111 148.46 33.125 148.409 33.125H148.079ZM153.01 33.1952C152.602 33.1952 152.261 33.1344 151.985 33.0127C151.708 32.8863 151.495 32.7248 151.346 32.5282C151.201 32.3269 151.123 32.1139 151.114 31.8892C151.114 31.8518 151.128 31.819 151.156 31.7909C151.189 31.7581 151.226 31.7418 151.268 31.7418H151.626C151.683 31.7418 151.725 31.7558 151.753 31.7839C151.781 31.812 151.8 31.8447 151.809 31.8822C151.832 31.9945 151.889 32.1069 151.978 32.2192C152.071 32.3269 152.2 32.4182 152.364 32.4931C152.532 32.5633 152.748 32.5984 153.01 32.5984C153.412 32.5984 153.707 32.5282 153.894 32.3877C154.086 32.2426 154.182 32.0507 154.182 31.812C154.182 31.6481 154.131 31.5171 154.028 31.4188C153.93 31.3158 153.777 31.2245 153.571 31.1449C153.365 31.0654 153.099 30.9788 152.771 30.8851C152.429 30.7868 152.146 30.6792 151.921 30.5622C151.697 30.4451 151.528 30.3 151.416 30.1268C151.308 29.9536 151.254 29.7336 151.254 29.4668C151.254 29.214 151.322 28.9893 151.458 28.7927C151.594 28.5915 151.788 28.4323 152.041 28.3153C152.298 28.1982 152.61 28.1397 152.975 28.1397C153.265 28.1397 153.518 28.1795 153.733 28.2591C153.953 28.334 154.136 28.437 154.281 28.568C154.426 28.6944 154.536 28.8325 154.611 28.9823C154.686 29.1274 154.725 29.2702 154.73 29.4106C154.73 29.4434 154.718 29.4762 154.695 29.5089C154.671 29.537 154.634 29.5511 154.583 29.5511H154.21C154.178 29.5511 154.143 29.5417 154.105 29.523C154.072 29.5042 154.047 29.4691 154.028 29.4176C154 29.2257 153.892 29.0642 153.705 28.9332C153.518 28.8021 153.274 28.7366 152.975 28.7366C152.67 28.7366 152.422 28.7951 152.23 28.9121C152.043 29.0291 151.949 29.2117 151.949 29.4598C151.949 29.6189 151.994 29.7523 152.083 29.86C152.172 29.963 152.312 30.0543 152.504 30.1338C152.696 30.2134 152.947 30.2977 153.255 30.3866C153.63 30.4896 153.937 30.5996 154.175 30.7166C154.414 30.829 154.59 30.9717 154.702 31.1449C154.819 31.3135 154.877 31.5311 154.877 31.7979C154.877 32.0928 154.8 32.3456 154.646 32.5563C154.491 32.7622 154.274 32.9214 153.993 33.0337C153.717 33.1414 153.389 33.1952 153.01 33.1952ZM157.069 33.1952C156.769 33.1952 156.514 33.1297 156.303 32.9986C156.097 32.8629 155.941 32.6756 155.833 32.4369C155.725 32.1982 155.671 31.9243 155.671 31.6154V29.6353C155.671 29.5885 155.685 29.5511 155.714 29.523C155.746 29.4902 155.786 29.4738 155.833 29.4738H156.184C156.231 29.4738 156.268 29.4902 156.296 29.523C156.329 29.5511 156.345 29.5885 156.345 29.6353V31.5803C156.345 32.2777 156.65 32.6265 157.258 32.6265C157.548 32.6265 157.78 32.5352 157.953 32.3526C158.131 32.1654 158.22 31.9079 158.22 31.5803V29.6353C158.22 29.5885 158.234 29.5511 158.262 29.523C158.295 29.4902 158.335 29.4738 158.382 29.4738H158.726C158.777 29.4738 158.817 29.4902 158.845 29.523C158.873 29.5511 158.887 29.5885 158.887 29.6353V32.9635C158.887 33.0103 158.873 33.0501 158.845 33.0829C158.817 33.111 158.777 33.125 158.726 33.125H158.403C158.356 33.125 158.316 33.111 158.283 33.0829C158.255 33.0501 158.241 33.0103 158.241 32.9635V32.6546C158.115 32.8184 157.96 32.9495 157.778 33.0478C157.6 33.1461 157.364 33.1952 157.069 33.1952ZM160.092 33.125C160.045 33.125 160.005 33.111 159.972 33.0829C159.944 33.0501 159.93 33.0103 159.93 32.9635V29.6353C159.93 29.5885 159.944 29.5511 159.972 29.523C160.005 29.4902 160.045 29.4738 160.092 29.4738H160.408C160.455 29.4738 160.492 29.4902 160.52 29.523C160.553 29.5511 160.569 29.5885 160.569 29.6353V29.8811C160.677 29.736 160.813 29.6213 160.977 29.537C161.14 29.4481 161.337 29.4036 161.566 29.4036C162.095 29.3989 162.47 29.6143 162.69 30.0496C162.797 29.853 162.954 29.6962 163.16 29.5791C163.366 29.4621 163.6 29.4036 163.862 29.4036C164.106 29.4036 164.326 29.4598 164.522 29.5721C164.724 29.6845 164.881 29.8553 164.993 30.0847C165.11 30.3094 165.168 30.5926 165.168 30.9343V32.9635C165.168 33.0103 165.152 33.0501 165.119 33.0829C165.091 33.111 165.054 33.125 165.007 33.125H164.677C164.63 33.125 164.59 33.111 164.558 33.0829C164.529 33.0501 164.515 33.0103 164.515 32.9635V30.9975C164.515 30.7353 164.478 30.5294 164.403 30.3796C164.328 30.2298 164.228 30.1245 164.101 30.0636C163.975 30.0028 163.837 29.9723 163.687 29.9723C163.565 29.9723 163.441 30.0028 163.315 30.0636C163.188 30.1245 163.083 30.2298 162.999 30.3796C162.919 30.5294 162.879 30.7353 162.879 30.9975V32.9635C162.879 33.0103 162.863 33.0501 162.83 33.0829C162.802 33.111 162.765 33.125 162.718 33.125H162.388C162.341 33.125 162.301 33.111 162.269 33.0829C162.24 33.0501 162.226 33.0103 162.226 32.9635V30.9975C162.226 30.7353 162.187 30.5294 162.107 30.3796C162.027 30.2298 161.924 30.1245 161.798 30.0636C161.672 30.0028 161.538 29.9723 161.398 29.9723C161.276 29.9723 161.152 30.0028 161.026 30.0636C160.899 30.1245 160.794 30.2298 160.71 30.3796C160.63 30.5294 160.59 30.733 160.59 30.9905V32.9635C160.59 33.0103 160.574 33.0501 160.541 33.0829C160.513 33.111 160.476 33.125 160.429 33.125H160.092ZM166.332 33.125C166.285 33.125 166.245 33.111 166.212 33.0829C166.184 33.0501 166.17 33.0103 166.17 32.9635V29.6353C166.17 29.5885 166.184 29.5511 166.212 29.523C166.245 29.4902 166.285 29.4738 166.332 29.4738H166.648C166.694 29.4738 166.732 29.4902 166.76 29.523C166.793 29.5511 166.809 29.5885 166.809 29.6353V29.8811C166.917 29.736 167.053 29.6213 167.216 29.537C167.38 29.4481 167.577 29.4036 167.806 29.4036C168.335 29.3989 168.71 29.6143 168.93 30.0496C169.037 29.853 169.194 29.6962 169.4 29.5791C169.606 29.4621 169.84 29.4036 170.102 29.4036C170.346 29.4036 170.566 29.4598 170.762 29.5721C170.964 29.6845 171.12 29.8553 171.233 30.0847C171.35 30.3094 171.408 30.5926 171.408 30.9343V32.9635C171.408 33.0103 171.392 33.0501 171.359 33.0829C171.331 33.111 171.294 33.125 171.247 33.125H170.917C170.87 33.125 170.83 33.111 170.797 33.0829C170.769 33.0501 170.755 33.0103 170.755 32.9635V30.9975C170.755 30.7353 170.718 30.5294 170.643 30.3796C170.568 30.2298 170.467 30.1245 170.341 30.0636C170.215 30.0028 170.076 29.9723 169.927 29.9723C169.805 29.9723 169.681 30.0028 169.555 30.0636C169.428 30.1245 169.323 30.2298 169.239 30.3796C169.159 30.5294 169.119 30.7353 169.119 30.9975V32.9635C169.119 33.0103 169.103 33.0501 169.07 33.0829C169.042 33.111 169.005 33.125 168.958 33.125H168.628C168.581 33.125 168.541 33.111 168.508 33.0829C168.48 33.0501 168.466 33.0103 168.466 32.9635V30.9975C168.466 30.7353 168.426 30.5294 168.347 30.3796C168.267 30.2298 168.164 30.1245 168.038 30.0636C167.911 30.0028 167.778 29.9723 167.638 29.9723C167.516 29.9723 167.392 30.0028 167.266 30.0636C167.139 30.1245 167.034 30.2298 166.95 30.3796C166.87 30.5294 166.83 30.733 166.83 30.9905V32.9635C166.83 33.0103 166.814 33.0501 166.781 33.0829C166.753 33.111 166.716 33.125 166.669 33.125H166.332ZM173.428 33.1952C173.194 33.1952 172.981 33.1484 172.789 33.0548C172.597 32.9612 172.443 32.8348 172.326 32.6756C172.209 32.5165 172.15 32.3363 172.15 32.135C172.15 31.812 172.281 31.5545 172.543 31.3626C172.806 31.1707 173.147 31.0443 173.569 30.9834L174.615 30.836V30.6324C174.615 30.4077 174.549 30.2321 174.418 30.1058C174.292 29.9794 174.083 29.9162 173.793 29.9162C173.583 29.9162 173.412 29.9583 173.281 30.0426C173.154 30.1268 173.065 30.2345 173.014 30.3656C172.986 30.4358 172.937 30.4709 172.866 30.4709H172.55C172.499 30.4709 172.459 30.4568 172.431 30.4287C172.408 30.396 172.396 30.3585 172.396 30.3164C172.396 30.2462 172.422 30.1596 172.473 30.0566C172.529 29.9536 172.614 29.853 172.726 29.7547C172.838 29.6564 172.981 29.5745 173.154 29.5089C173.332 29.4387 173.547 29.4036 173.8 29.4036C174.081 29.4036 174.317 29.4411 174.509 29.5159C174.701 29.5862 174.851 29.6821 174.959 29.8038C175.071 29.9255 175.151 30.0636 175.198 30.2181C175.249 30.3726 175.275 30.5294 175.275 30.6885V32.9635C175.275 33.0103 175.258 33.0501 175.226 33.0829C175.198 33.111 175.16 33.125 175.113 33.125H174.79C174.739 33.125 174.699 33.111 174.671 33.0829C174.643 33.0501 174.629 33.0103 174.629 32.9635V32.6616C174.568 32.7458 174.486 32.8301 174.383 32.9144C174.28 32.9939 174.151 33.0618 173.997 33.118C173.842 33.1695 173.653 33.1952 173.428 33.1952ZM173.576 32.6686C173.767 32.6686 173.943 32.6288 174.102 32.5492C174.261 32.465 174.385 32.3363 174.474 32.1631C174.568 31.9899 174.615 31.7722 174.615 31.5101V31.3135L173.8 31.4328C173.468 31.4796 173.217 31.5592 173.049 31.6715C172.88 31.7792 172.796 31.9173 172.796 32.0858C172.796 32.2169 172.834 32.3269 172.908 32.4158C172.988 32.5001 173.086 32.5633 173.203 32.6054C173.325 32.6475 173.449 32.6686 173.576 32.6686ZM176.446 33.125C176.399 33.125 176.359 33.111 176.326 33.0829C176.298 33.0501 176.284 33.0103 176.284 32.9635V29.6423C176.284 29.5955 176.298 29.5557 176.326 29.523C176.359 29.4902 176.399 29.4738 176.446 29.4738H176.769C176.815 29.4738 176.855 29.4902 176.888 29.523C176.921 29.5557 176.937 29.5955 176.937 29.6423V29.9513C177.031 29.7921 177.159 29.6728 177.323 29.5932C177.487 29.5136 177.684 29.4738 177.913 29.4738H178.194C178.241 29.4738 178.278 29.4902 178.306 29.523C178.334 29.5511 178.348 29.5885 178.348 29.6353V29.9232C178.348 29.97 178.334 30.0075 178.306 30.0355C178.278 30.0636 178.241 30.0777 178.194 30.0777H177.773C177.52 30.0777 177.321 30.1526 177.176 30.3024C177.031 30.4475 176.958 30.6464 176.958 30.8992V32.9635C176.958 33.0103 176.942 33.0501 176.909 33.0829C176.876 33.111 176.836 33.125 176.79 33.125H176.446ZM179.59 34.4591C179.553 34.4591 179.52 34.445 179.492 34.417C179.464 34.3889 179.45 34.3561 179.45 34.3187C179.45 34.2999 179.452 34.2812 179.457 34.2625C179.462 34.2438 179.471 34.2204 179.485 34.1923L180.026 32.9073L178.685 29.7406C178.661 29.6845 178.65 29.6447 178.65 29.6213C178.65 29.5791 178.664 29.544 178.692 29.5159C178.72 29.4879 178.755 29.4738 178.797 29.4738H179.141C179.188 29.4738 179.225 29.4855 179.253 29.5089C179.281 29.5323 179.3 29.5604 179.31 29.5932L180.377 32.149L181.472 29.5932C181.486 29.5604 181.505 29.5323 181.528 29.5089C181.556 29.4855 181.596 29.4738 181.648 29.4738H181.978C182.02 29.4738 182.055 29.4879 182.083 29.5159C182.111 29.544 182.125 29.5768 182.125 29.6143C182.125 29.6377 182.114 29.6798 182.09 29.7406L180.096 34.3397C180.082 34.3725 180.061 34.4006 180.033 34.424C180.009 34.4474 179.972 34.4591 179.92 34.4591H179.59Z\"\r\n        fill=\"#AAA9A9\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default NoAddon;\r\n\r\nexport const NoAddonSmall = () => (\r\n  <svg\r\n    width={198}\r\n    height={150}\r\n    viewBox=\"0 0 198 150\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M197.216 72.1972C203.694 89.6493 168.469 94.3555 148.317 110.853C128.164 127.351 115.029 136.895 97.3951 138.94C79.7615 140.985 57.4496 135.531 32.0789 116.716C6.7081 98.0368 -7.27745 74.5346 3.87848 55.0373C15.0344 35.6764 51.5118 20.3204 96.8553 22.6382C142.379 24.8198 190.739 54.8814 197.216 72.1972Z\"\r\n      fill=\"#F3F3F3\"\r\n    />\r\n    <path\r\n      d=\"M150.032 2.14239V147.755L147.368 149.694L144.691 147.755L142.021 149.694L139.356 147.755L136.679 149.694L134.009 147.755L131.332 149.694L128.667 147.755L125.997 149.694L123.32 147.755L120.65 149.694L117.985 147.755L115.314 149.694L112.638 147.755L109.973 149.694L107.303 147.755L104.626 149.694L101.956 147.755L99.2849 149.694L96.6143 147.755L93.9437 149.694L91.2731 147.755L88.6025 149.694L85.9319 147.755L83.2554 149.694L80.5906 147.755L77.92 149.694L75.2436 147.755L72.573 149.694L69.9082 147.755L67.2318 149.694L64.5612 147.755L61.8963 149.694L59.2199 147.755L56.5493 149.694L53.8787 147.755L51.2081 149.694L48.5375 147.755V2.14239L51.2081 0.199219L53.8787 2.14239L56.5493 0.199219L59.2199 2.14239L61.8963 0.199219L64.5612 2.14239L67.2318 0.199219L69.9082 2.14239L72.573 0.199219L75.2436 2.14239L77.92 0.199219L80.5906 2.14239L83.2554 0.199219L85.9319 2.14239L88.6025 0.199219L91.2731 2.14239L93.9437 0.199219L96.6143 2.14239L99.2849 0.199219L101.956 2.14239L104.626 0.199219L107.303 2.14239L109.973 0.199219L112.638 2.14239L115.314 0.199219L117.985 2.14239L120.65 0.199219L123.32 2.14239L125.997 0.199219L128.667 2.14239L131.332 0.199219L134.009 2.14239L136.679 0.199219L139.356 2.14239L142.021 0.199219L144.691 2.14239L147.368 0.199219L150.032 2.14239Z\"\r\n      fill=\"white\"\r\n    />\r\n    <path\r\n      d=\"M150.043 2.14259C150.043 2.18897 150.334 147.867 150.177 147.871L147.512 149.81L147.379 149.907L147.239 149.81L144.569 147.876H144.818L142.148 149.814L142.008 149.912L141.869 149.814L139.204 147.881H139.483L136.806 149.814L136.667 149.917L136.528 149.814L133.851 147.881H134.136L131.465 149.819L131.326 149.926L131.181 149.819L128.51 147.885H128.8L126.13 149.824L125.985 149.93L125.834 149.824L123.163 147.89H123.459L120.789 149.824L120.638 149.935L120.487 149.824L117.822 147.89H118.112L115.442 149.828L115.291 149.94L115.134 149.828L112.457 147.895H112.771L110.106 149.828L109.949 149.944L109.793 149.828L107.116 147.899H107.436L104.765 149.833L104.602 149.949L104.44 149.833L101.769 147.899H102.094L99.4295 149.838L99.2669 149.954L99.0986 149.838L96.428 147.904H96.7589L94.0883 149.838L93.9199 149.958L93.7515 149.838L91.0809 147.904H91.4176L88.747 149.842L88.5787 149.968L88.4103 149.842L85.7339 147.908H86.0764L83.4058 149.847L83.2317 149.972L83.0575 149.847L80.3927 147.913H80.741L78.0704 149.847L77.8962 149.977L77.7163 149.847L75.0456 147.913H75.3998L72.7292 149.852L72.5492 149.981L72.3692 149.852L69.6986 147.918H70.0644L67.3938 149.852L67.208 149.986L67.028 149.852L64.3516 147.918H64.7231L62.0583 149.856L61.8725 149.991L61.6868 149.856L59.0104 147.922H59.3877L56.7171 149.861L56.5255 149.995L56.3339 149.861L53.6633 147.927H54.0465L51.3817 149.861L51.1843 150L50.9927 149.861L48.3221 147.927L48.2234 147.857V147.755C48.2234 147.755 48.2234 2.01737 48.3859 2.03129L51.0624 0.0927515L51.1843 0L51.312 0.0927515L53.9768 2.03129H53.7272L56.4036 0.0927515L56.5255 0.00463687L56.6474 0.0927515L59.3181 2.03593H59.08L61.7506 0.0973901L61.8725 0.00927373L61.9887 0.0973901L64.6999 2.03593H64.4677L67.1383 0.0973901L67.2544 0.0139124L67.3705 0.0973901L70.0411 2.04056H69.8147L72.4853 0.102027L72.5956 0.0185492L72.7059 0.102027L75.3766 2.0452H75.1501L77.8265 0.106666L77.9369 0.0278247L78.0472 0.106666L80.7178 2.0452H80.503L83.1678 0.106666L83.2723 0.0324634L83.3826 0.106666L86.0532 2.04984H85.8442L88.5148 0.111302L88.6193 0.0371002L88.7238 0.111302L91.3944 2.05448H91.1912L93.8619 0.115941L93.9605 0.0417389L94.0592 0.115941L96.7299 2.05448H96.5324L99.2147 0.120578L99.3076 0.0556512L99.3947 0.120578L102.059 2.06375H101.856L104.533 0.129854L104.614 0.0695636L104.695 0.129854L107.366 2.07303H107.209L109.886 0.139129L109.961 0.083476L110.031 0.139129L112.695 2.0823H112.556L115.238 0.143766L115.302 0.102027L115.36 0.143766L118.031 2.09158H117.915L120.585 0.153041L120.638 0.115941L120.69 0.153041L123.361 2.10085H123.262L125.938 0.162317L125.985 0.129854L126.025 0.162317L128.696 2.10549H128.62L131.291 0.171592H131.326H131.355L134.026 2.11477H133.967L136.644 0.180868L139.315 2.12404H139.274L141.944 0.190143C141.944 0.190143 144.679 2.15187 144.598 2.13332L147.274 0.19478C147.274 0.19478 149.933 2.14259 149.945 2.14259H150.043ZM150.043 2.14259L147.373 0.204056C147.413 0.204056 144.702 2.15187 144.714 2.15187C144.725 2.15187 142.032 0.217969 142.014 0.213331H142.043L139.384 2.1565L136.708 0.222607H136.69L134.026 2.16578L133.996 2.18897L133.967 2.16578L131.291 0.231882H131.355L128.696 2.17506L128.655 2.20288L128.62 2.17506L125.938 0.241156H126.025L123.366 2.20752H123.337L123.285 2.17506L120.609 0.236519H120.713L118.037 2.20752L117.979 2.24926L117.921 2.20752L115.244 0.268982H115.366L112.701 2.20752L112.632 2.25389L112.562 2.20752L109.891 0.268982H110.036L107.372 2.20752L107.296 2.26317L107.215 2.20752L104.538 0.273621H104.701L102.036 2.20752L101.949 2.27244L101.856 2.20752L99.1856 0.273621H99.3656L96.7066 2.20752L96.6079 2.27708L96.5092 2.20752L93.8386 0.268982H94.036L91.3712 2.21216L91.2667 2.28636L91.168 2.21216L88.5032 0.29217H88.7122L86.0416 2.23071L85.9371 2.30955L85.8326 2.23071L83.1562 0.29217H83.371L80.7062 2.23534L80.5959 2.31418L80.4914 2.23534L77.8149 0.296809H78.0297L75.3591 2.23998L75.2488 2.31882L75.1385 2.23998L72.4679 0.301446H72.6885L70.0237 2.23998L69.9134 2.32346L69.7973 2.23998L67.1209 0.301446H67.3531L64.6999 2.24462L64.5838 2.3281L64.4677 2.24462L61.7971 0.306085H62.0351L59.3645 2.24926L59.2426 2.33274L59.1265 2.24926L56.45 0.310721H56.6939L54.0233 2.24926L53.9013 2.34201L53.7736 2.24926L51.1088 0.310721H51.3468L48.6762 2.25389C48.8156 1.62317 48.804 147.913 48.8388 147.755L48.7459 147.584L51.4165 149.522H51.0275L53.6981 147.588L53.8897 147.449L54.0813 147.588L56.7519 149.527H56.3688L59.0452 147.593L59.231 147.454L59.4226 147.593L62.0932 149.527H61.7216L64.3864 147.593L64.5722 147.459L64.758 147.593L67.4286 149.532H67.0222L69.6928 147.598L69.8786 147.463L70.0586 147.598L72.7234 149.532H72.3634L75.0398 147.598L75.214 147.472L75.394 147.598L78.0646 149.536H77.7104L80.3869 147.602L80.561 147.477L80.7352 147.602L83.4 149.541H83.0575L85.7281 147.607L85.9022 147.482L86.0706 147.607L88.7412 149.541H88.4045L91.0751 147.607L91.2493 147.486L91.4176 147.607L94.0825 149.546H93.7457L96.4222 147.612L96.5847 147.491L96.7531 147.612L99.4237 149.55H99.0928L101.763 147.616L101.926 147.496L102.088 147.616L104.759 149.55H104.44L107.11 147.616L107.273 147.5L107.43 147.616L110.1 149.555H109.787L112.452 147.621L112.608 147.505L112.765 147.621L115.436 149.555H115.128L117.804 147.621L117.955 147.514L118.106 147.621L120.771 149.559H120.469L123.146 147.626L123.297 147.519L123.442 147.626L126.112 149.564H125.816L128.493 147.63L128.638 147.523L128.783 147.63L131.448 149.564H131.163L133.834 147.63L133.979 147.528L134.118 147.63L136.789 149.569H136.51L139.187 147.635L139.326 147.533L139.465 147.635L142.13 149.569H141.852L144.528 147.639L144.662 147.537L144.801 147.639L147.471 149.573H147.199L149.869 147.639C149.747 148.335 150.02 1.95245 150.003 2.14259H150.043Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M54.658 31.9033H53.4968V32.1352H54.658V31.9033Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M141.611 32.1345H139.324V31.8887H141.611V32.1345ZM137.036 32.1345H134.749V31.8887H137.036V32.1345ZM132.461 32.1345H130.174V31.8887H132.461V32.1345ZM127.886 32.1345H125.593V31.8887H127.886V32.1345ZM123.306 32.1345H121.018V31.8887H123.306V32.1345ZM118.731 32.1345H116.443V31.8887H118.731V32.1345ZM114.156 32.1345H111.868V31.8887H114.156V32.1345ZM109.575 32.1345H107.288V31.8887H109.575V32.1345ZM105 32.1345H102.713V31.8887H105V32.1345ZM100.426 32.1345H98.1381V31.8887H100.426V32.1345ZM95.8506 32.1345H93.5632V31.8887H95.8506V32.1345ZM91.27 32.1345H88.9825V31.8887H91.27V32.1345ZM86.6951 32.1345H84.4076V31.8887H86.6951V32.1345ZM82.1202 32.1345H79.8328V31.8887H82.1202V32.1345ZM77.5453 32.1345H75.2521V31.8887H77.5453V32.1345ZM72.9646 32.1345H70.6772V31.8887H72.9646V32.1345ZM68.3898 32.1345H66.1023V31.8887H68.3898V32.1345ZM63.8149 32.1345H61.5274V31.8887H63.8149V32.1345ZM59.2342 32.1345H56.9468V31.8887H59.2342V32.1345Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M145.056 31.9033H143.895V32.1352H145.056V31.9033Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M54.658 82.2207H53.4968V82.4526H54.658V82.2207Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M141.611 82.4389H139.324V82.207H141.611V82.4389ZM137.036 82.4389H134.749V82.207H137.036V82.4389ZM132.461 82.4389H130.174V82.207H132.461V82.4389ZM127.886 82.4389H125.593V82.207H127.886V82.4389ZM123.306 82.4389H121.018V82.207H123.306V82.4389ZM118.731 82.4389H116.443V82.207H118.731V82.4389ZM114.156 82.4389H111.868V82.207H114.156V82.4389ZM109.575 82.4389H107.288V82.207H109.575V82.4389ZM105 82.4389H102.713V82.207H105V82.4389ZM100.426 82.4389H98.1381V82.207H100.426V82.4389ZM95.8506 82.4389H93.5632V82.207H95.8506V82.4389ZM91.27 82.4389H88.9825V82.207H91.27V82.4389ZM86.6951 82.4389H84.4076V82.207H86.6951V82.4389ZM82.1202 82.4389H79.8328V82.207H82.1202V82.4389ZM77.5453 82.4389H75.2521V82.207H77.5453V82.4389ZM72.9646 82.4389H70.6772V82.207H72.9646V82.4389ZM68.3898 82.4389H66.1023V82.207H68.3898V82.4389ZM63.8149 82.4389H61.5274V82.207H63.8149V82.4389ZM59.2342 82.4389H56.9468V82.207H59.2342V82.4389Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M145.056 82.2207H143.895V82.4526H145.056V82.2207Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M54.658 103.408H53.4968V103.64H54.658V103.408Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M141.611 103.64H139.324V103.408H141.611V103.64ZM137.036 103.64H134.749V103.408H137.036V103.64ZM132.461 103.64H130.174V103.408H132.461V103.64ZM127.886 103.64H125.593V103.408H127.886V103.64ZM123.306 103.64H121.018V103.408H123.306V103.64ZM118.731 103.64H116.443V103.408H118.731V103.64ZM114.156 103.64H111.868V103.408H114.156V103.64ZM109.575 103.64H107.288V103.408H109.575V103.64ZM105 103.64H102.713V103.408H105V103.64ZM100.426 103.64H98.1381V103.408H100.426V103.64ZM95.8506 103.64H93.5632V103.408H95.8506V103.64ZM91.27 103.64H88.9825V103.408H91.27V103.64ZM86.6951 103.64H84.4076V103.408H86.6951V103.64ZM82.1202 103.64H79.8328V103.408H82.1202V103.64ZM77.5453 103.64H75.2521V103.408H77.5453V103.64ZM72.9646 103.64H70.6772V103.408H72.9646V103.64ZM68.3898 103.64H66.1023V103.408H68.3898V103.64ZM63.8149 103.64H61.5274V103.408H63.8149V103.64ZM59.2342 103.64H56.9468V103.408H59.2342V103.64Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M145.052 103.408H143.891V103.64H145.052V103.408Z\" fill=\"#DCDFE0\" />\r\n    <path d=\"M54.658 131.193H53.4968V131.425H54.658V131.193Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M141.611 131.421H139.324V131.189H141.611V131.421ZM137.036 131.421H134.749V131.189H137.036V131.421ZM132.461 131.421H130.174V131.189H132.461V131.421ZM127.886 131.421H125.593V131.189H127.886V131.421ZM123.306 131.421H121.018V131.189H123.306V131.421ZM118.731 131.421H116.443V131.189H118.731V131.421ZM114.156 131.421H111.868V131.189H114.156V131.421ZM109.575 131.421H107.288V131.189H109.575V131.421ZM105 131.421H102.713V131.189H105V131.421ZM100.426 131.421H98.1381V131.189H100.426V131.421ZM95.8506 131.421H93.5632V131.189H95.8506V131.421ZM91.27 131.421H88.9825V131.189H91.27V131.421ZM86.6951 131.421H84.4076V131.189H86.6951V131.421ZM82.1202 131.421H79.8328V131.189H82.1202V131.421ZM77.5453 131.421H75.2521V131.189H77.5453V131.421ZM72.9646 131.421H70.6772V131.189H72.9646V131.421ZM68.3898 131.421H66.1023V131.189H68.3898V131.421ZM63.8149 131.421H61.5274V131.189H63.8149V131.421ZM59.2342 131.421H56.9468V131.189H59.2342V131.421Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M145.052 131.193H143.891V131.425H145.052V131.193Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M54.658 22.2725H53.4968V22.5043H54.658V22.2725Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M141.611 22.5043H139.324V22.2725H141.611V22.5043ZM137.036 22.5043H134.749V22.2725H137.036V22.5043ZM132.461 22.5043H130.174V22.2725H132.461V22.5043ZM127.886 22.5043H125.593V22.2725H127.886V22.5043ZM123.306 22.5043H121.018V22.2725H123.306V22.5043ZM118.731 22.5043H116.443V22.2725H118.731V22.5043ZM114.156 22.5043H111.868V22.2725H114.156V22.5043ZM109.575 22.5043H107.288V22.2725H109.575V22.5043ZM105 22.5043H102.713V22.2725H105V22.5043ZM100.426 22.5043H98.1381V22.2725H100.426V22.5043ZM95.8506 22.5043H93.5632V22.2725H95.8506V22.5043ZM91.27 22.5043H88.9825V22.2725H91.27V22.5043ZM86.6951 22.5043H84.4076V22.2725H86.6951V22.5043ZM82.1202 22.5043H79.8328V22.2725H82.1202V22.5043ZM77.5453 22.5043H75.2521V22.2725H77.5453V22.5043ZM72.9646 22.5043H70.6772V22.2725H72.9646V22.5043ZM68.3898 22.5043H66.1023V22.2725H68.3898V22.5043ZM63.8149 22.5043H61.5274V22.2725H63.8149V22.5043ZM59.2342 22.5043H56.9468V22.2725H59.2342V22.5043Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M145.052 22.2725H143.891V22.5043H145.052V22.2725Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M85.2827 28.0999C94.3222 27.8727 104.273 27.868 113.313 28.0999C104.273 28.3318 94.3222 28.3272 85.2827 28.0999Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M79.939 26.1341C92.3283 25.9068 106.239 25.9022 118.628 26.1341C106.239 26.3613 92.3283 26.3567 79.939 26.1341Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M87.223 42.5459H86.9327V42.7778H87.223V42.5459Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M120.008 42.7783H119.427V42.5557H120.008V42.7783ZM118.266 42.7783H117.686V42.5557H118.266V42.7783ZM116.524 42.7783H115.944V42.5557H116.524V42.7783ZM114.783 42.7783H114.202V42.5557H114.783V42.7783ZM113.041 42.7783H112.46V42.5557H113.041V42.7783ZM111.299 42.7783H110.719V42.5557H111.299V42.7783ZM109.558 42.7783H108.977V42.5557H109.558V42.7783ZM107.816 42.7783H107.235V42.5557H107.816V42.7783ZM106.074 42.7783H105.494V42.5557H106.074V42.7783ZM104.332 42.7783H103.752V42.5557H104.332V42.7783ZM102.591 42.7783H102.01V42.5557H102.591V42.7783ZM100.849 42.7783H100.268V42.5557H100.849V42.7783ZM99.1073 42.7783H98.5268V42.5557H99.1073V42.7783ZM97.3656 42.7783H96.7851V42.5557H97.3656V42.7783ZM95.6239 42.7783H95.0434V42.5557H95.6239V42.7783ZM93.8822 42.7783H93.3016V42.5557H93.8822V42.7783ZM92.1405 42.7783H91.5599V42.5557H92.1405V42.7783ZM90.3988 42.7783H89.8182V42.5557H90.3988V42.7783ZM88.6571 42.7783H88.0765V42.5557H88.6571V42.7783Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M121.451 42.5459H121.161V42.7778H121.451V42.5459Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M58.1 42.661C66.5647 42.4245 75.459 42.4291 83.9294 42.661C75.459 42.8883 66.5647 42.8929 58.1 42.661Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M81.7152 48.9238H81.4249V49.1557H81.7152V48.9238Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M119.988 49.1557H119.407V48.9238H119.988V49.1557ZM118.246 49.1557H117.665V48.9238H118.246V49.1557ZM116.504 49.1557H115.924V48.9238H116.504V49.1557ZM114.762 49.1557H114.182V48.9238H114.762V49.1557ZM113.021 49.1557H112.44V48.9238H113.021V49.1557ZM111.279 49.1557H110.698V48.9238H111.279V49.1557ZM109.537 49.1557H108.957V48.9238H109.537V49.1557ZM107.796 49.1557H107.215V48.9238H107.796V49.1557ZM106.054 49.1557H105.473V48.9238H106.054V49.1557ZM104.312 49.1557H103.732V48.9238H104.312V49.1557ZM102.57 49.1557H101.99V48.9238H102.57V49.1557ZM100.829 49.1557H100.248V48.9238H100.829V49.1557ZM99.0871 49.1557H98.5065V48.9238H99.0871V49.1557ZM97.3454 49.1557H96.7648V48.9238H97.3454V49.1557ZM95.6037 49.1557H95.0231V48.9238H95.6037V49.1557ZM93.862 49.1557H93.2814V48.9238H93.862V49.1557ZM92.1203 49.1557H91.5397V48.9238H92.1203V49.1557ZM90.3786 49.1557H89.798V48.9238H90.3786V49.1557ZM88.6369 49.1557H88.0563V48.9238H88.6369V49.1557ZM86.8952 49.1557H86.3146V48.9238H86.8952V49.1557ZM85.1534 49.1557H84.5729V48.9238H85.1534V49.1557ZM83.4117 49.1557H82.8312V48.9238H83.4117V49.1557Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M121.451 48.9238H121.161V49.1557H121.451V48.9238Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M58.1 49.0479C64.8733 48.8161 71.6466 48.8161 78.4199 49.0479C71.6427 49.286 64.8694 49.286 58.1 49.0479Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M95.3652 55.3057H95.075V55.5375H95.3652V55.3057Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M119.995 55.5424H119.414V55.3105H119.995V55.5424ZM118.253 55.5424H117.672V55.3105H118.253V55.5424ZM116.511 55.5424H115.931V55.3105H116.511V55.5424ZM114.769 55.5424H114.189V55.3105H114.769V55.5424ZM113.028 55.5424H112.447V55.3105H113.028V55.5424ZM111.286 55.5424H110.705V55.3105H111.286V55.5424ZM109.544 55.5424H108.964V55.3105H109.544V55.5424ZM107.803 55.5424H107.222V55.3105H107.803V55.5424ZM106.061 55.5424H105.48V55.3105H106.061V55.5424ZM104.319 55.5424H103.739V55.3105H104.319V55.5424ZM102.578 55.5424H101.997V55.3105H102.578V55.5424ZM100.836 55.5424H100.255V55.3105H100.836V55.5424ZM99.0941 55.5424H98.5136V55.3105H99.0941V55.5424ZM97.3524 55.5424H96.7719V55.3105H97.3524V55.5424Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M121.451 55.3057H121.161V55.5375H121.451V55.3057Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M58.1 55.4192C69.0611 55.192 81.1137 55.1874 92.0748 55.4192C81.1195 55.6465 69.0611 55.6465 58.1 55.4192Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M85.573 61.6807H85.2827V61.9125H85.573V61.6807Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M120.015 61.9125H119.435V61.6807H120.015V61.9125ZM118.273 61.9125H117.693V61.6807H118.273V61.9125ZM116.532 61.9125H115.951V61.6807H116.532V61.9125ZM114.79 61.9125H114.209V61.6807H114.79V61.9125ZM113.048 61.9125H112.468V61.6807H113.048V61.9125ZM111.307 61.9125H110.726V61.6807H111.307V61.9125ZM109.565 61.9125H108.984V61.6807H109.565V61.9125ZM107.823 61.9125H107.243V61.6807H107.823V61.9125ZM106.081 61.9125H105.501V61.6807H106.081V61.9125ZM104.34 61.9125H103.759V61.6807H104.34V61.9125ZM102.598 61.9125H102.017V61.6807H102.598V61.9125ZM100.856 61.9125H100.276V61.6807H100.856V61.9125ZM99.1147 61.9125H98.5341V61.6807H99.1147V61.9125ZM97.373 61.9125H96.7924V61.6807H97.373V61.9125ZM95.6312 61.9125H95.0507V61.6807H95.6312V61.9125ZM93.8895 61.9125H93.309V61.6807H93.8895V61.9125ZM92.1478 61.9125H91.5673V61.6807H92.1478V61.9125ZM90.4061 61.9125H89.8256V61.6807H90.4061V61.9125ZM88.6644 61.9125H88.0839V61.6807H88.6644V61.9125ZM86.9227 61.9125H86.3422V61.6807H86.9227V61.9125Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M121.451 61.6807H121.161V61.9125H121.451V61.6807Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M58.1 61.796C66.1544 61.5641 74.2088 61.5641 82.2632 61.796C74.2088 62.031 66.1544 62.031 58.1 61.796Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M90.9496 68.0625H90.6593V68.2944H90.9496V68.0625Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M120.01 68.2944H119.43V68.0625H120.01V68.2944ZM118.297 68.2944H117.717V68.0625H118.297V68.2944ZM116.591 68.2944H116.01V68.0625H116.591V68.2944ZM114.878 68.2944H114.297V68.0625H114.878V68.2944ZM113.171 68.2944H112.59V68.0625H113.171V68.2944ZM111.458 68.2944H110.878V68.0625H111.458V68.2944ZM109.751 68.2944H109.171V68.0625H109.751V68.2944ZM108.039 68.2944H107.458V68.0625H108.039V68.2944ZM106.332 68.2944H105.751V68.0625H106.332V68.2944ZM104.59 68.2944H104.01V68.0625H104.59V68.2944ZM102.883 68.2944H102.303V68.0625H102.883V68.2944ZM101.171 68.2944H100.59V68.0625H101.171V68.2944ZM99.458 68.2944H98.8774V68.0625H99.458V68.2944ZM97.7511 68.2944H97.1705V68.0625H97.7511V68.2944ZM96.0384 68.2944H95.4579V68.0625H96.0384V68.2944ZM94.3315 68.2944H93.751V68.0625H94.3315V68.2944ZM92.5898 68.2944H92.0093V68.0625H92.5898V68.2944Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M121.451 68.0625H121.161V68.2944H121.451V68.0625Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M58.1 68.178C67.6329 67.9508 78.1238 67.9462 87.6567 68.178C78.1238 68.4099 67.6329 68.4053 58.1 68.178Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M75.823 74.4424H75.5327V74.6743H75.823V74.4424Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M119.975 74.6743H119.394V74.4424H119.975V74.6743ZM118.233 74.6743H117.653V74.4424H118.233V74.6743ZM116.491 74.6743H115.911V74.4424H116.491V74.6743ZM114.75 74.6743H114.169V74.4424H114.75V74.6743ZM113.008 74.6743H112.427V74.4424H113.008V74.6743ZM111.237 74.6743H110.657V74.4424H111.237V74.6743ZM109.496 74.6743H108.915V74.4424H109.496V74.6743ZM107.754 74.6743H107.173V74.4424H107.754V74.6743ZM106.012 74.6743H105.432V74.4424H106.012V74.6743ZM104.27 74.6743H103.69V74.4424H104.27V74.6743ZM102.529 74.6743H101.948V74.4424H102.529V74.6743ZM100.787 74.6743H100.206V74.4424H100.787V74.6743ZM99.0163 74.6743H98.4357V74.4424H99.0163V74.6743ZM97.2746 74.6743H96.694V74.4424H97.2746V74.6743ZM95.5329 74.6743H94.9523V74.4424H95.5329V74.6743ZM93.7912 74.6743H93.2106V74.4424H93.7912V74.6743ZM92.0494 74.6743H91.4689V74.4424H92.0494V74.6743ZM90.3077 74.6743H89.7272V74.4424H90.3077V74.6743ZM88.537 74.6743H87.9565V74.4424H88.537V74.6743ZM86.7953 74.6743H86.2147V74.4424H86.7953V74.6743ZM85.0536 74.6743H84.473V74.4424H85.0536V74.6743ZM83.3119 74.6743H82.7313V74.4424H83.3119V74.6743ZM81.5702 74.6743H80.9896V74.4424H81.5702V74.6743ZM79.8285 74.6743H79.2479V74.4424H79.8285V74.6743ZM78.0868 74.6743H77.5062V74.4424H78.0868V74.6743Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M121.451 74.4424H121.161V74.6743H121.451V74.4424Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M58.1 74.5561C62.9082 74.3172 67.7304 74.3172 72.5387 74.5561C67.7303 74.7926 62.9083 74.7926 58.1 74.5561Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M84.223 90.1895H83.9327V90.4213H84.223V90.1895Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M120.014 90.4213H119.434V90.1895H120.014V90.4213ZM118.313 90.4213H117.732V90.1895H118.313V90.4213ZM116.606 90.4213H116.026V90.1895H116.606V90.4213ZM114.905 90.4213H114.325V90.1895H114.905V90.4213ZM113.198 90.4213H112.618V90.1895H113.198V90.4213ZM111.491 90.4213H110.911V90.1895H111.491V90.4213ZM109.79 90.4213H109.21V90.1895H109.79V90.4213ZM108.083 90.4213H107.503V90.1895H108.083V90.4213ZM106.382 90.4213H105.802V90.1895H106.382V90.4213ZM104.675 90.4213H104.095V90.1895H104.675V90.4213ZM102.969 90.4213H102.388V90.1895H102.969V90.4213ZM101.268 90.4213H100.687V90.1895H101.268V90.4213ZM99.5607 90.4213H98.9801V90.1895H99.5607V90.4213ZM97.8596 90.4213H97.2791V90.1895H97.8596V90.4213ZM96.1528 90.4213H95.5722V90.1895H96.1528V90.4213ZM94.4517 90.4213H93.8711V90.1895H94.4517V90.4213ZM92.7448 90.4213H92.1643V90.1895H92.7448V90.4213ZM91.0379 90.4213H90.4574V90.1895H91.0379V90.4213ZM89.3369 90.4213H88.7563V90.1895H89.3369V90.4213ZM87.63 90.4213H87.0494V90.1895H87.63V90.4213ZM85.929 90.4213H85.3484V90.1895H85.929V90.4213Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M121.451 90.1895H121.161V90.4213H121.451V90.1895Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M58.5463 89.6541C58.5947 89.6094 58.6629 89.5814 58.7366 89.5762C58.8103 89.571 58.8837 89.589 58.9411 89.6263C59.2327 89.8213 59.5949 89.9367 59.9745 89.9555C60.214 89.9597 60.4492 89.9047 60.648 89.7979C60.7156 89.7652 60.7721 89.7198 60.8126 89.6657C60.8531 89.6115 60.8763 89.5502 60.8802 89.4871C60.8807 89.4376 60.8625 89.3891 60.8279 89.348C60.7873 89.2963 60.7315 89.2534 60.6654 89.2228C60.438 89.1181 60.1878 89.0489 59.9281 89.0187C59.6885 88.9848 59.4547 88.9288 59.2314 88.8518C59.0277 88.7795 58.8544 88.662 58.7321 88.5132C58.65 88.4075 58.6077 88.2852 58.6102 88.1608C58.6151 88.0361 58.6565 87.9141 58.7311 87.8046C58.8057 87.6951 58.9114 87.601 59.0398 87.5301C59.3146 87.3793 59.6411 87.2999 59.9745 87.3028C60.3967 87.322 60.8017 87.4433 61.1356 87.6506C61.1861 87.6864 61.2186 87.7355 61.2272 87.7889C61.2357 87.8424 61.2197 87.8965 61.1822 87.9412C61.1446 87.9859 61.088 88.0183 61.0229 88.0322C60.9577 88.0461 60.8885 88.0407 60.8279 88.017C60.5805 87.8585 60.2791 87.7631 59.9629 87.7434C59.7548 87.7439 59.5521 87.7957 59.3823 87.8918C59.323 87.9199 59.273 87.9591 59.2367 88.0059C59.2003 88.0527 59.1786 88.1058 59.1733 88.1608C59.1699 88.2034 59.1842 88.2458 59.2139 88.2814C59.252 88.3262 59.3014 88.3641 59.3591 88.3927C59.5654 88.4915 59.7944 88.5561 60.0326 88.5828C60.2883 88.6194 60.5378 88.6801 60.7757 88.7637C60.9937 88.8404 61.1806 88.964 61.3156 89.1208C61.3997 89.2311 61.4439 89.3579 61.4433 89.4871C61.4395 89.6202 61.3952 89.7505 61.3143 89.8668C61.2334 89.9832 61.1183 90.0821 60.9789 90.155C60.69 90.3205 60.3416 90.4068 59.9861 90.4008C59.4789 90.3815 58.9935 90.23 58.6044 89.9695C58.5461 89.9328 58.5075 89.8797 58.4967 89.821C58.4859 89.7624 58.5037 89.7026 58.5463 89.6541Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M63.2611 90.406C62.9644 90.4048 62.6803 90.3101 62.4705 90.1425C62.2607 89.9749 62.1422 89.748 62.1406 89.511V88.4675C62.1421 88.4076 62.1726 88.3505 62.2256 88.3081C62.2786 88.2657 62.3501 88.2414 62.4251 88.2402C62.4625 88.2402 62.4995 88.2461 62.534 88.2575C62.5685 88.269 62.5998 88.2857 62.6263 88.3068C62.6527 88.3279 62.6736 88.3529 62.6879 88.3805C62.7022 88.4081 62.7096 88.4376 62.7096 88.4675V89.497C62.7086 89.5571 62.7232 89.6167 62.7524 89.672C62.7817 89.7273 62.8249 89.7773 62.8794 89.8186C62.9339 89.86 62.9985 89.8919 63.0692 89.9124C63.1399 89.9329 63.2151 89.9415 63.2902 89.9376C63.4392 89.9378 63.5827 89.8921 63.6907 89.8101C63.7988 89.7281 63.8633 89.616 63.8707 89.497V88.4675C63.87 88.4379 63.8766 88.4084 63.8902 88.3809C63.9039 88.3533 63.9243 88.3282 63.9503 88.3071C63.9762 88.2859 64.0072 88.2691 64.0414 88.2576C64.0756 88.2461 64.1123 88.2402 64.1494 88.2402C64.225 88.2414 64.2971 88.2655 64.3511 88.3078C64.405 88.35 64.4367 88.4072 64.4397 88.4675V89.497C64.4336 89.7422 64.3062 89.9755 64.0853 90.1459C63.8644 90.3162 63.5681 90.4097 63.2611 90.406Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M65.5239 89.335V87.6284C65.5374 87.5748 65.5737 87.5266 65.6266 87.492C65.6795 87.4574 65.7458 87.4385 65.8142 87.4385C65.8826 87.4385 65.9489 87.4574 66.0018 87.492C66.0547 87.5266 66.091 87.5748 66.1045 87.6284V88.44C66.3148 88.321 66.5666 88.2577 66.8244 88.2591C67.0361 88.2561 67.2457 88.2929 67.4362 88.3667C67.6267 88.4405 67.7928 88.5491 67.9209 88.6838C68.0491 88.8184 68.1356 88.9753 68.1737 89.1417C68.2117 89.308 68.2001 89.4792 68.1398 89.6414C68.0794 89.8035 67.9721 89.952 67.8265 90.0748C67.6809 90.1975 67.5012 90.2912 67.3018 90.3481C67.1024 90.405 66.889 90.4235 66.679 90.4022C66.4689 90.3809 66.2681 90.3204 66.0929 90.2255C66.0852 90.287 66.0472 90.3435 65.9873 90.3826C65.9275 90.4218 65.8505 90.4403 65.7736 90.4342C65.6966 90.428 65.6258 90.3977 65.5768 90.3498C65.5278 90.302 65.5046 90.2406 65.5123 90.1791L65.5239 89.335ZM66.1045 89.335C66.104 89.4942 66.181 89.6472 66.3193 89.7617C66.3838 89.8172 66.462 89.8615 66.5489 89.8918C66.6358 89.9221 66.7296 89.9378 66.8244 89.9379C66.92 89.9374 67.0145 89.9215 67.1022 89.8912C67.19 89.8609 67.2692 89.8169 67.3353 89.7617C67.4737 89.6453 67.5509 89.4909 67.5509 89.3304C67.5509 89.1699 67.4737 89.0155 67.3353 88.8991C67.2692 88.8439 67.19 88.7999 67.1022 88.7696C67.0145 88.7393 66.92 88.7234 66.8244 88.7229C66.7296 88.723 66.6358 88.7387 66.5489 88.769C66.462 88.7993 66.3838 88.8436 66.3193 88.8991C66.1808 89.0169 66.1058 89.1735 66.1103 89.335H66.1045Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M70.2856 88.4905C70.284 88.5537 70.2516 88.6138 70.1951 88.6581C70.1387 88.7023 70.0627 88.7271 69.9837 88.727H69.8443V89.9282C69.9244 89.9282 70.0012 89.9536 70.0578 89.9988C70.1144 90.0441 70.1462 90.1054 70.1462 90.1694C70.1462 90.2008 70.1384 90.2319 70.1231 90.261C70.1079 90.29 70.0856 90.3162 70.0575 90.3383C70.0294 90.3603 69.996 90.3776 69.9594 90.3892C69.9228 90.4008 69.8837 90.4065 69.8443 90.4059C69.6903 90.4059 69.5427 90.357 69.4338 90.27C69.3249 90.1831 69.2638 90.0651 69.2638 89.9421V88.741H69.107C69.0285 88.741 68.9532 88.716 68.8976 88.6717C68.8421 88.6273 68.8109 88.5672 68.8109 88.5044C68.8109 88.4417 68.8421 88.3816 68.8976 88.3372C68.9532 88.2928 69.0285 88.2679 69.107 88.2679H69.2638V87.6418C69.2637 87.6104 69.2716 87.5792 69.2868 87.5502C69.3021 87.5212 69.3244 87.495 69.3525 87.4729C69.3806 87.4509 69.414 87.4336 69.4506 87.422C69.4872 87.4104 69.5263 87.4047 69.5657 87.4053C69.6048 87.4047 69.6436 87.4104 69.6799 87.422C69.7162 87.4337 69.7491 87.4511 69.7768 87.4732C69.8044 87.4953 69.8262 87.5216 69.8408 87.5506C69.8554 87.5796 69.8625 87.6106 69.8618 87.6418V88.2679H70.0011C70.0747 88.2701 70.1446 88.2942 70.1972 88.3353C70.2498 88.3765 70.2813 88.4318 70.2856 88.4905Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M71.3857 90.0904C71.1425 89.8872 71.009 89.6156 71.0142 89.3345C71.0156 89.0543 71.1481 88.7846 71.3857 88.5785C71.5046 88.4766 71.6484 88.3953 71.8081 88.3394C71.9679 88.2836 72.1403 88.2545 72.3146 88.2539C72.4849 88.254 72.6531 88.283 72.8083 88.339C72.9634 88.395 73.1019 88.4766 73.2145 88.5785C73.4588 88.7816 73.5942 89.0528 73.5919 89.3345C73.5963 89.4743 73.5651 89.6134 73.5002 89.7433C73.4353 89.8733 73.3382 89.9914 73.2145 90.0904C73.1042 90.1949 72.9663 90.2786 72.8107 90.3355C72.6551 90.3924 72.4857 90.4212 72.3146 90.4197C72.1397 90.4193 71.9667 90.3899 71.8068 90.3332C71.6468 90.2765 71.5035 90.1938 71.3857 90.0904ZM71.6005 89.3345C71.5916 89.5033 71.662 89.6688 71.7979 89.7982C71.8661 89.8515 71.947 89.8933 72.0357 89.9212C72.1245 89.949 72.2193 89.9624 72.3146 89.9606C72.4063 89.961 72.4971 89.9469 72.5818 89.919C72.6665 89.8911 72.7435 89.8501 72.8081 89.7982C72.9431 89.6722 73.0172 89.5119 73.0172 89.3461C73.0172 89.1803 72.9431 89.0199 72.8081 88.8939C72.673 88.7947 72.4981 88.7371 72.3146 88.7316C72.1236 88.7344 71.9402 88.792 71.7979 88.8939C71.6682 89.0171 71.5982 89.1735 71.6005 89.3345Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M75.6188 88.4905C75.6173 88.5537 75.5848 88.6138 75.5283 88.6581C75.4719 88.7023 75.396 88.7271 75.3169 88.727H75.1834V89.9282C75.2227 89.9282 75.2617 89.9345 75.298 89.9466C75.3343 89.9588 75.3672 89.9766 75.3948 89.9991C75.4224 90.0216 75.4441 90.0482 75.4586 90.0774C75.4731 90.1066 75.4802 90.1379 75.4794 90.1694C75.4802 90.2006 75.4731 90.2316 75.4585 90.2606C75.4439 90.2896 75.4221 90.3159 75.3945 90.338C75.3668 90.3601 75.3339 90.3775 75.2976 90.3892C75.2613 90.4008 75.2225 90.4065 75.1834 90.4059C75.0294 90.4059 74.8817 90.357 74.7728 90.27C74.664 90.1831 74.6028 90.0651 74.6028 89.9421V88.741H74.446C74.3675 88.741 74.2922 88.716 74.2367 88.6717C74.1811 88.6273 74.15 88.5672 74.15 88.5044C74.1492 88.4732 74.1563 88.4422 74.1709 88.4132C74.1855 88.3842 74.2073 88.3579 74.2349 88.3358C74.2626 88.3137 74.2955 88.2963 74.3318 88.2846C74.3681 88.273 74.4069 88.2673 74.446 88.2679H74.5622V87.6418C74.5622 87.6104 74.57 87.5792 74.5852 87.5502C74.6005 87.5212 74.6228 87.495 74.6509 87.4729C74.679 87.4509 74.7124 87.4336 74.749 87.422C74.7856 87.4104 74.8247 87.4047 74.864 87.4053C74.9031 87.4047 74.942 87.4104 74.9783 87.422C75.0146 87.4337 75.0475 87.4511 75.0752 87.4732C75.1028 87.4953 75.1246 87.5216 75.1392 87.5506C75.1538 87.5796 75.1609 87.6106 75.1601 87.6418V88.2679H75.2937C75.3335 88.2647 75.3737 88.268 75.4119 88.2776C75.4501 88.2872 75.4854 88.3029 75.5158 88.3237C75.5462 88.3445 75.571 88.37 75.5887 88.3987C75.6064 88.4274 75.6166 88.4586 75.6188 88.4905Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M78.6841 89.3345V90.1785C78.6841 90.2084 78.6767 90.2379 78.6624 90.2655C78.6481 90.2931 78.6272 90.3181 78.6008 90.3392C78.5743 90.3603 78.543 90.3771 78.5085 90.3885C78.4739 90.3999 78.4369 90.4058 78.3996 90.4058C78.3332 90.4041 78.2694 90.3851 78.218 90.3515C78.1666 90.318 78.1304 90.2719 78.1151 90.2203C77.9074 90.3406 77.6576 90.4055 77.401 90.4058C77.2292 90.4062 77.0592 90.3784 76.9014 90.3242C76.7436 90.2699 76.6014 90.1904 76.4837 90.0904C76.2487 89.8825 76.1187 89.6123 76.1187 89.3322C76.1187 89.052 76.2487 88.7818 76.4837 88.5739C76.6011 88.4733 76.7431 88.393 76.9009 88.338C77.0586 88.283 77.2289 88.2543 77.401 88.2539C77.6576 88.2542 77.9074 88.3191 78.1151 88.4394C78.1295 88.3874 78.1654 88.3408 78.217 88.3072C78.2686 88.2735 78.333 88.2547 78.3996 88.2539C78.4374 88.2539 78.4749 88.2599 78.5098 88.2716C78.5447 88.2833 78.5763 88.3005 78.6028 88.3221C78.6293 88.3437 78.6502 88.3693 78.6641 88.3974C78.6781 88.4255 78.6849 88.4556 78.6841 88.4858V89.3345ZM78.1035 89.3345C78.1101 89.2499 78.095 89.1651 78.059 89.0853C78.0231 89.0056 77.9671 88.9325 77.8945 88.8707C77.8308 88.8149 77.7533 88.7703 77.6668 88.7398C77.5804 88.7092 77.4869 88.6935 77.3923 88.6935C77.2978 88.6935 77.2043 88.7092 77.1178 88.7398C77.0313 88.7703 76.9538 88.8149 76.8901 88.8707C76.7592 88.9946 76.6873 89.1515 76.6873 89.3136C76.6873 89.4757 76.7592 89.6326 76.8901 89.7565C76.9551 89.8105 77.0331 89.8535 77.1194 89.8828C77.2057 89.9122 77.2985 89.9273 77.3923 89.9273C77.4861 89.9273 77.5789 89.9122 77.6652 89.8828C77.7515 89.8535 77.8295 89.8105 77.8945 89.7565C78.0299 89.6424 78.1066 89.4917 78.1093 89.3345H78.1035Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M80.1555 87.3916C80.2345 87.3916 80.3105 87.4164 80.3669 87.4606C80.4234 87.5048 80.4558 87.565 80.4574 87.6281V90.1696C80.4558 90.2327 80.4234 90.2929 80.3669 90.3371C80.3105 90.3813 80.2345 90.4061 80.1555 90.4061C80.0769 90.4061 80.0016 90.3812 79.9461 90.3368C79.8906 90.2924 79.8594 90.2323 79.8594 90.1696V87.6281C79.8594 87.5654 79.8906 87.5052 79.9461 87.4609C80.0016 87.4165 80.0769 87.3916 80.1555 87.3916Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M78.734 111.059H78.4437V111.29H78.734V111.059Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M120.012 111.29H119.431V111.059H120.012V111.29ZM118.27 111.29H117.689V111.059H118.27V111.29ZM116.528 111.29H115.948V111.059H116.528V111.29ZM114.786 111.29H114.206V111.059H114.786V111.29ZM113.045 111.29H112.464V111.059H113.045V111.29ZM111.303 111.29H110.722V111.059H111.303V111.29ZM109.561 111.29H108.981V111.059H109.561V111.29ZM107.82 111.29H107.239V111.059H107.82V111.29ZM106.078 111.29H105.497V111.059H106.078V111.29ZM104.336 111.29H103.756V111.059H104.336V111.29ZM102.595 111.29H102.014V111.059H102.595V111.29ZM100.853 111.29H100.272V111.059H100.853V111.29ZM99.1111 111.29H98.5306V111.059H99.1111V111.29ZM97.3694 111.29H96.7889V111.059H97.3694V111.29ZM95.6277 111.29H95.0472V111.059H95.6277V111.29ZM93.886 111.29H93.3055V111.059H93.886V111.29ZM92.1443 111.29H91.5638V111.059H92.1443V111.29ZM90.4026 111.29H89.822V111.059H90.4026V111.29ZM88.6609 111.29H88.0803V111.059H88.6609V111.29ZM86.9192 111.29H86.3386V111.059H86.9192V111.29ZM85.1775 111.29H84.5969V111.059H85.1775V111.29ZM83.4358 111.29H82.8552V111.059H83.4358V111.29ZM81.6941 111.29H81.1135V111.059H81.6941V111.29ZM79.9524 111.29H79.3718V111.059H79.9524V111.29Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path d=\"M121.451 111.059H121.161V111.29H121.451V111.059Z\" fill=\"#DCDFE0\" />\r\n    <path\r\n      d=\"M125.079 107.987C125.109 107.987 125.14 107.991 125.168 108C125.197 108.009 125.223 108.023 125.245 108.04C125.266 108.058 125.283 108.078 125.295 108.101C125.306 108.124 125.312 108.148 125.311 108.173V108.27C125.609 108.295 125.896 108.376 126.147 108.507C126.195 108.525 126.236 108.554 126.265 108.59C126.294 108.626 126.309 108.668 126.309 108.711C126.309 108.742 126.302 108.773 126.286 108.802C126.271 108.831 126.249 108.858 126.221 108.88C126.193 108.902 126.159 108.919 126.123 108.931C126.086 108.942 126.047 108.948 126.008 108.947C125.951 108.945 125.895 108.932 125.845 108.91C125.676 108.823 125.489 108.758 125.293 108.72V109.545C126.112 109.712 126.455 109.972 126.455 110.436C126.455 110.9 125.99 111.224 125.293 111.275V111.535C125.294 111.56 125.289 111.584 125.277 111.607C125.266 111.63 125.249 111.65 125.227 111.668C125.206 111.685 125.18 111.699 125.151 111.708C125.123 111.717 125.092 111.721 125.061 111.721C124.999 111.721 124.939 111.701 124.895 111.667C124.85 111.632 124.825 111.585 124.823 111.535V111.266C124.426 111.232 124.046 111.117 123.72 110.932C123.676 110.91 123.639 110.879 123.614 110.843C123.588 110.806 123.575 110.765 123.575 110.723C123.574 110.692 123.581 110.661 123.596 110.632C123.611 110.603 123.632 110.577 123.66 110.555C123.688 110.533 123.721 110.515 123.757 110.504C123.793 110.492 123.832 110.486 123.871 110.487C123.935 110.488 123.998 110.504 124.051 110.533C124.283 110.679 124.556 110.778 124.846 110.821V109.972C124.063 109.81 123.685 109.573 123.685 109.086C123.692 108.973 123.727 108.862 123.787 108.759C123.848 108.657 123.933 108.565 124.038 108.488C124.143 108.412 124.266 108.353 124.4 108.315C124.534 108.277 124.676 108.26 124.817 108.266V108.173C124.818 108.147 124.825 108.121 124.839 108.097C124.853 108.073 124.873 108.052 124.897 108.034C124.922 108.017 124.951 108.004 124.982 107.996C125.013 107.988 125.046 107.985 125.079 107.987ZM124.864 109.457V108.692C124.521 108.72 124.347 108.868 124.347 109.059C124.347 109.249 124.452 109.337 124.864 109.457ZM125.293 110.056V110.839C125.636 110.812 125.828 110.672 125.828 110.464C125.828 110.255 125.706 110.158 125.293 110.056Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M61.3561 108.737H60.5026V111.056C60.5026 111.119 60.4714 111.179 60.4159 111.224C60.3604 111.268 60.2851 111.293 60.2065 111.293C60.1672 111.293 60.1281 111.288 60.0915 111.276C60.0549 111.265 60.0215 111.247 59.9934 111.225C59.9653 111.203 59.943 111.177 59.9277 111.148C59.9125 111.119 59.9046 111.088 59.9046 111.056V108.737H59.057C59.0176 108.737 58.9787 108.731 58.9424 108.719C58.906 108.707 58.8731 108.689 58.8456 108.667C58.818 108.644 58.7963 108.618 58.7818 108.588C58.7672 108.559 58.7602 108.528 58.7609 108.496C58.7601 108.465 58.7673 108.434 58.7819 108.405C58.7965 108.376 58.8182 108.35 58.8459 108.328C58.8736 108.306 58.9065 108.288 58.9428 108.277C58.9791 108.265 59.0179 108.259 59.057 108.26H61.3793C61.4578 108.26 61.5331 108.285 61.5887 108.329C61.6442 108.373 61.6754 108.434 61.6754 108.496C61.6755 108.529 61.6671 108.562 61.6508 108.592C61.6346 108.622 61.6108 108.649 61.5809 108.672C61.551 108.695 61.5156 108.712 61.477 108.723C61.4383 108.735 61.3971 108.739 61.3561 108.737Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M65.2249 108.638C65.5745 108.931 65.7696 109.32 65.7696 109.725C65.7696 110.13 65.5745 110.519 65.2249 110.813C65.0626 110.958 64.8641 111.074 64.6421 111.154C64.4201 111.234 64.1795 111.275 63.9361 111.276C63.6883 111.276 63.4433 111.234 63.2165 111.154C62.9897 111.075 62.786 110.958 62.6182 110.813C62.275 110.517 62.0844 110.128 62.0844 109.725C62.0844 109.322 62.275 108.933 62.6182 108.638C62.7852 108.491 62.9887 108.374 63.2157 108.294C63.4426 108.214 63.688 108.173 63.9361 108.174C64.1795 108.175 64.4201 108.217 64.6421 108.297C64.8641 108.376 65.0626 108.493 65.2249 108.638ZM65.1553 109.723C65.1551 109.445 65.0247 109.177 64.7895 108.972C64.6805 108.873 64.5465 108.794 64.3964 108.74C64.2462 108.685 64.0834 108.657 63.9186 108.657C63.7539 108.657 63.5911 108.685 63.4409 108.74C63.2908 108.794 63.1568 108.873 63.0478 108.972C62.8102 109.175 62.6793 109.444 62.682 109.723C62.6775 110.002 62.8086 110.271 63.0478 110.474C63.1568 110.573 63.2908 110.652 63.4409 110.706C63.5911 110.76 63.7539 110.788 63.9186 110.788C64.0834 110.788 64.2462 110.76 64.3964 110.706C64.5465 110.652 64.6805 110.573 64.7895 110.474C65.0266 110.27 65.1574 110.001 65.1553 109.723Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M68.8432 108.737H67.984V111.056C67.9847 111.088 67.9776 111.119 67.963 111.148C67.9484 111.177 67.9266 111.203 67.899 111.225C67.8713 111.247 67.8384 111.264 67.8021 111.276C67.7658 111.288 67.727 111.293 67.6879 111.293C67.6093 111.293 67.534 111.268 67.4785 111.224C67.423 111.179 67.3918 111.119 67.3918 111.056V108.737H66.5383C66.499 108.737 66.46 108.731 66.4237 108.719C66.3874 108.707 66.3545 108.689 66.3269 108.667C66.2993 108.644 66.2776 108.618 66.2631 108.588C66.2486 108.559 66.2415 108.528 66.2422 108.496C66.2415 108.465 66.2486 108.434 66.2632 108.405C66.2778 108.376 66.2995 108.35 66.3272 108.328C66.3549 108.306 66.3878 108.288 66.4241 108.277C66.4604 108.265 66.4992 108.259 66.5383 108.26H68.8606C68.9391 108.26 69.0145 108.285 69.07 108.329C69.1255 108.373 69.1567 108.434 69.1567 108.496C69.1567 108.529 69.1485 108.561 69.1326 108.591C69.1168 108.621 69.0935 108.648 69.0642 108.67C69.0349 108.693 69.0003 108.71 68.9623 108.722C68.9243 108.733 68.8838 108.739 68.8432 108.737Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M71.4358 110.565H70.1237L69.8566 111.121C69.8353 111.167 69.7972 111.206 69.7474 111.233C69.6975 111.26 69.6384 111.275 69.578 111.274C69.5434 111.279 69.508 111.279 69.4735 111.274C69.3989 111.252 69.3387 111.206 69.306 111.148C69.2734 111.09 69.271 111.023 69.2993 110.964L70.4953 108.408C70.5186 108.364 70.5582 108.326 70.6089 108.299C70.6596 108.273 70.7192 108.259 70.7797 108.26C70.8407 108.258 70.9009 108.271 70.952 108.298C71.0031 108.324 71.0423 108.363 71.0642 108.408L72.2602 110.945C72.2867 111.006 72.2827 111.072 72.2491 111.13C72.2155 111.188 72.1549 111.233 72.0802 111.256C72.0457 111.261 72.0102 111.261 71.9757 111.256C71.9161 111.256 71.8579 111.241 71.809 111.214C71.7602 111.186 71.7231 111.148 71.7028 111.103L71.4358 110.565ZM71.2152 110.101L70.774 109.174L70.3385 110.101H71.2152Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M73.0109 111.038V108.496C73.0109 108.434 73.0421 108.373 73.0977 108.329C73.1532 108.285 73.2285 108.26 73.307 108.26C73.3464 108.259 73.3855 108.265 73.4221 108.276C73.4587 108.288 73.492 108.305 73.5202 108.327C73.5483 108.349 73.5706 108.376 73.5859 108.405C73.6011 108.434 73.6089 108.465 73.6089 108.496V110.815H75.072C75.1351 110.83 75.1906 110.86 75.2301 110.902C75.2696 110.944 75.2909 110.995 75.2909 111.047C75.2909 111.099 75.2696 111.15 75.2301 111.192C75.1906 111.234 75.1351 111.265 75.072 111.279H73.3303C73.289 111.282 73.2475 111.277 73.2084 111.266C73.1694 111.255 73.1336 111.238 73.1036 111.215C73.0735 111.192 73.0497 111.165 73.0337 111.134C73.0178 111.104 73.01 111.071 73.0109 111.038Z\"\r\n      fill=\"#DCDFE0\"\r\n    />\r\n    <path\r\n      d=\"M73.4931 15.4121C73.4622 15.4121 73.4383 15.4037 73.4215 15.3868C73.4046 15.3672 73.3962 15.3433 73.3962 15.3152V12.5642C73.3962 12.5333 73.4046 12.5094 73.4215 12.4926C73.4383 12.4729 73.4622 12.4631 73.4931 12.4631H74.6474C74.8581 12.4631 75.0294 12.4982 75.1614 12.5684C75.2962 12.6358 75.3945 12.7285 75.4563 12.8465C75.5209 12.9644 75.5532 13.0964 75.5532 13.2425C75.5532 13.3576 75.5335 13.4573 75.4942 13.5416C75.4577 13.623 75.4114 13.6904 75.3552 13.7438C75.299 13.7944 75.2442 13.8337 75.1909 13.8618C75.3004 13.9151 75.3973 14.0022 75.4816 14.123C75.5686 14.2437 75.6122 14.3898 75.6122 14.5611C75.6122 14.7156 75.5771 14.8574 75.5068 14.9866C75.4366 15.1158 75.3313 15.2197 75.1909 15.2984C75.0533 15.3742 74.8819 15.4121 74.6769 15.4121H73.4931ZM73.809 15.0709H74.6221C74.8047 15.0709 74.9451 15.0217 75.0434 14.9234C75.1417 14.8251 75.1909 14.7043 75.1909 14.5611C75.1909 14.4122 75.1417 14.2901 75.0434 14.1946C74.9451 14.0963 74.8047 14.0471 74.6221 14.0471H73.809V15.0709ZM73.809 13.7101H74.5842C74.764 13.7101 74.9002 13.6694 74.9929 13.5879C75.0856 13.5037 75.1319 13.3899 75.1319 13.2467C75.1319 13.1034 75.0856 12.9939 74.9929 12.9181C74.9002 12.8422 74.764 12.8043 74.5842 12.8043H73.809V13.7101ZM76.2606 15.4121C76.2325 15.4121 76.2087 15.4037 76.189 15.3868C76.1722 15.3672 76.1637 15.3433 76.1637 15.3152V13.3183C76.1637 13.2902 76.1722 13.2677 76.189 13.2509C76.2087 13.2312 76.2325 13.2214 76.2606 13.2214H76.4628C76.4909 13.2214 76.5134 13.2312 76.5303 13.2509C76.5471 13.2677 76.5555 13.2902 76.5555 13.3183V15.3152C76.5555 15.3433 76.5471 15.3672 76.5303 15.3868C76.5134 15.4037 76.4909 15.4121 76.4628 15.4121H76.2606ZM76.2269 12.8127C76.1988 12.8127 76.175 12.8043 76.1553 12.7875C76.1385 12.7678 76.13 12.7439 76.13 12.7159V12.4884C76.13 12.4603 76.1385 12.4378 76.1553 12.421C76.175 12.4013 76.1988 12.3915 76.2269 12.3915H76.4923C76.5204 12.3915 76.5429 12.4013 76.5597 12.421C76.5794 12.4378 76.5892 12.4603 76.5892 12.4884V12.7159C76.5892 12.7439 76.5794 12.7678 76.5597 12.7875C76.5429 12.8043 76.5204 12.8127 76.4923 12.8127H76.2269ZM77.2852 15.4121C77.2571 15.4121 77.2332 15.4037 77.2135 15.3868C77.1967 15.3672 77.1883 15.3433 77.1883 15.3152V12.5178C77.1883 12.4898 77.1967 12.4673 77.2135 12.4504C77.2332 12.4308 77.2571 12.421 77.2852 12.421H77.4832C77.5141 12.421 77.5379 12.4308 77.5548 12.4504C77.5716 12.4673 77.5801 12.4898 77.5801 12.5178V15.3152C77.5801 15.3433 77.5716 15.3672 77.5548 15.3868C77.5379 15.4037 77.5141 15.4121 77.4832 15.4121H77.2852ZM78.3096 15.4121C78.2815 15.4121 78.2576 15.4037 78.238 15.3868C78.2211 15.3672 78.2127 15.3433 78.2127 15.3152V12.5178C78.2127 12.4898 78.2211 12.4673 78.238 12.4504C78.2576 12.4308 78.2815 12.421 78.3096 12.421H78.5076C78.5385 12.421 78.5624 12.4308 78.5792 12.4504C78.5961 12.4673 78.6045 12.4898 78.6045 12.5178V15.3152C78.6045 15.3433 78.5961 15.3672 78.5792 15.3868C78.5624 15.4037 78.5385 15.4121 78.5076 15.4121H78.3096ZM81.2682 15.4542C81.0239 15.4542 80.8188 15.4177 80.6531 15.3447C80.4874 15.2689 80.3596 15.172 80.2698 15.054C80.1827 14.9332 80.1364 14.8055 80.1307 14.6706C80.1307 14.6482 80.1392 14.6285 80.156 14.6117C80.1757 14.592 80.1981 14.5822 80.2234 14.5822H80.4383C80.472 14.5822 80.4973 14.5906 80.5141 14.6074C80.531 14.6243 80.5422 14.644 80.5478 14.6664C80.5619 14.7338 80.5956 14.8012 80.6489 14.8686C80.7051 14.9332 80.7823 14.988 80.8806 15.0329C80.9817 15.0751 81.1109 15.0961 81.2682 15.0961C81.5098 15.0961 81.6867 15.054 81.799 14.9698C81.9142 14.8827 81.9718 14.7675 81.9718 14.6243C81.9718 14.526 81.9409 14.4474 81.8791 14.3884C81.8201 14.3266 81.7288 14.2718 81.6053 14.2241C81.4817 14.1763 81.3216 14.1244 81.125 14.0682C80.92 14.0092 80.75 13.9446 80.6152 13.8744C80.4804 13.8042 80.3793 13.7171 80.3119 13.6132C80.2473 13.5093 80.215 13.3773 80.215 13.2172C80.215 13.0655 80.2557 12.9307 80.3372 12.8127C80.4186 12.692 80.5352 12.5965 80.6868 12.5263C80.8413 12.4561 81.0281 12.421 81.2472 12.421C81.4213 12.421 81.573 12.4448 81.7021 12.4926C81.8342 12.5375 81.9437 12.5993 82.0308 12.6779C82.1178 12.7538 82.1838 12.8366 82.2288 12.9265C82.2737 13.0136 82.2976 13.0992 82.3004 13.1835C82.3004 13.2031 82.2934 13.2228 82.2793 13.2425C82.2653 13.2593 82.2428 13.2677 82.2119 13.2677H81.9886C81.969 13.2677 81.9479 13.2621 81.9254 13.2509C81.9058 13.2397 81.8903 13.2186 81.8791 13.1877C81.8622 13.0725 81.7976 12.9756 81.6853 12.897C81.573 12.8184 81.4269 12.779 81.2472 12.779C81.0646 12.779 80.9157 12.8142 80.8006 12.8844C80.6882 12.9546 80.6321 13.0641 80.6321 13.213C80.6321 13.3085 80.6588 13.3885 80.7121 13.4531C80.7655 13.5149 80.8497 13.5697 80.9649 13.6174C81.08 13.6652 81.2303 13.7157 81.4157 13.7691C81.6404 13.8309 81.8243 13.8969 81.9676 13.9671C82.1108 14.0345 82.2161 14.1202 82.2835 14.2241C82.3537 14.3252 82.3889 14.4558 82.3889 14.6159C82.3889 14.7928 82.3425 14.9445 82.2498 15.0709C82.1571 15.1944 82.0265 15.2899 81.858 15.3573C81.6923 15.4219 81.4957 15.4542 81.2682 15.4542ZM83.7036 15.4542C83.5238 15.4542 83.3708 15.4149 83.2444 15.3363C83.1208 15.2548 83.0267 15.1425 82.9621 14.9992C82.8975 14.856 82.8652 14.6917 82.8652 14.5063V13.3183C82.8652 13.2902 82.8736 13.2677 82.8905 13.2509C82.9101 13.2312 82.934 13.2214 82.9621 13.2214H83.1727C83.2008 13.2214 83.2233 13.2312 83.2402 13.2509C83.2598 13.2677 83.2696 13.2902 83.2696 13.3183V14.4853C83.2696 14.9038 83.4522 15.113 83.8173 15.113C83.9915 15.113 84.1305 15.0582 84.2344 14.9487C84.3411 14.8363 84.3945 14.6819 84.3945 14.4853V13.3183C84.3945 13.2902 84.4029 13.2677 84.4198 13.2509C84.4394 13.2312 84.4633 13.2214 84.4914 13.2214H84.6978C84.7287 13.2214 84.7526 13.2312 84.7694 13.2509C84.7863 13.2677 84.7947 13.2902 84.7947 13.3183V15.3152C84.7947 15.3433 84.7863 15.3672 84.7694 15.3868C84.7526 15.4037 84.7287 15.4121 84.6978 15.4121H84.504C84.4759 15.4121 84.4521 15.4037 84.4324 15.3868C84.4156 15.3672 84.4071 15.3433 84.4071 15.3152V15.1298C84.3313 15.2281 84.2386 15.3068 84.1291 15.3658C84.0223 15.4247 83.8805 15.4542 83.7036 15.4542ZM85.5175 15.4121C85.4894 15.4121 85.4655 15.4037 85.4459 15.3868C85.429 15.3672 85.4206 15.3433 85.4206 15.3152V13.3183C85.4206 13.2902 85.429 13.2677 85.4459 13.2509C85.4655 13.2312 85.4894 13.2214 85.5175 13.2214H85.7071C85.7352 13.2214 85.7576 13.2312 85.7745 13.2509C85.7941 13.2677 85.804 13.2902 85.804 13.3183V13.4657C85.8686 13.3787 85.95 13.3099 86.0483 13.2593C86.1466 13.206 86.2646 13.1793 86.4022 13.1793C86.7196 13.1765 86.9443 13.3057 87.0763 13.5669C87.1409 13.4489 87.2349 13.3548 87.3585 13.2846C87.4821 13.2144 87.6225 13.1793 87.7798 13.1793C87.9259 13.1793 88.0579 13.213 88.1758 13.2804C88.2966 13.3478 88.3907 13.4503 88.4581 13.5879C88.5283 13.7227 88.5634 13.8927 88.5634 14.0977V15.3152C88.5634 15.3433 88.5536 15.3672 88.5339 15.3868C88.5171 15.4037 88.4946 15.4121 88.4665 15.4121H88.2685C88.2404 15.4121 88.2166 15.4037 88.1969 15.3868C88.18 15.3672 88.1716 15.3433 88.1716 15.3152V14.1356C88.1716 13.9783 88.1491 13.8547 88.1042 13.7649C88.0593 13.675 87.9989 13.6118 87.9231 13.5753C87.8472 13.5388 87.7644 13.5205 87.6745 13.5205C87.6015 13.5205 87.527 13.5388 87.4512 13.5753C87.3754 13.6118 87.3122 13.675 87.2616 13.7649C87.2139 13.8547 87.19 13.9783 87.19 14.1356V15.3152C87.19 15.3433 87.1802 15.3672 87.1605 15.3868C87.1437 15.4037 87.1212 15.4121 87.0931 15.4121H86.8951C86.867 15.4121 86.8431 15.4037 86.8235 15.3868C86.8066 15.3672 86.7982 15.3433 86.7982 15.3152V14.1356C86.7982 13.9783 86.7743 13.8547 86.7266 13.7649C86.6788 13.675 86.6171 13.6118 86.5412 13.5753C86.4654 13.5388 86.3853 13.5205 86.3011 13.5205C86.2281 13.5205 86.1536 13.5388 86.0778 13.5753C86.002 13.6118 85.9388 13.675 85.8882 13.7649C85.8405 13.8547 85.8166 13.9769 85.8166 14.1314V15.3152C85.8166 15.3433 85.8068 15.3672 85.7871 15.3868C85.7703 15.4037 85.7478 15.4121 85.7197 15.4121H85.5175ZM89.2614 15.4121C89.2333 15.4121 89.2094 15.4037 89.1898 15.3868C89.1729 15.3672 89.1645 15.3433 89.1645 15.3152V13.3183C89.1645 13.2902 89.1729 13.2677 89.1898 13.2509C89.2094 13.2312 89.2333 13.2214 89.2614 13.2214H89.451C89.479 13.2214 89.5015 13.2312 89.5184 13.2509C89.538 13.2677 89.5479 13.2902 89.5479 13.3183V13.4657C89.6125 13.3787 89.6939 13.3099 89.7922 13.2593C89.8905 13.206 90.0085 13.1793 90.1461 13.1793C90.4635 13.1765 90.6881 13.3057 90.8201 13.5669C90.8847 13.4489 90.9788 13.3548 91.1024 13.2846C91.226 13.2144 91.3664 13.1793 91.5237 13.1793C91.6698 13.1793 91.8018 13.213 91.9197 13.2804C92.0405 13.3478 92.1346 13.4503 92.202 13.5879C92.2722 13.7227 92.3073 13.8927 92.3073 14.0977V15.3152C92.3073 15.3433 92.2975 15.3672 92.2778 15.3868C92.261 15.4037 92.2385 15.4121 92.2104 15.4121H92.0124C91.9843 15.4121 91.9604 15.4037 91.9408 15.3868C91.9239 15.3672 91.9155 15.3433 91.9155 15.3152V14.1356C91.9155 13.9783 91.893 13.8547 91.8481 13.7649C91.8032 13.675 91.7428 13.6118 91.6669 13.5753C91.5911 13.5388 91.5083 13.5205 91.4184 13.5205C91.3454 13.5205 91.2709 13.5388 91.1951 13.5753C91.1193 13.6118 91.0561 13.675 91.0055 13.7649C90.9578 13.8547 90.9339 13.9783 90.9339 14.1356V15.3152C90.9339 15.3433 90.9241 15.3672 90.9044 15.3868C90.8876 15.4037 90.8651 15.4121 90.837 15.4121H90.639C90.6109 15.4121 90.587 15.4037 90.5674 15.3868C90.5505 15.3672 90.5421 15.3433 90.5421 15.3152V14.1356C90.5421 13.9783 90.5182 13.8547 90.4705 13.7649C90.4227 13.675 90.3609 13.6118 90.2851 13.5753C90.2093 13.5388 90.1292 13.5205 90.045 13.5205C89.972 13.5205 89.8975 13.5388 89.8217 13.5753C89.7459 13.6118 89.6827 13.675 89.6321 13.7649C89.5844 13.8547 89.5605 13.9769 89.5605 14.1314V15.3152C89.5605 15.3433 89.5507 15.3672 89.531 15.3868C89.5141 15.4037 89.4917 15.4121 89.4636 15.4121H89.2614ZM93.5192 15.4542C93.3788 15.4542 93.251 15.4262 93.1359 15.37C93.0207 15.3138 92.928 15.238 92.8578 15.1425C92.7876 15.047 92.7525 14.9389 92.7525 14.8181C92.7525 14.6243 92.8311 14.4698 92.9884 14.3547C93.1457 14.2395 93.3507 14.1637 93.6035 14.1272L94.2312 14.0387V13.9165C94.2312 13.7817 94.1919 13.6764 94.1133 13.6006C94.0374 13.5247 93.9124 13.4868 93.7383 13.4868C93.6119 13.4868 93.5094 13.5121 93.4308 13.5626C93.3549 13.6132 93.3016 13.6778 93.2707 13.7564C93.2538 13.7986 93.2243 13.8196 93.1822 13.8196H92.9926C92.9617 13.8196 92.9379 13.8112 92.921 13.7944C92.907 13.7747 92.8999 13.7522 92.8999 13.7269C92.8999 13.6848 92.9154 13.6329 92.9463 13.5711C92.98 13.5093 93.0305 13.4489 93.0979 13.3899C93.1654 13.3309 93.251 13.2818 93.3549 13.2425C93.4617 13.2003 93.5909 13.1793 93.7425 13.1793C93.911 13.1793 94.0529 13.2017 94.168 13.2467C94.2832 13.2888 94.373 13.3464 94.4376 13.4194C94.5051 13.4924 94.5528 13.5753 94.5809 13.668C94.6118 13.7607 94.6272 13.8547 94.6272 13.9502V15.3152C94.6272 15.3433 94.6174 15.3672 94.5977 15.3868C94.5809 15.4037 94.5584 15.4121 94.5303 15.4121H94.3365C94.3056 15.4121 94.2818 15.4037 94.2649 15.3868C94.2481 15.3672 94.2396 15.3433 94.2396 15.3152V15.1341C94.2031 15.1846 94.154 15.2352 94.0922 15.2857C94.0304 15.3335 93.9532 15.3742 93.8605 15.4079C93.7678 15.4388 93.654 15.4542 93.5192 15.4542ZM93.6077 15.1383C93.7229 15.1383 93.8282 15.1144 93.9237 15.0667C94.0192 15.0161 94.0936 14.9389 94.147 14.8349C94.2031 14.731 94.2312 14.6004 94.2312 14.4431V14.3252L93.7425 14.3968C93.5431 14.4249 93.3928 14.4726 93.2917 14.54C93.1906 14.6046 93.1401 14.6875 93.1401 14.7886C93.1401 14.8672 93.1625 14.9332 93.2075 14.9866C93.2552 15.0372 93.3142 15.0751 93.3844 15.1004C93.4574 15.1256 93.5319 15.1383 93.6077 15.1383ZM95.3298 15.4121C95.3017 15.4121 95.2778 15.4037 95.2581 15.3868C95.2413 15.3672 95.2329 15.3433 95.2329 15.3152V13.3225C95.2329 13.2944 95.2413 13.2706 95.2581 13.2509C95.2778 13.2312 95.3017 13.2214 95.3298 13.2214H95.5236C95.5516 13.2214 95.5755 13.2312 95.5952 13.2509C95.6148 13.2706 95.6247 13.2944 95.6247 13.3225V13.5079C95.6808 13.4124 95.7581 13.3408 95.8564 13.293C95.9547 13.2453 96.0726 13.2214 96.2103 13.2214H96.3788C96.4069 13.2214 96.4293 13.2312 96.4462 13.2509C96.463 13.2677 96.4715 13.2902 96.4715 13.3183V13.491C96.4715 13.5191 96.463 13.5416 96.4462 13.5584C96.4293 13.5753 96.4069 13.5837 96.3788 13.5837H96.126C95.9743 13.5837 95.855 13.6286 95.7679 13.7185C95.6808 13.8056 95.6373 13.925 95.6373 14.0766V15.3152C95.6373 15.3433 95.6275 15.3672 95.6078 15.3868C95.5882 15.4037 95.5643 15.4121 95.5362 15.4121H95.3298ZM97.2166 16.2126C97.1942 16.2126 97.1745 16.2041 97.1577 16.1873C97.1408 16.1704 97.1324 16.1508 97.1324 16.1283C97.1324 16.1171 97.1338 16.1058 97.1366 16.0946C97.1394 16.0834 97.145 16.0693 97.1535 16.0525L97.4778 15.2815L96.6732 13.3815C96.6591 13.3478 96.6521 13.3239 96.6521 13.3099C96.6521 13.2846 96.6605 13.2635 96.6774 13.2467C96.6942 13.2298 96.7153 13.2214 96.7406 13.2214H96.947C96.9751 13.2214 96.9976 13.2284 97.0144 13.2425C97.0313 13.2565 97.0425 13.2734 97.0481 13.293L97.6885 14.8265L98.3457 13.293C98.3541 13.2734 98.3654 13.2565 98.3794 13.2425C98.3963 13.2284 98.4201 13.2214 98.451 13.2214H98.649C98.6743 13.2214 98.6954 13.2298 98.7122 13.2467C98.7291 13.2635 98.7375 13.2832 98.7375 13.3057C98.7375 13.3197 98.7305 13.345 98.7164 13.3815L97.52 16.1409C97.5116 16.1606 97.4989 16.1775 97.4821 16.1915C97.468 16.2055 97.4455 16.2126 97.4147 16.2126H97.2166Z\"\r\n      fill=\"#AAA9A9\"\r\n    />\r\n  </svg>\r\n);\r\n","import { AddOn, ADDON_ICON } from \"../manageAddons\";\r\nimport { Billing } from \"./Downgrade\";\r\n\r\ninterface PROPS {\r\n  addonData: AddOn[];\r\n  billingData: Record<string, Billing>;\r\n  handleAddonSelect(addonKey: string): void;\r\n}\r\n\r\nfunction DowngradeStep1(props: any) {\r\n  const { addonData, billingData, handleAddonSelect }: PROPS = props;\r\n\r\n  return (\r\n    <div className=\"downgrade-body fx al-cnt fx-d-col fx-strt step-1 gap-30\">\r\n      <div className=\"downgrade-body-description step-1\">Kindly choose the  Add-Ons that you want to downgrade</div>\r\n      <div className=\"downgrade-body-content step-1 gap-20 wd-100\">\r\n        {addonData.map((addon: AddOn) => (\r\n          addon.key !== \"audienceSegments\" && addon.key !== \"dataTags\" && (\r\n            <div\r\n              key={addon.key}\r\n              className={\r\n                billingData[addon.key]?.quantity\r\n                  ? billingData[addon.key]?.selected\r\n                    ? \"downgrade-addon fx selected\"\r\n                    : \"downgrade-addon fx\"\r\n                  : \"downgrade-addon fx disabled\"\r\n              }\r\n              onClick={() => billingData[addon.key].quantity && handleAddonSelect(addon.key)}\r\n            >\r\n              <div className=\"downgrade-addon-icon flex-cnt\">\r\n                <span className=\"flex-cnt\">{ADDON_ICON[addon.key]}</span>\r\n              </div>\r\n              <div className=\"downgrade-addon-body fx jstfy-sp-btw wd-100\">\r\n                <div className=\"downgrade-addon-title\">{addon.name}</div>\r\n                <div className=\"downgrade-addon-check\">\r\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect width=\"20\" height=\"20\" rx=\"10\" fill=\"#FB5F66\" />\r\n                    <path\r\n                      d=\"M8.22883 13.6095C7.94497 13.6096 7.67274 13.4968 7.47219 13.2959L5.18461 11.0092C4.93846 10.7629 4.93846 10.3638 5.18461 10.1176C5.43083 9.87143 5.82996 9.87143 6.07618 10.1176L8.22883 12.2702L13.9238 6.57523C14.17 6.32909 14.5692 6.32909 14.8154 6.57523C15.0615 6.82146 15.0615 7.22059 14.8154 7.46681L8.98547 13.2959C8.78492 13.4968 8.51269 13.6096 8.22883 13.6095Z\"\r\n                      fill=\"white\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DowngradeStep1;\r\n","import { Fragment } from \"react\";\r\nimport { AddOn, ADDON_ICON } from \"../manageAddons\";\r\nimport { Billing, Total } from \"./Downgrade\";\r\nimport moment from \"moment\";\r\n\r\ninterface PROPS {\r\n  addonData: AddOn[];\r\n  nextTerm:any;\r\n  billingData: Record<string, Billing>;\r\n  totalData: Total;\r\n  planInterval: \"monthly\" | \"yearly\";\r\n  handleQuantity(addonKey: string, action: \"increase\" | \"decrease\"): void;\r\n}\r\n\r\nfunction DowngradeStep2(props: PROPS) {\r\n  const { addonData, billingData, totalData, planInterval, handleQuantity,nextTerm } = props;\r\n  return (\r\n    <div className=\"downgrade-body fx al-cnt fx-d-col fx-strt step-1 gap-30 step-2 scroll-small-screen\">\r\n      <div className=\"downgrade-body-description step-2 \">Kindly adjust the quantity of  Add-Ons you wish to have after the downgrade</div>\r\n      <div className=\"downgrade-body-content step-2 fx jstfy-sp-btw gap-40\">\r\n        <div id=\"left\" className=\"downgrade-left-column fx fx-d-col gap-15\">\r\n          {addonData.reduce((pre: any, addon: AddOn) => {\r\n            if (billingData[addon.key].selected)\r\n              pre.push(\r\n                <div className=\"downgrade-addon-card fx\" key={addon.key}>\r\n                  <div className=\"downgrade-card-icon flex-cnt\">{ADDON_ICON[addon.key]}</div>\r\n                  <div className=\"downgrade-card-body fx al-cnt jstfy-sp-btw\">\r\n                    <div className=\"downgrade-card-content fx fx-d-col fx-strt\">\r\n                      <div className=\"downgrade-card-title\">{addon.name}</div>\r\n                      <div className=\"downgrade-card-price fx gap-5\">\r\n                        ${addon.price[planInterval]}\r\n                        <span>\r\n                          /{addon.key === \"user\" ? \"user\" : addon.step[planInterval]}\r\n                          {addon.key == \"user\"}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"downgrade-card-quntity fx fx-d-col al-fx-end fx-strt gap-8\">\r\n                      <div className=\"downgrade-card-current\">\r\n                        Current plan:\r\n                        {addon.key === \"branding\"\r\n                          ? billingData[addon.key].quantity\r\n                            ? \"Enabled\"\r\n                            : \"Disabled\"\r\n                          : billingData[addon.key].quantity * addon.step[planInterval]}\r\n                      </div>\r\n                      <div className=\"downgrade-card-input fx al-cnt jstfy-sp-btw\">\r\n                        {addon.key === \"branding\" ? (\r\n                          <Fragment>\r\n                            <button\r\n                              className=\"downgrade-card-no\"\r\n                              onClick={() => handleQuantity(addon.key, !billingData[addon.key].downgradedQuantity ? \"increase\" : \"decrease\")}\r\n                            >\r\n                              {!billingData[addon.key].downgradedQuantity ? \"Add\" : \"Remove\"}\r\n                            </button>\r\n                          </Fragment>\r\n                        ) : (\r\n                          <Fragment>\r\n                            <button className={billingData[addon.key].downgradedQuantity === 0 ? \"downgrade-card-decrease disable\" : \"downgrade-card-decrease\"}  onClick={() => handleQuantity(addon.key, \"decrease\")}>\r\n                              -\r\n                            </button>\r\n                            <div className=\"downgrade-card-value\">\r\n                              {billingData[addon.key].downgradedQuantity * addon.step[planInterval]}\r\n                            </div>\r\n                            <button className={billingData[addon.key].downgradedQuantity === billingData[addon.key].quantity ? \"downgrade-card-increase disable\" : \"downgrade-card-increase\"} onClick={() => handleQuantity(addon.key, \"increase\")}>\r\n                              +\r\n                            </button>\r\n                          </Fragment>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            return pre;\r\n          }, [])}\r\n        </div>\r\n        <hr />\r\n        <div className=\"downgrade-right-column fx fx-d-col jstfy-sp-btw\">\r\n          <div className=\"downgrade-right-header fx al-cnt\">\r\n            <p>Updated add-ons billing summary</p>\r\n          \r\n          </div>\r\n          <div>\r\n            <div className=\"downgrade-right-body p-relative fx fx-d-col\">\r\n              <div className=\"downgrade-right-table-head\">\r\n                <div className=\"downgrade-right-table-row responsive__border__bottom\">\r\n                  <div className=\"downgrade-right-table-cell\">Name</div>\r\n                  <div className=\"downgrade-right-table-cell\">Quantity</div>\r\n                  <div className=\"downgrade-right-table-cell\">Total</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"downgrade-right-table-body\">\r\n                {addonData.reduce((pre: any, addon: AddOn) => {\r\n                  if (billingData[addon.key].selected)\r\n                    pre.push(\r\n                      <div className=\"downgrade-right-table-row\" key={addon.key}>\r\n                        <div className=\"downgrade-right-table-cell downgrade__name__responsive\">\r\n                          {addon.name}\r\n                          <div className=\"downgrade-card-current hide__current__plan\">\r\n                        Current plan:\r\n                        {addon.key === \"branding\"\r\n                          ? billingData[addon.key].quantity\r\n                            ? \"Enabled\"\r\n                            : \"Disabled\"\r\n                          : billingData[addon.key].quantity * addon.step[planInterval]}\r\n                      </div>\r\n                          </div>\r\n                        <div className=\"downgrade-right-table-cell qunatity__responsive__downgrade\">\r\n                          {addon.step[planInterval] * billingData[addon.key].downgradedQuantity}\r\n                        </div>\r\n                        <div className=\"downgrade-card-quntity fx fx-d-col al-fx-end fx-strt gap-8 downgrade-card-quntity__responsive\">\r\n                      <div className=\"downgrade-card-input fx al-cnt jstfy-sp-btw\">\r\n                        {addon.key === \"branding\" ? (\r\n                          <Fragment>\r\n                            <button\r\n                              className=\"downgrade-card-no\"\r\n                              onClick={() => handleQuantity(addon.key, !billingData[addon.key].downgradedQuantity ? \"increase\" : \"decrease\")}\r\n                            >\r\n                              {!billingData[addon.key].downgradedQuantity ? \"Add\" : \"Remove\"}\r\n                            </button>\r\n                          </Fragment>\r\n                        ) : (\r\n                          <Fragment>\r\n                            <button className=\"downgrade-card-decrease\" onClick={() => handleQuantity(addon.key, \"decrease\")}>\r\n                              -\r\n                            </button>\r\n                            <div className=\"downgrade-card-value\">\r\n                              {billingData[addon.key].downgradedQuantity * addon.step[planInterval]}\r\n                            </div>\r\n                            <button className=\"downgrade-card-increase\" onClick={() => handleQuantity(addon.key, \"increase\")}>\r\n                              +\r\n                            </button>\r\n                          </Fragment>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                        <div className=\"downgrade-right-table-cell responsive__bold\">\r\n                          ${addon.price[planInterval] * billingData[addon.key].downgradedQuantity}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  return pre;\r\n                }, [])}\r\n              </div>\r\n              <div className=\"blurbox-downgrade\"></div>\r\n            </div>\r\n            <div className=\"downgrade-right-footer fx fx-d-col p-relative footer__responsive__container\">\r\n              <div className=\"downgrade-right-amount\">\r\n                <div className=\"downgrade-right-table-row footer__responsive\">\r\n                  <div className=\"downgrade-right-table-cell\">Current amount</div>\r\n                  <div className=\"downgrade-right-table-cell width__mobile\">${totalData.currentTotal}</div>\r\n                </div>\r\n                <div className=\"downgrade-right-table-row footer__responsive\">\r\n                  <div className=\"downgrade-right-table-cell\">Downgraded amount</div>\r\n                  <div className=\"downgrade-right-table-cell red minus width__mobile\">${totalData.currentTotal - totalData.updatedTotal}</div>\r\n                </div>\r\n                <div className=\"downgrade-right-table-row footer__responsive\">\r\n                  <div className=\"downgrade-right-table-cell\">Updated amount</div>\r\n                  <div className=\"downgrade-right-table-cell width__mobile\">${totalData.updatedTotal}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"downgrade-right-total\">\r\n                <div className=\"downgrade-right-table-row footer__responsive\">\r\n                  <div className=\"downgrade-right-table-cell grand-total fx fx-strt al-cnt\">\r\n                    <p>\r\n                      <span>Grand Total </span>(All  Add-Ons)\r\n                    </p>\r\n                    <div className=\"invoice-tp\">\r\n                      <svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <g clipPath=\"url(#clip0_11357_16482)\">\r\n                          <path\r\n                            d=\"M6.5 0C5.21442 0 3.95772 0.381218 2.8888 1.09545C1.81988 1.80968 0.986755 2.82484 0.494786 4.01256C0.00281636 5.20028 -0.125905 6.50721 0.124899 7.76809C0.375703 9.02896 0.994767 10.1872 1.90381 11.0962C2.81285 12.0052 3.97104 12.6243 5.23192 12.8751C6.49279 13.1259 7.79973 12.9972 8.98744 12.5052C10.1752 12.0132 11.1903 11.1801 11.9046 10.1112C12.6188 9.04229 13 7.78558 13 6.5C12.9981 4.77667 12.3127 3.12445 11.0941 1.90586C9.87556 0.687282 8.22334 0.00186392 6.5 0V0ZM6.5 11.375C5.53582 11.375 4.59329 11.0891 3.7916 10.5534C2.98991 10.0177 2.36507 9.25637 1.99609 8.36558C1.62711 7.47479 1.53057 6.49459 1.71867 5.54893C1.90678 4.60328 2.37108 3.73464 3.05286 3.05285C3.73464 2.37107 4.60328 1.90677 5.54894 1.71867C6.49459 1.53057 7.47479 1.62711 8.36558 1.99609C9.25637 2.36506 10.0177 2.98991 10.5534 3.7916C11.0891 4.59329 11.375 5.53582 11.375 6.5C11.3734 7.79245 10.8593 9.03151 9.94541 9.94541C9.03151 10.8593 7.79245 11.3734 6.5 11.375Z\"\r\n                            fill=\"black\"\r\n                            fillOpacity=\"0.5\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M6.25366 5.17018H6.09116C5.87828 5.16495 5.67111 5.23943 5.51029 5.37901C5.34946 5.5186 5.24657 5.71322 5.22179 5.92472C5.20762 6.13631 5.27673 6.34505 5.41437 6.50638C5.55201 6.6677 5.74727 6.76882 5.95845 6.78814V9.30689C5.95845 9.52238 6.04406 9.72904 6.19643 9.88141C6.3488 10.0338 6.55547 10.1194 6.77095 10.1194C6.98644 10.1194 7.19311 10.0338 7.34548 9.88141C7.49785 9.72904 7.58345 9.52238 7.58345 9.30689V6.49997C7.58345 6.14729 7.44335 5.80905 7.19397 5.55967C6.94458 5.31028 6.60635 5.17018 6.25366 5.17018Z\"\r\n                            fill=\"black\"\r\n                            fillOpacity=\"0.5\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M6.40802 4.58556C6.59185 4.58556 6.77156 4.53105 6.92442 4.42891C7.07727 4.32678 7.19641 4.18161 7.26676 4.01177C7.33711 3.84192 7.35552 3.65503 7.31966 3.47473C7.28379 3.29442 7.19526 3.1288 7.06527 2.99881C6.93528 2.86881 6.76966 2.78029 6.58935 2.74442C6.40905 2.70856 6.22216 2.72697 6.05231 2.79732C5.88247 2.86767 5.7373 2.9868 5.63516 3.13966C5.53303 3.29252 5.47852 3.47223 5.47852 3.65606C5.47844 3.77815 5.50244 3.89905 5.54912 4.01185C5.59581 4.12466 5.66428 4.22715 5.7506 4.31348C5.83693 4.3998 5.93942 4.46827 6.05223 4.51495C6.16503 4.56164 6.28593 4.58563 6.40802 4.58556Z\"\r\n                            fill=\"black\"\r\n                            fillOpacity=\"0.5\"\r\n                          ></path>\r\n                        </g>\r\n                        <defs>\r\n                          <clipPath id=\"clip0_11357_16482\">\r\n                            <rect width=\"13\" height=\"13\" fill=\"white\"></rect>\r\n                          </clipPath>\r\n                        </defs>\r\n                      </svg>\r\n                      <div className=\"confirm-total-tooltip\">\r\n                        Full charges for these  Add-Ons will be added to your next bill on <strong>{moment(nextTerm).format('MMMM Do YYYY') }</strong>.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"downgrade-right-table-cell red width__mobile ft-500\">${totalData.allTotal}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DowngradeStep2;\r\n","interface PROPS {\r\n  downgradeReason: string;\r\n  handleDowngradeReason(value: string): void;\r\n}\r\n\r\nfunction DowngradeStep3(props: any) {\r\n  const { downgradeReason, handleDowngradeReason }: PROPS = props;\r\n\r\n  return (\r\n    <div className=\"downgrade-body fx al-cnt fx-d-col fx-strt step-1 gap-30 step-3\">\r\n      <div className=\"downgrade-body-description step-3 flex-cnt fx-d-col\">\r\n        <div className=\"downgrade-description-title\">Why would you like to downgrade your  Add-Ons?</div>\r\n        <div className=\"downgrade-description-subtitle\">We want to understand your needs better</div>\r\n      </div>\r\n      <div className=\"downgrade-body-content step-3 new-scrollbar\">\r\n        <textarea placeholder=\"Type here...\" value={downgradeReason} onChange={(event) => handleDowngradeReason(event.target.value)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DowngradeStep3;\r\n","import {\r\n  Fragment,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userSlice } from \"../../../redux/User\";\r\nimport { axiosPost } from \"../../../services/axiosService\";\r\nimport \"../../../styles/downgrade.css\";\r\nimport environment from \"../../../constants/Environment\";\r\nimport DowngradeStep1 from \"./DowngradeStep1\";\r\nimport DowngradeStep2 from \"./DowngradeStep2\";\r\nimport DowngradeStep3 from \"./DowngradeStep3\";\r\nimport { AddOn } from \"../manageAddons\";\r\ninterface PROPS {\r\n  addonData: AddOn[];\r\n  nextTerm: any;\r\n  usageData: any;\r\n  downgradeData: any[];\r\n  previousAddons: any[];\r\n  planInterval: \"monthly\" | \"yearly\";\r\n  handleModalClose: () => void;\r\n  handleReload: Dispatch<SetStateAction<boolean>>;\r\n}\r\nexport interface Billing {\r\n  selected: boolean;\r\n  quantity: number;\r\n  downgradedQuantity: number;\r\n}\r\n\r\nexport interface Total {\r\n  currentTotal: number;\r\n  updatedTotal: number;\r\n  allTotal: number;\r\n}\r\n\r\nconst STEPS =\r\n  window.innerWidth < 990\r\n    ? [\"Select Add-ons\", \"Adjust Add-ons\", \"Why Downgrade\"]\r\n    : ([\r\n        \"Select your  Add-Ons\",\r\n        \"Adjust  Add-Ons\",\r\n        \"Reason of Downgrade\",\r\n      ] as const);\r\n\r\nconst totalSteps = STEPS.length;\r\n// type StepNnumber = (Array.from({length: STEPS.length}, (_, i) => i + 1)).join(\" | \");\r\n\r\nfunction Downgrade(props: PROPS) {\r\n  const {\r\n    addonData,\r\n    usageData,\r\n    downgradeData,\r\n    previousAddons,\r\n    planInterval,\r\n    handleModalClose,\r\n    handleReload,\r\n    nextTerm,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const isAI = environment().isAI;\r\n  const [stepNumber, setStepNumber] = useState<number>(1);\r\n  const [billingData, setBillingData] = useState<Record<string, Billing>>({});\r\n  const [downgradeReason, setDowngradeReason] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const billingData: Record<string, Billing> = {};\r\n    addonData.forEach((addon: AddOn) => {\r\n      const data: any = isAI\r\n        ? usageData.ai_addons[addon.key] ?? {}\r\n        : usageData.omniaddons[addon.key] ?? {};\r\n      const quantity: number =\r\n        addon.key === \"branding\" ? Number(data) : data.quantity;\r\n\r\n      const downgradedQuantity: number = downgradeData.reduce(\r\n        (total: number, downgrade: any) =>\r\n          total +\r\n          downgrade.omniaddons.reduce(\r\n            (subtotal: number, item: any) =>\r\n              item.addon_code === addon.addon_code[planInterval]\r\n                ? subtotal + item.quantity\r\n                : subtotal,\r\n            0,\r\n          ),\r\n        0,\r\n      );\r\n\r\n      billingData[addon.key] = {\r\n        selected: false,\r\n        quantity: Math.max(quantity - downgradedQuantity, 0),\r\n        downgradedQuantity: Math.max(quantity - downgradedQuantity, 0),\r\n      };\r\n    });\r\n\r\n    setBillingData(billingData);\r\n  }, []);\r\n\r\n  const totalData: Total = useMemo(\r\n    () =>\r\n      addonData.reduce(\r\n        (pre: Total, addon: AddOn) => {\r\n          const { key, price } = addon;\r\n          const { selected, quantity, downgradedQuantity }: Billing =\r\n            billingData[key] ?? {};\r\n          return {\r\n            currentTotal:\r\n              pre.currentTotal +\r\n              (selected ? quantity * price[planInterval] : 0),\r\n            updatedTotal:\r\n              pre.updatedTotal +\r\n              (selected ? downgradedQuantity * price[planInterval] : 0),\r\n            allTotal: pre.allTotal + downgradedQuantity * price[planInterval],\r\n          };\r\n        },\r\n        { currentTotal: 0, updatedTotal: 0, allTotal: 0 },\r\n      ),\r\n    [billingData],\r\n  );\r\n\r\n  const enableNext: boolean = useMemo(() => {\r\n    if (stepNumber === 1)\r\n      return Object.keys(billingData).some(\r\n        (key: string) => billingData[key].quantity && billingData[key].selected,\r\n      );\r\n    if (stepNumber === 2)\r\n      return Object.keys(billingData).some(\r\n        (key: string) =>\r\n          billingData[key].downgradedQuantity < billingData[key].quantity,\r\n      );\r\n    return false;\r\n  }, [stepNumber, billingData]);\r\n\r\n  const handleAddonSelect = (addonKey: string) => {\r\n    setBillingData({\r\n      ...billingData,\r\n      [addonKey]: {\r\n        ...billingData[addonKey],\r\n        selected: !billingData[addonKey].selected,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleQuantity = (\r\n    addonKey: string,\r\n    action: \"increase\" | \"decrease\",\r\n  ) => {\r\n    const quantity: number = action === \"increase\" ? 1 : -1;\r\n    const data: Billing = billingData[addonKey];\r\n\r\n    setBillingData({\r\n      ...billingData,\r\n      [addonKey]: {\r\n        ...data,\r\n        downgradedQuantity: Math.min(\r\n          Math.max(data.downgradedQuantity + quantity, 0),\r\n          data.quantity,\r\n        ),\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleStepChange = (direction: \"next\" | \"back\") => {\r\n    if (direction === \"next\")\r\n      setStepNumber((pre) => Math.min(++pre, totalSteps));\r\n    if (direction === \"back\") setStepNumber((pre) => Math.max(--pre, 1));\r\n  };\r\n\r\n  const applyDowngrade = async () => {\r\n    try {\r\n      if (!downgradeReason) throw Error(\"Enter your reason for downgrade\");\r\n      setLoading(true);\r\n      const addonsData: any[] = [];\r\n      const downgradeData: any[] = [];\r\n\r\n      addonData.forEach((addon: AddOn) => {\r\n        const { selected, quantity, downgradedQuantity } =\r\n          billingData[addon.key];\r\n        const { addon_code, price } = addon;\r\n\r\n        if (downgradedQuantity)\r\n          addonsData.push({\r\n            addon_code: addon_code[planInterval],\r\n            quantity: downgradedQuantity,\r\n            price: price[planInterval],\r\n          });\r\n\r\n        if (downgradedQuantity < quantity)\r\n          downgradeData.push({\r\n            addon_code: addon_code[planInterval],\r\n            quantity: quantity - downgradedQuantity,\r\n            price: price[planInterval],\r\n          });\r\n      });\r\n      previousAddons?.forEach((data) => {\r\n        downgradeData.push({\r\n          addon_code: data.addon_code,\r\n          quantity: data.quantity,\r\n          price: data.price,\r\n        });\r\n      });\r\n\r\n      console.log(downgradeData);\r\n\r\n      if (!downgradeReason) throw Error(\"No addon selected for downgrade\");\r\n      await axiosPost(\r\n        `/payments/${isAI ? \"aidowngradeAddon\" : \"downgradeAddon\"}`,\r\n        {\r\n          downgradeReason: downgradeReason,\r\n          addons: addonsData,\r\n          downgrades: downgradeData,\r\n        },\r\n      );\r\n      handleModalClose();\r\n      dispatch(\r\n        userSlice.actions.setInfoModal({\r\n          showModal: true,\r\n          modalType: \"success\",\r\n          modalTitle: \"Add-ons downgraded successfully\",\r\n          modalMessage:\r\n            \"The downgrade changes made will be reflected in your account from next billing.\",\r\n          modalButtonText: \"Go To Dashboard\",\r\n        }),\r\n      );\r\n      handleReload((pre) => !pre);\r\n    } catch (err: any) {\r\n      console.log(err);\r\n      dispatch(\r\n        userSlice.actions.setInfoModal({\r\n          showModal: true,\r\n          modalType: \"error\",\r\n          modalTitle: \"OOPS!\",\r\n          modalMessage: err.message,\r\n        }),\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"downgrade-main flex-cnt wd-100\" onClick={handleModalClose}>\r\n      <div className=\"outer-downgrade\">\r\n        <div\r\n          className=\"downgrade-container p-relative\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <div className=\"downgrade-close-btn\" onClick={handleModalClose}>\r\n            <svg\r\n              width=\"26\"\r\n              height=\"26\"\r\n              viewBox=\"0 0 26 26\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <circle cx=\"13\" cy=\"13\" r=\"13\" fill=\"white\" />\r\n              <g clipPath=\"url(#clip0_11357_16623)\">\r\n                <path\r\n                  d=\"M18 9.00714L16.9929 8L13 11.9929L9.00714 8L8 9.00714L11.9929 13L8 16.9929L9.00714 18L13 14.0071L16.9929 18L18 16.9929L14.0071 13L18 9.00714Z\"\r\n                  fill=\"#6D6D6D\"\r\n                />\r\n              </g>\r\n              <defs>\r\n                <clipPath id=\"clip0_11357_16623\">\r\n                  <rect\r\n                    width=\"10\"\r\n                    height=\"10\"\r\n                    fill=\"white\"\r\n                    transform=\"translate(8 8)\"\r\n                  />\r\n                </clipPath>\r\n              </defs>\r\n            </svg>\r\n          </div>\r\n          <div className=\"downgrade-header\">\r\n            <div className=\"downgrade-description\">\r\n              <div className=\"downgrade-title\">Downgrade Add-Ons</div>\r\n              <div className=\"downgrade-subtitle mt-10\">\r\n                Any changes made to downgrade an Add-on will not take effect\r\n                until your next billing cycle\r\n              </div>\r\n            </div>\r\n            <div className=\"downgrade-progress flex-cnt\">\r\n              {STEPS.map((step, stepIndex: number) => (\r\n                <Fragment key={stepIndex}>\r\n                  <div className=\"downgrade-progress-step fx al-cnt\">\r\n                    {stepIndex < stepNumber ? (\r\n                      <div className=\"downgrade-progress-icon p-relative flex-cnt\">\r\n                        <span>{stepIndex + 1}</span>\r\n                        <svg\r\n                          width=\"24\"\r\n                          height=\"24\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <circle\r\n                            cx=\"12\"\r\n                            cy=\"12\"\r\n                            r=\"11.5\"\r\n                            fill=\"#FB5F66\"\r\n                            stroke=\"#FB5F66\"\r\n                          />\r\n                          <circle cx=\"12\" cy=\"12\" r=\"10\" fill=\"#FF8287\" />\r\n                        </svg>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"downgrade-progress-icon p-relative flex-cnt\">\r\n                        <span className=\"inactive\">{stepIndex + 1}</span>\r\n                        <svg\r\n                          width=\"24\"\r\n                          height=\"24\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <circle\r\n                            cx=\"12\"\r\n                            cy=\"12\"\r\n                            r=\"11.5\"\r\n                            stroke=\"#999999\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeDasharray=\"3 3\"\r\n                          />\r\n                          <circle cx=\"12\" cy=\"12\" r=\"9\" fill=\"#F1F1F1\" />\r\n                        </svg>\r\n                      </div>\r\n                    )}\r\n                    <p\r\n                      style={{\r\n                        color: `${stepIndex < stepNumber ? \"#444444\" : \"#999999\"}`,\r\n                      }}\r\n                    >\r\n                      {step}\r\n                    </p>\r\n                  </div>\r\n                  {stepIndex + 1 < STEPS.length && (\r\n                    <svg\r\n                      width=\"6\"\r\n                      height=\"10\"\r\n                      viewBox=\"0 0 6 10\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M0.532695 0.627237C0.532841 0.792941 0.598784 0.951806 0.716028 1.0689L3.9127 4.26557C4.00945 4.3623 4.08621 4.47715 4.13857 4.60355C4.19094 4.72994 4.21789 4.86542 4.21789 5.00224C4.21789 5.13905 4.19094 5.27453 4.13857 5.40093C4.08621 5.52733 4.00945 5.64217 3.9127 5.7389L0.720195 8.9314C0.606346 9.04928 0.543349 9.20716 0.544774 9.37103C0.546197 9.5349 0.611928 9.69166 0.727808 9.80754C0.843688 9.92342 1.00045 9.98915 1.16432 9.99057C1.32819 9.992 1.48607 9.929 1.60394 9.81515L4.79645 6.62515C5.22571 6.19504 5.4668 5.6122 5.4668 5.00453C5.4668 4.39686 5.22571 3.81401 4.79645 3.3839L1.59978 0.185153C1.51237 0.0976884 1.40098 0.0381173 1.2797 0.0139781C1.15843 -0.0101611 1.03272 0.00221645 0.918479 0.0495446C0.804241 0.0968727 0.706608 0.177024 0.637936 0.279857C0.569264 0.38269 0.532639 0.503582 0.532695 0.627237Z\"\r\n                        fill=\"#999999\"\r\n                      />\r\n                    </svg>\r\n                  )}\r\n                </Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {stepNumber === 1 && (\r\n            <DowngradeStep1\r\n              addonData={addonData}\r\n              billingData={billingData}\r\n              handleAddonSelect={handleAddonSelect}\r\n            />\r\n          )}\r\n          {stepNumber === 2 && (\r\n            <DowngradeStep2\r\n              addonData={addonData}\r\n              billingData={billingData}\r\n              totalData={totalData}\r\n              planInterval={planInterval}\r\n              handleQuantity={handleQuantity}\r\n              nextTerm={nextTerm}\r\n            />\r\n          )}\r\n          {stepNumber === 3 && (\r\n            <DowngradeStep3\r\n              downgradeReason={downgradeReason}\r\n              handleDowngradeReason={setDowngradeReason}\r\n            />\r\n          )}\r\n          <div className=\"downgrade-footer flex-cnt gap-20\">\r\n            {stepNumber !== 1 && (\r\n              <button\r\n                className=\"downgrade-back-btn flex-cnt\"\r\n                onClick={() => handleStepChange(\"back\")}\r\n              >\r\n                Back\r\n              </button>\r\n            )}\r\n            {stepNumber !== totalSteps ? (\r\n              <button\r\n                className={\r\n                  enableNext\r\n                    ? \"downgrade-next-btn flex-cnt\"\r\n                    : \"downgrade-next-btn flex-cnt disable\"\r\n                }\r\n                onClick={() => enableNext && handleStepChange(\"next\")}\r\n              >\r\n                Next\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"downgrade-submit-btn flex-cnt\"\r\n                onClick={applyDowngrade}\r\n              >\r\n                {loading ? \"Submit...\" : \"Submit\"}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Downgrade;\r\n","import { Fragment, ReactElement, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userSlice } from \"../../redux/User\";\r\nimport moment from \"moment-timezone\";\r\nimport { axiosGet, axiosPost } from \"../../services/axiosService\";\r\nimport NoAddon, { NoAddonSmall } from \"../../assets/NoAddon\";\r\nimport SmallLoader from \"../loaders/SmallLoader\";\r\nimport environment from \"./../../constants/Environment\";\r\nimport { TabTitle } from \"../../utils/TitleFuntion\";\r\nimport { motion } from \"framer-motion\";\r\n// import { io } from \"socket.io-client\";\r\nimport { State } from \"../../redux/Types\";\r\nimport {\r\n  PushNotificationIcon,\r\n  EmailsIcon,\r\n  DataTagsIcon,\r\n  BrandingRemovalIcon,\r\n  AudienceSegmentsIcon,\r\n  ExtraUserIcon,\r\n  SMSIcon,\r\n  BotIcon,\r\n  MessageIcon,\r\n  BrandingIcon,\r\n  CreditIcon,\r\n} from \"../../assets/AddonIcon\";\r\nimport Downgrade from \"./settings/Downgrade\";\r\nimport DisableLayout from \"../../layouts/DisableLayout\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { InfoIconSvg } from \"@/assets/AiBotAssets\";\r\nimport SettingsNavbar from \"./HorizontalNavbars/SettingsNavbar\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Pagination } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\nimport { AddonModals } from \"@/pages/agent/PlanAddonModal\";\r\nimport ShowModal from \"./modals/showModal\";\r\nconst environmentData = environment();\r\nexport interface AddOn {\r\n  key: string;\r\n  name: string;\r\n  addon_code: {\r\n    monthly: string;\r\n    yearly: string;\r\n  };\r\n  price: {\r\n    monthly: number;\r\n    yearly: number;\r\n  };\r\n  step: {\r\n    monthly: number;\r\n    yearly: number;\r\n  };\r\n  addon_description: string;\r\n}\r\n\r\nexport const ADDON_ICON: Record<string, ReactElement> = {\r\n  pushNotifications: <PushNotificationIcon />,\r\n  emails: <EmailsIcon />,\r\n  dataTags: <DataTagsIcon />,\r\n  branding: environment().isAI ? <BrandingIcon /> : <BrandingRemovalIcon />,\r\n  audienceSegments: <AudienceSegmentsIcon />,\r\n  user: <ExtraUserIcon />,\r\n  sms: <SMSIcon />,\r\n  apolloCredit: <CreditIcon />,\r\n  omniCredits: <CreditIcon />,\r\n  bots: <BotIcon />,\r\n  rateLimit: <MessageIcon />,\r\n};\r\n\r\ninterface Props {\r\n  calledFromAgent?: any;\r\n  showAddonsModal?: string;\r\n  setShowAddonsModal?: React.Dispatch<React.SetStateAction<AddonModals>>;\r\n  onClose?:any;\r\n}\r\n\r\n\r\nconst ManageAddons = ({\r\n  calledFromAgent = false,\r\n  showAddonsModal = \"\",\r\n  setShowAddonsModal = () => {},\r\n  onClose\r\n}: Props) => {\r\n  \r\nconsole.log();\r\n\r\n  const isAI = environment().isAI;\r\n  const dispatch = useDispatch();\r\n  const [reload, setReload] = useState<boolean>(false);\r\n  const userEmail = useSelector((state: State) => state.user.userEmail);\r\n  const [usageData, setUsageData] = useState<any>({});\r\n  const [addOnData, setAddOnData] = useState<AddOn[]>([]);\r\n  const [downgradeData, setDowngradeData] = useState<any>([]);\r\n  const [partial, setPartial] = useState<number>(0);\r\n  const [previousAddons, setPreviousAddons] = useState<any>([]);\r\n\r\n  const [planInterval, setPlanInterval] = useState<\"monthly\" | \"yearly\">(\r\n    \"monthly\",\r\n  );\r\n  const [disable, setDisable] = useState<boolean>(false);\r\n  const [billModal, setBillModal] = useState<boolean>(false);\r\n  const [downgradeModal, setDowngradeModal] = useState<boolean>(false);\r\n  const [isEvent, setIsEvent] = useState(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [reloadState, setReloadState] = useState<boolean>(true);\r\n  const [nextTerm, setNextTerm] = useState<string>(new Date().toISOString());\r\n  const [currentDate, setCurrentDate] = useState<any>(\"\");\r\n  const router = useNavigate();\r\n  const queryParam = new URLSearchParams(location.search).get(\"hostedpage_id\");\r\n  const [upcomingPlan, setUpcomingPlan] = useState<Record<string, string>>({});\r\n  const [currentPlan, setCurrentPlan] = useState<any>();\r\n\r\n  const [fade, setFade] = useState<boolean>(false);\r\n  const [fade1, setFade1] = useState<boolean>(true);\r\n  const initialData = {\r\n    pushNotifications: 0,\r\n    emails: 0,\r\n    dataTags: 0,\r\n    branding: 0,\r\n    audienceSegments: 0,\r\n    user: 0,\r\n    sms: 0,\r\n    apolloCredit: 0,\r\n    omniCredits: 0,\r\n  };\r\n  const AiinitialData = {\r\n    bots: 0,\r\n    rateLimit: 0,\r\n    branding: 0,\r\n  };\r\n  const [quantityData, setQuantityData] = useState<Record<string, number>>(\r\n    isAI ? AiinitialData : initialData,\r\n  );\r\n\r\n  useEffect(() => {\r\n    calledFromAgent && setShowAddonsModal(\"addons\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [reload, isEvent]);\r\n\r\n  // .crisp-client .cc-tlyw[data-full-view=true] .cc-kxkl .cc-nsge .cc-imbb\r\n\r\n  useEffect(() => {\r\n    if (\r\n      addOnData.some((addon: AddOn) => quantityData[addon.key]) &&\r\n      window.innerWidth < 712\r\n    ) {\r\n      $(\r\n        \".crisp-client .cc-tlyw[data-full-view=true] .cc-kxkl .cc-nsge .cc-imbb\",\r\n      ).attr(\r\n        \"style\",\r\n        \"position: absolute !important; bottom: 88px !important; right: 0px !important\",\r\n      );\r\n    } else {\r\n      $(\r\n        \".crisp-client .cc-tlyw[data-full-view=true] .cc-kxkl .cc-nsge .cc-imbb\",\r\n      ).attr(\"style\", \"position: static !important\");\r\n    }\r\n  }, [addOnData.some((addon: AddOn) => quantityData[addon.key])]);\r\n\r\n  // useEffect(() => {\r\n  //   const socket = io(environmentData.SERVER_API_URL, {\r\n  //     reconnection: false,\r\n  //     transports: [\"websocket\"]\r\n  //   })\r\n\r\n  //   socket.on('connect', () => {\r\n  //     console.log('socket conneted')\r\n  //   })\r\n\r\n  //   socket.emit(\"addon\", { customerId: userEmail });\r\n  //   socket.on('event', (res) => {\r\n  //     setIsEvent(false)\r\n  //     dispatch(\r\n  //       userSlice.actions.setToastPopUp({\r\n  //         show: true,\r\n  //         toastType: \"success\",\r\n  //         message: `Add-Ons added successfully`,\r\n  //       })\r\n  //     );\r\n\r\n  //   })\r\n\r\n  //   return () => {\r\n  //     socket.disconnect();\r\n  //   }\r\n  // }, [isEvent])\r\n\r\n  // useEffect(() => {\r\n  //   if (queryParam && queryParam.trim().length >= 1) {\r\n  //     setIsEvent(true);\r\n  //   }\r\n  //   router(\"/settings\");\r\n  // }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const companyPromise = axiosGet(\"/users/getCompany\");\r\n      const addOnPromise = axiosGet(\r\n        `/payments/${isAI ? \"allAiAddons\" : \"allAddons\"}`,\r\n      );\r\n      const usagePromise = axiosGet(\"/payments/planDetails\");\r\n      const downgradePromise = axiosGet(\"/payments/alldowngradeAddons\");\r\n\r\n      const [companyResponse, addOnResponse, usageResponse, downgradeResponse] =\r\n        await Promise.all([\r\n          companyPromise,\r\n          addOnPromise,\r\n          usagePromise,\r\n          downgradePromise,\r\n        ]);\r\n\r\n      if (\r\n        companyResponse &&\r\n        addOnResponse &&\r\n        usageResponse &&\r\n        downgradeResponse\r\n      ) {\r\n        setReloadState(false);\r\n      }\r\n      if (isAI) {\r\n        setNextTerm(companyResponse.data.data.ai_billing?.current_term_ends_at);\r\n        setUpcomingPlan(companyResponse.data.data?.ai_upcomingPlan);\r\n        setCurrentPlan(companyResponse.data.data.ai_subscription?.plan.name);\r\n        setDisable(\r\n          companyResponse.data.data.ai_subscription?.plan.trial ||\r\n            companyResponse.data.data.ai_subscription?.plan.name === \"Free\" ||\r\n            companyResponse.data.data.ai_subscription?.plan.name ===\r\n              \"Lifetime\" ||\r\n            !!companyResponse.data.data.ai_coupon?.coupon_code,\r\n        );\r\n        setPlanInterval(\r\n          companyResponse.data.data.ai_subscription?.interval_unit === \"years\"\r\n            ? \"yearly\"\r\n            : \"monthly\",\r\n        );\r\n      } else {\r\n        setNextTerm(companyResponse.data.data.billing?.current_term_ends_at);\r\n        setUpcomingPlan(companyResponse.data.data?.upcomingPlan);\r\n        setDisable(\r\n          companyResponse.data.data.subscription?.plan.trial ||\r\n            companyResponse.data.data.subscription?.plan.name === \"Free\" ||\r\n            companyResponse.data.data.subscription?.plan.name === \"Lifetime\" ||\r\n            !!companyResponse.data.data.coupon?.coupon_code,\r\n        );\r\n        setPlanInterval(\r\n          companyResponse.data.data.subscription?.interval_unit === \"year\"\r\n            ? \"yearly\"\r\n            : \"monthly\",\r\n        );\r\n      }\r\n      setCurrentDate(companyResponse?.data?.currentTimeStamp);\r\n      setAddOnData(addOnResponse.data.data ?? []);\r\n      setUsageData(usageResponse.data.data ?? []);\r\n      setDowngradeData(downgradeResponse.data.data ?? []);\r\n      if (downgradeResponse.data.data.length) {\r\n        const omniaddonsArray = downgradeResponse.data.data\r\n          ?.filter((data) => data.omniaddons)\r\n          ?.map((data) => data.omniaddons)\r\n          .flat();\r\n        setPreviousAddons(omniaddonsArray);\r\n      }\r\n      setPartial(usageResponse.data.planPartial);\r\n    } catch (err: any) {\r\n      console.log(err);\r\n      dispatch(\r\n        userSlice.actions.setInfoModal({\r\n          showModal: true,\r\n          modalType: \"error\",\r\n          modalTitle: \"Failed!\",\r\n          modalMessage: err?.response?.data?.detailedMessage,\r\n          calledFromAgent,\r\n          setBillModal\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleQuantity = (\r\n    addonKey: string,\r\n    action: \"increase\" | \"decrease\",\r\n  ) => {\r\n    let quantity: number =\r\n      quantityData[addonKey] + (action === \"increase\" ? 1 : -1);\r\n    if (addonKey === \"branding\") quantity = action === \"increase\" ? 1 : 0;\r\n\r\n    setQuantityData({\r\n      ...quantityData,\r\n      [addonKey]: Math.max(quantity, 0),\r\n    });\r\n  };\r\n\r\n  const applyAddon = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let data: any;\r\n      if (isAI) {\r\n        data = addOnData.reduce((pre: any[], addon: AddOn) => {\r\n          let checkAddonKey;\r\n          let checkAddonQty;\r\n          checkAddonKey = Number(usageData.ai_addons[addon.key]);\r\n          checkAddonQty = usageData.ai_addons[addon.key]?.quantity;\r\n          const preQuantity: number =\r\n            addon.key === \"branding\" ? checkAddonKey : checkAddonQty ?? 0;\r\n          const quantity: number = preQuantity + quantityData[addon.key];\r\n          if (quantity)\r\n            pre.push({\r\n              addon_code: addon.addon_code[planInterval],\r\n              quantity,\r\n            });\r\n          return pre;\r\n        }, []);\r\n      } else {\r\n        data = addOnData.reduce((pre: any[], addon: AddOn) => {\r\n          let checkAddonKey;\r\n          let checkAddonQty;\r\n          checkAddonKey = Number(usageData.omniaddons[addon.key]);\r\n          checkAddonQty = usageData.omniaddons[addon.key]?.quantity;\r\n          const preQuantity: number =\r\n            addon.key === \"branding\" ? checkAddonKey : checkAddonQty ?? 0;\r\n          const quantity: number = quantityData[addon.key]; // Only use current selected data\r\n\r\n          if (quantity) {\r\n            pre.push({\r\n              addon_code: addon.addon_code[planInterval],\r\n              quantity,\r\n            });\r\n          }\r\n\r\n          return pre;\r\n        }, []);\r\n      }\r\n\r\n      let response: any;\r\n      if (isAI) {\r\n        response = await axiosPost(\"/payments/aiaddon\", { addons: data });\r\n        window.location.assign(response.data.url);\r\n      } else {\r\n        response = await axiosPost(\"/payments/addon\", { addons: data });\r\n        if (response) {\r\n          dispatch(\r\n            userSlice.actions.setInfoModal({\r\n              showModal: true,\r\n              modalType: \"success\",\r\n              modalTitle: \"Addon successfully added!\",\r\n              modalMessage:\r\n                \"Your addon will be aligned with your current billing cycle. \",\r\n              modalButtonText: \"Continue\",\r\n              calledFromAgent   \r\n                  }),\r\n          );\r\n          setBillModal(false);\r\n          onClose()\r\n        }\r\n      }\r\n    } catch (err: any) {\r\n      setLoading(false);\r\n      setBillModal(false);\r\n      dispatch(\r\n        userSlice.actions.setInfoModal({\r\n          showModal: true,\r\n          modalType: \"error\",\r\n          modalTitle: \"Failed!\",\r\n          modalMessage: err.response.data.detailedMessage,\r\n        }),\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    \r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* {isEvent ? (<SmallLoader />) : ( */}\r\n  <motion.div\r\n        className={`api-container transition-group settings-container ${disable ? \"p-relative\" : \"\"}`}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 1 }}\r\n      >\r\n        {downgradeModal && (\r\n          <Downgrade\r\n            addonData={addOnData}\r\n            usageData={usageData}\r\n            downgradeData={downgradeData}\r\n            previousAddons={previousAddons}\r\n            planInterval={planInterval}\r\n            nextTerm={nextTerm}\r\n            handleModalClose={() => {\r\n              setDowngradeModal(false);\r\n              setShowAddonsModal(\"addons\");\r\n            }}\r\n            handleReload={setReload}\r\n          />\r\n        )}\r\n        {!calledFromAgent && <SettingsNavbar title={\"Manage Add-Ons\"} />}\r\n        {disable && (\r\n          <span\r\n            className={`pending plan-xk ${disable ? \"addon-disable-pending\" : \"\"}`}\r\n          >\r\n            <svg\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 16 16\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                clipRule=\"evenodd\"\r\n                d=\"M9.69398 1.73161C9.54058 1.41217 9.30005 1.14256 9.00011 0.953859C8.70016 0.765158 8.35301 0.665039 7.99864 0.665039C7.64428 0.665039 7.29712 0.765158 6.99718 0.953859C6.69724 1.14256 6.45671 1.41217 6.30331 1.73161L0.892645 12.3749C0.245312 13.6456 1.06331 15.3329 2.58731 15.3329H13.4093C14.934 15.3329 15.7506 13.6463 15.1046 12.3749L9.69398 1.73161ZM7.99864 5.33294C8.17546 5.33294 8.34503 5.40318 8.47005 5.52821C8.59507 5.65323 8.66531 5.8228 8.66531 5.99961V9.33294C8.66531 9.50975 8.59507 9.67932 8.47005 9.80435C8.34503 9.92937 8.17546 9.99961 7.99864 9.99961C7.82183 9.99961 7.65226 9.92937 7.52724 9.80435C7.40222 9.67932 7.33198 9.50975 7.33198 9.33294V5.99961C7.33198 5.8228 7.40222 5.65323 7.52724 5.52821C7.65226 5.40318 7.82183 5.33294 7.99864 5.33294ZM7.99864 10.9996C8.17546 10.9996 8.34503 11.0698 8.47005 11.1949C8.59507 11.3199 8.66531 11.4895 8.66531 11.6663V11.9996C8.66531 12.1764 8.59507 12.346 8.47005 12.471C8.34503 12.596 8.17546 12.6663 7.99864 12.6663C7.82183 12.6663 7.65226 12.596 7.52724 12.471C7.40222 12.346 7.33198 12.1764 7.33198 11.9996V11.6663C7.33198 11.4895 7.40222 11.3199 7.52724 11.1949C7.65226 11.0698 7.82183 10.9996 7.99864 10.9996Z\"\r\n                fill=\"white\"\r\n              />\r\n            </svg>\r\n            Upgrade to Plus Plan or Enterprise Plan to use add-ons{\" \"}\r\n            <span\r\n              className=\"cursor-pointer font-medium underline\"\r\n              onClick={() => {\r\n                dispatch(userSlice.actions.setSettings(2));\r\n                TabTitle(\" | Pricing\");\r\n              }}\r\n            >\r\n              Upgrade Now\r\n            </span>\r\n          </span>\r\n        )}\r\n        {(calledFromAgent ? showAddonsModal !== \"downgrade\" : 1) && (\r\n          <DisableLayout disable={disable} grayScale={1}>\r\n            <div\r\n              className={`settings_wrapper mt-84 ${disable ? \"addon-disable-wrapper\" : \"\"}`}\r\n            >\r\n              {(calledFromAgent ? !billModal : 1) && (\r\n                <>\r\n                  <h1 className=\"none\">Manage your Add-Ons</h1>\r\n                  {reloadState ? (\r\n                    <SmallLoader />\r\n                  ) : (\r\n                    <h3 className=\"addon-header settings_heading mb-15 fx al-cnt jstfy-sp-btw\">\r\n                      <p className=\"wd-100 settings_heading\">\r\n                        Current Plan Add-on Details\r\n                      </p>\r\n                      <DisableLayout\r\n                        disable={\r\n                          isAI\r\n                            ? Object.keys({ ...usageData.ai_addons }).every(\r\n                                (key: string) =>\r\n                                  key === \"branding\"\r\n                                    ? !usageData.ai_addons[key]\r\n                                    : !usageData.ai_addons[key]?.amount,\r\n                              )\r\n                            : Object.keys({ ...usageData.omniaddons }).every(\r\n                                (key: string) =>\r\n                                  key === \"branding\"\r\n                                    ? !usageData.omniaddons[key]\r\n                                    : !usageData.omniaddons[key]?.amount,\r\n                              )\r\n                        }\r\n                        grayScale={1}\r\n                      >\r\n                        <span\r\n                          onClick={() => {\r\n                            setDowngradeModal(true);\r\n                            setShowAddonsModal(\"downgrade\");\r\n                          }}\r\n                          className=\"jstfy-end\"\r\n                        >\r\n                          <svg\r\n                            width=\"17\"\r\n                            height=\"17\"\r\n                            viewBox=\"0 0 17 17\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                          >\r\n                            <path\r\n                              d=\"M8.5 0.78125C4.24402 0.78125 0.78125 4.24402 0.78125 8.5C0.78125 12.756 4.24402 16.2188 8.5 16.2188C12.756 16.2188 16.2188 12.756 16.2188 8.5C16.2188 4.24402 12.756 0.78125 8.5 0.78125ZM8.5 1.96875C12.1135 1.96875 15.0312 4.88648 15.0312 8.5C15.0312 12.1135 12.1135 15.0312 8.5 15.0312C4.88648 15.0312 1.96875 12.1135 1.96875 8.5C1.96875 4.88648 4.88648 1.96875 8.5 1.96875ZM7.90625 4.34375V10.4482L5.53125 8.07324L4.69629 8.92676L8.5 12.7305L12.3037 8.92676L11.4688 8.07324L9.09375 10.4482V4.34375H7.90625Z\"\r\n                              fill=\"#FB5F66\"\r\n                            />\r\n                          </svg>\r\n                          Downgrade Add-Ons\r\n                        </span>\r\n                      </DisableLayout>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {!reloadState &&\r\n                  (isAI\r\n                    ? Object.keys({ ...usageData.ai_addons }).every(\r\n                        (key: string) =>\r\n                          key === \"branding\"\r\n                            ? !usageData.ai_addons[key]\r\n                            : !usageData.ai_addons[key]?.amount,\r\n                      )\r\n                    : Object.keys({ ...usageData.omniaddons }).every(\r\n                        (key: string) =>\r\n                          key === \"branding\"\r\n                            ? !usageData.omniaddons[key]\r\n                            : !usageData.omniaddons[key]?.amount,\r\n                      )) ? (\r\n                    <div className=\"noaddon-found al-cnt fx jstfy-cnt\">\r\n                      <img\r\n                        src=\"https://dlvkyia8i4zmz.cloudfront.net/9X2cgKwWTC9IyWqkaPML_Group_13944.svg\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"addons-current\">\r\n                      {isAI ? (\r\n                        <>\r\n                          {addOnData.map(\r\n                            (addon: AddOn, addonIndex: number) =>\r\n                              !!(addon.key === \"branding\"\r\n                                ? usageData.ai_addons[addon.key]\r\n                                : usageData.ai_addons[addon.key]?.amount) && (\r\n                                <div className=\"addon-list\" key={addonIndex}>\r\n                                  <div className=\"addon_head\">\r\n                                    {ADDON_ICON[addon.key]}\r\n                                    <h1>\r\n                                      {addon.name}\r\n                                      {addon.name === \"Push Notification\" &&\r\n                                        \"s\"}\r\n                                    </h1>\r\n                                  </div>\r\n                                  <div className=\"addon-btm\">\r\n                                    <div className=\"fx al-cnt jstfy-sp-btw\">\r\n                                      <p>Usage:</p>\r\n                                      {addon.key === \"branding\" ? (\r\n                                        <span>\r\n                                          {usageData.ai_addons[addon.key]\r\n                                            ? \"Enabled\"\r\n                                            : \"Disabled\"}\r\n                                        </span>\r\n                                      ) : (\r\n                                        <span>\r\n                                          <strong>\r\n                                            {Math.round(\r\n                                              Math.max(\r\n                                                usageData.ai_currentUsage[\r\n                                                  addon.key\r\n                                                ] -\r\n                                                  usageData.ai_currentLimits[\r\n                                                    addon.key\r\n                                                  ],\r\n                                                0,\r\n                                              ) * 100,\r\n                                            ) / 100}\r\n                                          </strong>\r\n                                          /\r\n                                          {\r\n                                            usageData.ai_addons[addon.key]\r\n                                              ?.amount\r\n                                          }\r\n                                        </span>\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"skills-bar\">\r\n                                      <div className=\"bar\">\r\n                                        <div className=\"progress-line\">\r\n                                          {addon.key === \"branding\" ? (\r\n                                            <span\r\n                                              style={{\r\n                                                width: `${usageData.ai_addons[addon.key] ? \"100%\" : \"0%\"}`,\r\n                                              }}\r\n                                            />\r\n                                          ) : (\r\n                                            <span\r\n                                              style={{\r\n                                                width: `${Math.min(\r\n                                                  (Math.max(\r\n                                                    usageData.ai_currentUsage[\r\n                                                      addon.key\r\n                                                    ] -\r\n                                                      usageData\r\n                                                        .ai_currentLimits[\r\n                                                        addon.key\r\n                                                      ],\r\n                                                    0,\r\n                                                  ) /\r\n                                                    usageData.ai_addons[\r\n                                                      addon.key\r\n                                                    ]?.amount) *\r\n                                                    100,\r\n                                                  100,\r\n                                                )}%`,\r\n                                              }}\r\n                                            />\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ),\r\n                          )}\r\n                        </>\r\n                      ) : calledFromAgent ? (\r\n                        <>\r\n                          <div className=\"fadeout-div1\"> </div>\r\n                          <Swiper\r\n                            pagination={{\r\n                              clickable: true,\r\n                            }}\r\n                            modules={[Pagination]}\r\n                            grabCursor={true}\r\n                            slidesPerView={4}\r\n                            breakpoints={{\r\n                              1280: {\r\n                                slidesPerView: 3,\r\n                                spaceBetween: 10,\r\n                              },\r\n                              1650: {\r\n                                slidesPerView: 4,\r\n                                spaceBetween: 10,\r\n                              },\r\n                            }}\r\n                            onTransitionEnd={(swiper) => {\r\n                              if (swiper.isEnd) setFade1(false);\r\n                              else setFade1(true);\r\n                            }}\r\n                          >\r\n                            {addOnData.map(\r\n                              (addon: AddOn, addonIndex: number) =>\r\n                                !!(addon.key === \"branding\"\r\n                                  ? usageData.omniaddons[addon.key]\r\n                                  : usageData.omniaddons[addon.key]\r\n                                      ?.amount) && (\r\n                                  <SwiperSlide\r\n                                    className=\"addon-list\"\r\n                                    key={addonIndex}\r\n                                  >\r\n                                    <div className=\"addon_head\">\r\n                                      {ADDON_ICON[addon.key]}\r\n                                      <h1>\r\n                                        {addon.name}\r\n                                        {addon.name === \"Push Notification\" &&\r\n                                          \"s\"}\r\n                                      </h1>\r\n                                    </div>\r\n                                    <div className=\"addon-btm\">\r\n                                      <div className=\"fx al-cnt jstfy-sp-btw\">\r\n                                        <p>Usage</p>\r\n                                        {addon.key === \"branding\" ? (\r\n                                          <span>\r\n                                            {usageData.omniaddons[addon.key]\r\n                                              ? \"Enabled\"\r\n                                              : \"Disabled\"}\r\n                                          </span>\r\n                                        ) : (\r\n                                          <span>\r\n                                            <strong>\r\n                                              {Math.round(\r\n                                                Math.max(\r\n                                                  usageData.current_usage[\r\n                                                    addon.key\r\n                                                  ] -\r\n                                                    usageData.currentLimits[\r\n                                                      addon.key\r\n                                                    ],\r\n                                                  0,\r\n                                                ) * 100,\r\n                                              ) / 100}\r\n                                            </strong>\r\n                                            /\r\n                                            {\r\n                                              usageData.omniaddons[addon.key]\r\n                                                ?.amount\r\n                                            }\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"skills-bar\">\r\n                                        <div className=\"bar\">\r\n                                          <div className=\"progress-line\">\r\n                                            {addon.key === \"branding\" ? (\r\n                                              <span\r\n                                                style={{\r\n                                                  width: `${usageData.omniaddons[addon.key] ? \"100%\" : \"0%\"}`,\r\n                                                }}\r\n                                              />\r\n                                            ) : (\r\n                                              <span\r\n                                                style={{\r\n                                                  width: `${Math.min(\r\n                                                    (Math.max(\r\n                                                      usageData.current_usage[\r\n                                                        addon.key\r\n                                                      ] -\r\n                                                        usageData.currentLimits[\r\n                                                          addon.key\r\n                                                        ],\r\n                                                      0,\r\n                                                    ) /\r\n                                                      usageData.omniaddons[\r\n                                                        addon.key\r\n                                                      ]?.amount) *\r\n                                                      100,\r\n                                                    100,\r\n                                                  )}%`,\r\n                                                }}\r\n                                              />\r\n                                            )}\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </SwiperSlide>\r\n                                ),\r\n                            )}\r\n                          </Swiper>\r\n                          {fade1 && <div className=\"fadeout-div1 fade-2\"></div>}\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          {addOnData.map(\r\n                            (addon: AddOn, addonIndex: number) =>\r\n                              !!(addon.key === \"branding\"\r\n                                ? usageData.omniaddons[addon.key]\r\n                                : usageData.omniaddons[addon.key]?.amount) && (\r\n                                <div className=\"addon-list\" key={addonIndex}>\r\n                                  <div className=\"addon_head\">\r\n                                    {ADDON_ICON[addon.key]}\r\n                                    <h1>\r\n                                      {addon.name}\r\n                                      {addon.name === \"Push Notification\" &&\r\n                                        \"s\"}\r\n                                    </h1>\r\n                                  </div>\r\n                                  <div className=\"addon-btm\">\r\n                                    <div className=\"fx al-cnt jstfy-sp-btw\">\r\n                                      <p>Usage</p>\r\n                                      {addon.key === \"branding\" ? (\r\n                                        <span>\r\n                                          {usageData.omniaddons[addon.key]\r\n                                            ? \"Enabled\"\r\n                                            : \"Disabled\"}\r\n                                        </span>\r\n                                      ) : (\r\n                                        <span>\r\n                                          <strong>\r\n                                            {Math.round(\r\n                                              Math.max(\r\n                                                usageData.current_usage[\r\n                                                  addon.key\r\n                                                ] -\r\n                                                  usageData.currentLimits[\r\n                                                    addon.key\r\n                                                  ],\r\n                                                0,\r\n                                              ) * 100,\r\n                                            ) / 100}\r\n                                          </strong>\r\n                                          /\r\n                                          {\r\n                                            usageData.omniaddons[addon.key]\r\n                                              ?.amount\r\n                                          }\r\n                                        </span>\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"skills-bar\">\r\n                                      <div className=\"bar\">\r\n                                        <div className=\"progress-line\">\r\n                                          {addon.key === \"branding\" ? (\r\n                                            <span\r\n                                              style={{\r\n                                                width: `${usageData.omniaddons[addon.key] ? \"100%\" : \"0%\"}`,\r\n                                              }}\r\n                                            />\r\n                                          ) : (\r\n                                            <span\r\n                                              style={{\r\n                                                width: `${Math.min(\r\n                                                  (Math.max(\r\n                                                    usageData.current_usage[\r\n                                                      addon.key\r\n                                                    ] -\r\n                                                      usageData.currentLimits[\r\n                                                        addon.key\r\n                                                      ],\r\n                                                    0,\r\n                                                  ) /\r\n                                                    usageData.omniaddons[\r\n                                                      addon.key\r\n                                                    ]?.amount) *\r\n                                                    100,\r\n                                                  100,\r\n                                                )}%`,\r\n                                              }}\r\n                                            />\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ),\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {!reloadState && (\r\n                    <div className=\"buy-addons\">\r\n                      <h1>\r\n                        Buy Add-Ons{\" \"}\r\n                        <span className=\"month_tag\">{planInterval}</span>\r\n                      </h1>\r\n                      <div className=\"fx addons-display gap-20\">\r\n                        <div className=\"buy-addons-grid\">\r\n                          {addOnData.map((addon: AddOn, addonIndex: number) => (\r\n                            <>\r\n                              {addon.key !== \"pushNotifications\" && (\r\n                                <div\r\n                                  className={\r\n                                    addon.key === \"branding\" &&\r\n                                    (isAI\r\n                                      ? currentPlan === \"Professional\" ||\r\n                                        Number(usageData.ai_addons?.[addon.key])\r\n                                      : Number(\r\n                                          usageData.omniaddons?.[addon.key],\r\n                                        ))\r\n                                      ? \"buy-addon-card disable\"\r\n                                      : \"buy-addon-card\"\r\n                                  }\r\n                                  key={addonIndex}\r\n                                >\r\n                                  <div className=\"card-icon\">\r\n                                    <span>{ADDON_ICON[addon.key]}</span>\r\n                                  </div>\r\n                                  <div className=\"buy-card fx al-cnt jstfy-sp-btw\">\r\n                                    <div className=\"buy-card-inner fx al-cnt\">\r\n                                      <div className=\"addon-card-left\">\r\n                                        <h2>\r\n                                          {addon.name}\r\n                                          {addon.name === \"Push Notification\" &&\r\n                                            \"s\"}\r\n                                          <span className=\"info\">\r\n                                            <InfoIconSvg />\r\n                                            <p>{addon.addon_description} </p>\r\n                                          </span>\r\n                                        </h2>\r\n                                      </div>\r\n                                      <div className=\"responsive__buy__card\">\r\n                                        <div className=\"addon-card-left responsive__addon__details\">\r\n                                          <h2>\r\n                                            {addon.name}\r\n                                            {addon.name ===\r\n                                              \"Push Notification\" && \"s\"}\r\n                                          </h2>\r\n                                          <p>{addon.addon_description} </p>\r\n                                          <hr />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"price-card\">\r\n                                        <div className=\"amount-per\">\r\n                                          <h2>Amount</h2>\r\n                                          <div>\r\n                                            <h3>\r\n                                              ${addon.price[planInterval]}\r\n                                            </h3>\r\n                                            {addon.step[planInterval] > 1 && (\r\n                                              <p\r\n                                                className={`plan-price price-inline ${addon.name === \"Push Notification\" ? \"display-contents\" : \"\"}`}\r\n                                              >\r\n                                                /{addon.step[planInterval]}{\" \"}\r\n                                                {addon.key === \"omniCredits\" ||\r\n                                                addon.key === \"apolloCredit\"\r\n                                                  ? \"credit\"\r\n                                                  : addon.key}\r\n                                                /\r\n                                                {planInterval === \"monthly\"\r\n                                                  ? \"month\"\r\n                                                  : \"Year\"}\r\n                                              </p>\r\n                                            )}\r\n                                            {addon.key ===\r\n                                              \"audienceSegments\" && (\r\n                                              <p>\r\n                                                /segment/\r\n                                                {planInterval === \"monthly\"\r\n                                                  ? \"month\"\r\n                                                  : \"Year\"}\r\n                                              </p>\r\n                                            )}\r\n                                            {addon.key === \"bots\" && (\r\n                                              <p className=\"plan-price price-inline\">\r\n                                                /bot\r\n                                                <span>\r\n                                                  /\r\n                                                  {planInterval === \"monthly\"\r\n                                                    ? \"month\"\r\n                                                    : \"Year\"}\r\n                                                </span>\r\n                                              </p>\r\n                                            )}\r\n                                            {addon.key === \"user\" && (\r\n                                              <p className=\"plan-price price-inline\">\r\n                                                /user\r\n                                                <span>\r\n                                                  /\r\n                                                  {planInterval === \"monthly\"\r\n                                                    ? \"month\"\r\n                                                    : \"Year\"}\r\n                                                </span>\r\n                                              </p>\r\n                                            )}\r\n                                            {addon.key === \"branding\" && (\r\n                                              <p className=\"plan-price price-inline\">\r\n                                                /branding\r\n                                                <span>\r\n                                                  /\r\n                                                  {planInterval === \"monthly\"\r\n                                                    ? \"month\"\r\n                                                    : \"Year\"}\r\n                                                </span>\r\n                                              </p>\r\n                                            )}\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {addon.key === \"branding\" ? (\r\n                                      <div className=\"switch_addon brand-apply\">\r\n                                        <div className=\"fx al-cnt jst-sp-btw\">\r\n                                          <button\r\n                                            className={\r\n                                              quantityData[addon.key]\r\n                                                ? \"\"\r\n                                                : \"addon-unactive\"\r\n                                            }\r\n                                            onClick={() =>\r\n                                              !(\r\n                                                addon.key === \"branding\" &&\r\n                                                (isAI\r\n                                                  ? Number(\r\n                                                      usageData.ai_addons?.[\r\n                                                        addon.key\r\n                                                      ],\r\n                                                    )\r\n                                                  : Number(\r\n                                                      usageData.omniaddons?.[\r\n                                                        addon.key\r\n                                                      ],\r\n                                                    ))\r\n                                              ) &&\r\n                                              handleQuantity(\r\n                                                addon.key,\r\n                                                \"increase\",\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            Yes\r\n                                          </button>\r\n                                          <button\r\n                                            className={\r\n                                              quantityData[addon.key]\r\n                                                ? \"addon-unactive\"\r\n                                                : \"\"\r\n                                            }\r\n                                            onClick={() =>\r\n                                              !(\r\n                                                addon.key === \"branding\" &&\r\n                                                (isAI\r\n                                                  ? Number(\r\n                                                      usageData.ai_addons?.[\r\n                                                        addon.key\r\n                                                      ],\r\n                                                    )\r\n                                                  : Number(\r\n                                                      usageData.omniaddons?.[\r\n                                                        addon.key\r\n                                                      ],\r\n                                                    ))\r\n                                              ) &&\r\n                                              handleQuantity(\r\n                                                addon.key,\r\n                                                \"decrease\",\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            No\r\n                                          </button>\r\n                                        </div>\r\n                                      </div>\r\n                                    ) : (\r\n                                      <Fragment>\r\n                                        {quantityData[addon.key] ? (\r\n                                          <div className=\"switch_addon\">\r\n                                            <div className=\"fx al-cnt jst-sp-btw\">\r\n                                              <button\r\n                                                onClick={() =>\r\n                                                  handleQuantity(\r\n                                                    addon.key,\r\n                                                    \"decrease\",\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                -\r\n                                              </button>\r\n                                              <span>\r\n                                                {quantityData[addon.key] *\r\n                                                  addon.step[planInterval]}\r\n                                              </span>\r\n                                              <button\r\n                                                onClick={() =>\r\n                                                  handleQuantity(\r\n                                                    addon.key,\r\n                                                    \"increase\",\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                +\r\n                                              </button>\r\n                                            </div>\r\n                                          </div>\r\n                                        ) : (\r\n                                          <button\r\n                                            onClick={() =>\r\n                                              handleQuantity(\r\n                                                addon.key,\r\n                                                \"increase\",\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <svg\r\n                                              width=\"8\"\r\n                                              height=\"9\"\r\n                                              viewBox=\"0 0 8 9\"\r\n                                              fill=\"none\"\r\n                                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            >\r\n                                              <path\r\n                                                d=\"M3.73234 8.5C3.63321 8.5 3.54895 8.47004 3.47955 8.41011C3.42007 8.3402 3.39033 8.25531 3.39033 8.15543V5.03933H0.342007C0.242875 5.03933 0.158612 5.00936 0.0892193 4.94944C0.0297398 4.87953 0 4.79463 0 4.69476V4.21536C0 4.11548 0.0297398 4.03558 0.0892193 3.97566C0.158612 3.90574 0.242875 3.87079 0.342007 3.87079H3.39033V0.844569C3.39033 0.744694 3.42007 0.664794 3.47955 0.604869C3.54895 0.534956 3.63321 0.5 3.73234 0.5H4.25279C4.35192 0.5 4.43123 0.534956 4.49071 0.604869C4.5601 0.664794 4.5948 0.744694 4.5948 0.844569V3.87079H7.65799C7.75713 3.87079 7.83643 3.90574 7.89591 3.97566C7.9653 4.03558 8 4.11548 8 4.21536V4.69476C8 4.79463 7.9653 4.87953 7.89591 4.94944C7.83643 5.00936 7.75713 5.03933 7.65799 5.03933H4.5948V8.15543C4.5948 8.25531 4.5601 8.3402 4.49071 8.41011C4.43123 8.47004 4.35192 8.5 4.25279 8.5H3.73234Z\"\r\n                                                fill=\"#FB5F66\"\r\n                                              />\r\n                                            </svg>\r\n                                            Add\r\n                                          </button>\r\n                                        )}\r\n                                      </Fragment>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                            </>\r\n                          ))}\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"addon-calc\">\r\n                          <div className=\"cal_bar\">\r\n                            <h1>\r\n                              Add-ons billing summary\r\n                              <div className=\"invoice-tp\">\r\n                                <svg\r\n                                  width=\"13\"\r\n                                  height=\"13\"\r\n                                  viewBox=\"0 0 13 13\"\r\n                                  fill=\"none\"\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                  <g clipPath=\"url(#clip0_11357_16482)\">\r\n                                    <path\r\n                                      d=\"M6.5 0C5.21442 0 3.95772 0.381218 2.8888 1.09545C1.81988 1.80968 0.986755 2.82484 0.494786 4.01256C0.00281636 5.20028 -0.125905 6.50721 0.124899 7.76809C0.375703 9.02896 0.994767 10.1872 1.90381 11.0962C2.81285 12.0052 3.97104 12.6243 5.23192 12.8751C6.49279 13.1259 7.79973 12.9972 8.98744 12.5052C10.1752 12.0132 11.1903 11.1801 11.9046 10.1112C12.6188 9.04229 13 7.78558 13 6.5C12.9981 4.77667 12.3127 3.12445 11.0941 1.90586C9.87556 0.687282 8.22334 0.00186392 6.5 0V0ZM6.5 11.375C5.53582 11.375 4.59329 11.0891 3.7916 10.5534C2.98991 10.0177 2.36507 9.25637 1.99609 8.36558C1.62711 7.47479 1.53057 6.49459 1.71867 5.54893C1.90678 4.60328 2.37108 3.73464 3.05286 3.05285C3.73464 2.37107 4.60328 1.90677 5.54894 1.71867C6.49459 1.53057 7.47479 1.62711 8.36558 1.99609C9.25637 2.36506 10.0177 2.98991 10.5534 3.7916C11.0891 4.59329 11.375 5.53582 11.375 6.5C11.3734 7.79245 10.8593 9.03151 9.94541 9.94541C9.03151 10.8593 7.79245 11.3734 6.5 11.375Z\"\r\n                                      fill=\"black\"\r\n                                      fillOpacity=\"0.5\"\r\n                                    ></path>\r\n                                    <path\r\n                                      d=\"M6.25366 5.17018H6.09116C5.87828 5.16495 5.67111 5.23943 5.51029 5.37901C5.34946 5.5186 5.24657 5.71322 5.22179 5.92472C5.20762 6.13631 5.27673 6.34505 5.41437 6.50638C5.55201 6.6677 5.74727 6.76882 5.95845 6.78814V9.30689C5.95845 9.52238 6.04406 9.72904 6.19643 9.88141C6.3488 10.0338 6.55547 10.1194 6.77095 10.1194C6.98644 10.1194 7.19311 10.0338 7.34548 9.88141C7.49785 9.72904 7.58345 9.52238 7.58345 9.30689V6.49997C7.58345 6.14729 7.44335 5.80905 7.19397 5.55967C6.94458 5.31028 6.60635 5.17018 6.25366 5.17018Z\"\r\n                                      fill=\"black\"\r\n                                      fillOpacity=\"0.5\"\r\n                                    ></path>\r\n                                    <path\r\n                                      d=\"M6.40802 4.58556C6.59185 4.58556 6.77156 4.53105 6.92442 4.42891C7.07727 4.32678 7.19641 4.18161 7.26676 4.01177C7.33711 3.84192 7.35552 3.65503 7.31966 3.47473C7.28379 3.29442 7.19526 3.1288 7.06527 2.99881C6.93528 2.86881 6.76966 2.78029 6.58935 2.74442C6.40905 2.70856 6.22216 2.72697 6.05231 2.79732C5.88247 2.86767 5.7373 2.9868 5.63516 3.13966C5.53303 3.29252 5.47852 3.47223 5.47852 3.65606C5.47844 3.77815 5.50244 3.89905 5.54912 4.01185C5.59581 4.12466 5.66428 4.22715 5.7506 4.31348C5.83693 4.3998 5.93942 4.46827 6.05223 4.51495C6.16503 4.56164 6.28593 4.58563 6.40802 4.58556Z\"\r\n                                      fill=\"black\"\r\n                                      fillOpacity=\"0.5\"\r\n                                    ></path>\r\n                                  </g>\r\n                                  <defs>\r\n                                    <clipPath id=\"clip0_11357_16482\">\r\n                                      <rect\r\n                                        width=\"13\"\r\n                                        height=\"13\"\r\n                                        fill=\"white\"\r\n                                      ></rect>\r\n                                    </clipPath>\r\n                                  </defs>\r\n                                </svg>\r\n                                <div className=\"confirm-total-tooltip\">\r\n                                  {\" \"}\r\n                                  Add-Ons will be added to your current plan\r\n                                </div>\r\n                              </div>\r\n                            </h1>\r\n                            <p>\r\n                              If you add Add-Ons after the last billing date,\r\n                              you'll only be charged for the partial usage until\r\n                              the next billing date.\r\n                            </p>\r\n                          </div>\r\n                          {addOnData.some(\r\n                            (addon: AddOn) => quantityData[addon.key],\r\n                          ) ? (\r\n                            <Fragment>\r\n                              <table className=\"calc_table addons_table\">\r\n                                <th>\r\n                                  <td>Name</td>\r\n                                  <td>Quantity</td>\r\n                                  <td>Total</td>\r\n                                </th>\r\n                                {addOnData.reduce(\r\n                                  (\r\n                                    previous: ReactElement[],\r\n                                    addon: AddOn,\r\n                                    addonIndex: number,\r\n                                  ) => {\r\n                                    if (quantityData[addon.key])\r\n                                      previous.push(\r\n                                        <tr key={addonIndex}>\r\n                                          <td>\r\n                                            {addon.name}\r\n                                            {addon.name ===\r\n                                              \"Push Notification\" && \"s\"}\r\n                                            <span className=\"info\">\r\n                                              <InfoIconSvg />\r\n                                              <p>{addon.addon_description}</p>\r\n                                            </span>\r\n                                          </td>\r\n                                          <td>\r\n                                            {addon.key === \"branding\"\r\n                                              ? quantityData[addon.key]\r\n                                                ? \"Yes\"\r\n                                                : \"No\"\r\n                                              : quantityData[addon.key] *\r\n                                                addon.step[planInterval]}\r\n                                          </td>\r\n                                          <td>\r\n                                            +$\r\n                                            {addon.price[planInterval] *\r\n                                              quantityData[addon.key]}\r\n                                          </td>\r\n                                        </tr>,\r\n                                      );\r\n                                    return previous;\r\n                                  },\r\n                                  [],\r\n                                )}\r\n                              </table>\r\n                              <div className=\"cal_bar fx jstfy-sp-btw cal_bar_footer\">\r\n                                <button\r\n                                  onClick={() => {\r\n                                    setBillModal(true);\r\n                                    setShowAddonsModal(\"billing\");\r\n                                  }}\r\n                                >\r\n                                  Apply Add-Ons\r\n                                </button>\r\n                                <hr />\r\n                                <div className=\"total_price\">\r\n                                  <h3>Total Add-Ons price</h3>\r\n                                  <span>\r\n                                    $\r\n                                    {addOnData.reduce(\r\n                                      (pre: number, addon: AddOn) =>\r\n                                        pre +\r\n                                        addon.price[planInterval] *\r\n                                          quantityData[addon.key],\r\n                                      0,\r\n                                    )}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </Fragment>\r\n                          ) : (\r\n                            <div className=\"no-addsvg\">\r\n                              {window.innerWidth < 1080 ? (\r\n                                <NoAddonSmall />\r\n                              ) : (\r\n                                <NoAddon />\r\n                              )}\r\n                              <div className=\"no-addons-selected\">\r\n                                <h1>No Add-Ons selected</h1>\r\n                                <p>Select Add-Ons on the left to buy</p>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {billModal && (\r\n                <div className=\"pop_upBg\">\r\n                  <div\r\n                    className=\"invoice_addons\"\r\n                    onClick={(e) => e.stopPropagation()}\r\n                  >\r\n                    <div\r\n                      className=\"Cncl\"\r\n                      onClick={() => {\r\n                        setBillModal(false);\r\n                        setShowAddonsModal(\"addons\");\r\n                      }}\r\n                    >\r\n                      <svg\r\n                        width=\"10\"\r\n                        height=\"10\"\r\n                        viewBox=\"0 0 10 10\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M10 1.00714L8.99286 0L5 3.99286L1.00714 0L0 1.00714L3.99286 5L0 8.99286L1.00714 10L5 6.00714L8.99286 10L10 8.99286L6.00714 5L10 1.00714Z\"\r\n                          fill=\"#6D6D6D\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"invoice_heading\">\r\n                      <h1>Confirm Add-Ons</h1>\r\n                    </div>\r\n                    <div className=\"invoice_body\">\r\n                      {/* {upcomingPlan?.title && <div className=\"invoice_info\">\r\n                          Since You have downgraded your plan, If you buy more  Add-Ons then your downgraded plan will be vanished. You can downgrade again if you want. \r\n                        </div> } */}\r\n                      <h2> Add-Ons billing summary</h2>\r\n                      <table className=\"invoice-table\">\r\n                        {addOnData.reduce(\r\n                          (\r\n                            previous: ReactElement[],\r\n                            addon: AddOn,\r\n                            addonIndex: number,\r\n                          ) => {\r\n                            if (quantityData[addon.key])\r\n                              previous.push(\r\n                                <tr key={addonIndex}>\r\n                                  <td>\r\n                                    {addon.name}\r\n                                    {addon.name === \"Push Notification\" && \"s\"}\r\n                                  </td>\r\n                                  <td>\r\n                                    {addon.key === \"branding\"\r\n                                      ? quantityData[addon.key]\r\n                                        ? \"Yes\"\r\n                                        : \"No\"\r\n                                      : quantityData[addon.key] *\r\n                                        addon.step[planInterval]}\r\n                                  </td>\r\n                                  <td>\r\n                                    +$\r\n                                    {addon.price[planInterval] *\r\n                                      quantityData[addon.key]}\r\n                                  </td>\r\n                                </tr>,\r\n                              );\r\n                            return previous;\r\n                          },\r\n                          [],\r\n                        )}\r\n                      </table>\r\n                      <div className=\"invoice-bill-total px-20\">\r\n                        <div className=\"invoice_total\">\r\n                          <h3>\r\n                            Total Amount:\r\n                            <div className=\"invoice-tp\">\r\n                              <svg\r\n                                width=\"13\"\r\n                                height=\"13\"\r\n                                viewBox=\"0 0 13 13\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                              >\r\n                                <g clipPath=\"url(#clip0_11357_16482)\">\r\n                                  <path\r\n                                    d=\"M6.5 0C5.21442 0 3.95772 0.381218 2.8888 1.09545C1.81988 1.80968 0.986755 2.82484 0.494786 4.01256C0.00281636 5.20028 -0.125905 6.50721 0.124899 7.76809C0.375703 9.02896 0.994767 10.1872 1.90381 11.0962C2.81285 12.0052 3.97104 12.6243 5.23192 12.8751C6.49279 13.1259 7.79973 12.9972 8.98744 12.5052C10.1752 12.0132 11.1903 11.1801 11.9046 10.1112C12.6188 9.04229 13 7.78558 13 6.5C12.9981 4.77667 12.3127 3.12445 11.0941 1.90586C9.87556 0.687282 8.22334 0.00186392 6.5 0V0ZM6.5 11.375C5.53582 11.375 4.59329 11.0891 3.7916 10.5534C2.98991 10.0177 2.36507 9.25637 1.99609 8.36558C1.62711 7.47479 1.53057 6.49459 1.71867 5.54893C1.90678 4.60328 2.37108 3.73464 3.05286 3.05285C3.73464 2.37107 4.60328 1.90677 5.54894 1.71867C6.49459 1.53057 7.47479 1.62711 8.36558 1.99609C9.25637 2.36506 10.0177 2.98991 10.5534 3.7916C11.0891 4.59329 11.375 5.53582 11.375 6.5C11.3734 7.79245 10.8593 9.03151 9.94541 9.94541C9.03151 10.8593 7.79245 11.3734 6.5 11.375Z\"\r\n                                    fill=\"black\"\r\n                                    fillOpacity=\"0.5\"\r\n                                  />\r\n                                  <path\r\n                                    d=\"M6.25366 5.17018H6.09116C5.87828 5.16495 5.67111 5.23943 5.51029 5.37901C5.34946 5.5186 5.24657 5.71322 5.22179 5.92472C5.20762 6.13631 5.27673 6.34505 5.41437 6.50638C5.55201 6.6677 5.74727 6.76882 5.95845 6.78814V9.30689C5.95845 9.52238 6.04406 9.72904 6.19643 9.88141C6.3488 10.0338 6.55547 10.1194 6.77095 10.1194C6.98644 10.1194 7.19311 10.0338 7.34548 9.88141C7.49785 9.72904 7.58345 9.52238 7.58345 9.30689V6.49997C7.58345 6.14729 7.44335 5.80905 7.19397 5.55967C6.94458 5.31028 6.60635 5.17018 6.25366 5.17018Z\"\r\n                                    fill=\"black\"\r\n                                    fillOpacity=\"0.5\"\r\n                                  />\r\n                                  <path\r\n                                    d=\"M6.40802 4.58556C6.59185 4.58556 6.77156 4.53105 6.92442 4.42891C7.07727 4.32678 7.19641 4.18161 7.26676 4.01177C7.33711 3.84192 7.35552 3.65503 7.31966 3.47473C7.28379 3.29442 7.19526 3.1288 7.06527 2.99881C6.93528 2.86881 6.76966 2.78029 6.58935 2.74442C6.40905 2.70856 6.22216 2.72697 6.05231 2.79732C5.88247 2.86767 5.7373 2.9868 5.63516 3.13966C5.53303 3.29252 5.47852 3.47223 5.47852 3.65606C5.47844 3.77815 5.50244 3.89905 5.54912 4.01185C5.59581 4.12466 5.66428 4.22715 5.7506 4.31348C5.83693 4.3998 5.93942 4.46827 6.05223 4.51495C6.16503 4.56164 6.28593 4.58563 6.40802 4.58556Z\"\r\n                                    fill=\"black\"\r\n                                    fillOpacity=\"0.5\"\r\n                                  />\r\n                                </g>\r\n                                <defs>\r\n                                  <clipPath id=\"clip0_11357_16482\">\r\n                                    <rect width=\"13\" height=\"13\" fill=\"white\" />\r\n                                  </clipPath>\r\n                                </defs>\r\n                              </svg>\r\n                              <div className=\"confirm-total-tooltip\">\r\n                                These additional feature charges will show up on\r\n                                your current and next billing statements.\r\n                                {/* <strong>\r\n                                  {\" \"}\r\n                                  {moment(\r\n                                    isAI\r\n                                      ? usageData.ai_subscription\r\n                                          .next_billing_at\r\n                                      : usageData.subscription.next_billing_at,\r\n                                  ).format(\"DD MMM YYYY\")}\r\n                                </strong> */}\r\n                              </div>\r\n                            </div>\r\n                          </h3>\r\n                          <p>\r\n                            $\r\n                            {addOnData.reduce(\r\n                              (pre: number, addon: AddOn) =>\r\n                                pre +\r\n                                addon.price[planInterval] *\r\n                                  quantityData[addon.key],\r\n                              0,\r\n                            )}\r\n                            <span>\r\n                              {\" \"}\r\n                              (per{\" \"}\r\n                              {isAI\r\n                                ? usageData.ai_subscription.interval_unit.slice(\r\n                                    0,\r\n                                    -1,\r\n                                  )\r\n                                : usageData.subscription.interval_unit}\r\n                              )\r\n                            </span>\r\n                          </p>\r\n                        </div>\r\n                        {/* <hr /> */}\r\n                        <div className=\"partial_billing\">\r\n                          Partial billing\r\n                          <span>\r\n                            $\r\n                            {addOnData\r\n                              .reduce((pre: number, addon: AddOn) => {\r\n                                if (\r\n                                  addon.addon_code.monthly !==\r\n                                    environmentData.MONTHLYBRANDING &&\r\n                                  addon.addon_code.yearly !==\r\n                                    environmentData.YEARLYBRANDING\r\n                                ) {\r\n                                  return (\r\n                                    pre +\r\n                                    +addon.price[planInterval].toFixed(2) *\r\n                                      quantityData[addon.key]\r\n                                  );\r\n                                } else {\r\n                                  return (\r\n                                    pre +\r\n                                    +(\r\n                                      addon.price[planInterval] * partial\r\n                                    ).toFixed(2) *\r\n                                      quantityData[addon.key]\r\n                                  );\r\n                                }\r\n                              }, 0)\r\n                              .toFixed(1)}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"invoice_info\">\r\n                          Amount to be paid now for the usage of{\" \"}\r\n                          <strong>\r\n                            {Math.round(\r\n                              (new Date(nextTerm).getTime() - currentDate) /\r\n                                (1000 * 60 * 60 * 24),\r\n                            )}{\" \"}\r\n                            remaining days{\" \"}\r\n                          </strong>\r\n                          untill next billing cycle on{\" \"}\r\n                          <strong>\r\n                            {moment(\r\n                              isAI\r\n                                ? usageData.ai_subscription.next_billing_at\r\n                                : usageData.subscription.next_billing_at,\r\n                            ).format(\"DD MMM YYYY\")}\r\n                          </strong>\r\n                          .\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"invoice-footer\">\r\n                      <button onClick={applyAddon}>\r\n                        {loading ? \"Loading...\" : \"Pay & Confirm  Add-Ons\"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </DisableLayout>\r\n        )}\r\n      </motion.div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ManageAddons;\r\n"],"names":["SettingsNavbar","title","jsxDEV","AIPricing","checked","aiPlan","planType","subscriptionId","isEvent","buttonClicked","setButtonClicked","useState","location","useLocation","dispatch","useDispatch","data","setData","AIPlan2","this","AIAnimateBasic","AIPlan3","AiAnimatestandard","AIPlan4","AiAnimateAdvance","useEffect","svgs","main","imgBox","temp","ele","element","index","updatedData","item","getPrice","plan","handlePlan","Crisp","selectedPlan","planCode","price","type","body","unit","axiosPost","response","userSlice","err","handleUpgrade","interval_unit","isHovered","setIsHovered","handleMouseEnter","handleMouseLeave","Fragment","i","_a","_b","_c","_d","_e","_f","_g","feature","environmentData","environment","Plans","calledFromAgent","showPlansModal","setShowPlansModal","router","useNavigate","queryParam","upgraded","priceCode","priceVal","add","setChecked","userEmail","useSelector","state","compDetails","setPlan","setPlanType","setAiPlan","loading","setLoading","reloadState","setReloadState","setSubscriptionId","subscription","setSubscription","subId","setSubId","setIsEvent","checkOutPage","setCheckOutPage","isApplied","setIsApplied","showCoupon","setShowCoupon","code","setCode","setPrice","queryClient","useQueryClient","addons","setAddons","customerId","setCustomerId","setPlaneCode","companyDetails","useGetCompany","setCookie","units","customer","_j","_i","_h","_m","_l","_k","_p","_o","_n","_s","_r","_q","_v","_u","_t","_y","_x","_w","_B","_A","_z","checkCode","_F","_E","_D","_C","_J","_I","_H","_G","socket","io","res","companyName","userId","compId","GtmService.pushToDataLayer","_K","checkSaveMethod","downgrade","motion","SmallLoader","Coupon","PlusPlan","CustomPlan","PaymentSummary","root","factory","module","require$$0","moment","VERSION","zones","links","countries","names","guesses","cachedGuess","logError","momentVersion","major","minor","charCodeToInt","charCode","unpackBase60","string","parts","whole","fractional","multiplier","num","out","sign","arrayToInt","array","intToUntil","length","mapIndices","source","indices","unpack","offsets","untils","Zone","packedString","closest","arr","len","mid","lo","hi","unpacked","timestamp","target","zone_name","country_code","max","offset","offsetNext","offsetPrev","tz","mom","Country","country_name","zone_names","OffsetAt","at","timeString","abbr","ZoneScore","zone","offsetAt","findChange","low","high","diff","userOffsets","startYear","last","lastOffset","change","next","nextOffset","sortZoneScores","a","b","addToGuesses","name","guessesForUserOffsets","offsetsLength","filteredGuesses","checkedOffsets","j","guessesOffset","rebuildGuess","intlName","normalizeName","zoneScores","zoneScore","getZone","guess","ignoreCache","addZone","packed","split","normalized","caller","link","getNames","getCountryNames","addLink","aliases","alias","normal0","normal1","addCountries","country_zones","getCountry","zonesForCountry","country","with_offset","loadData","zoneExists","needsOffset","m","isUnixTimestamp","message","input","args","fn","keepTime","z","abbrWrap","old","resetZoneWrap","resetZoneWrap2","momentProperties","momentTimezoneModule","require$$1","NoAddon","NoAddonSmall","DowngradeStep1","props","addonData","billingData","handleAddonSelect","addon","ADDON_ICON","DowngradeStep2","totalData","planInterval","handleQuantity","nextTerm","pre","DowngradeStep3","downgradeReason","handleDowngradeReason","event","STEPS","totalSteps","Downgrade","usageData","downgradeData","previousAddons","handleModalClose","handleReload","isAI","stepNumber","setStepNumber","setBillingData","setDowngradeReason","quantity","downgradedQuantity","total","subtotal","useMemo","key","selected","enableNext","addonKey","action","handleStepChange","direction","applyDowngrade","addonsData","addon_code","e","step","stepIndex","PushNotificationIcon","EmailsIcon","DataTagsIcon","BrandingIcon","BrandingRemovalIcon","AudienceSegmentsIcon","ExtraUserIcon","SMSIcon","CreditIcon","BotIcon","MessageIcon","ManageAddons","showAddonsModal","setShowAddonsModal","onClose","reload","setReload","setUsageData","addOnData","setAddOnData","setDowngradeData","partial","setPartial","setPreviousAddons","setPlanInterval","disable","setDisable","billModal","setBillModal","downgradeModal","setDowngradeModal","setNextTerm","currentDate","setCurrentDate","upcomingPlan","setUpcomingPlan","currentPlan","setCurrentPlan","fade1","setFade1","initialData","AiinitialData","quantityData","setQuantityData","fetchData","companyPromise","axiosGet","addOnPromise","usagePromise","downgradePromise","companyResponse","addOnResponse","usageResponse","downgradeResponse","omniaddonsArray","applyAddon","checkAddonKey","checkAddonQty","preQuantity","TabTitle","DisableLayout","addonIndex","Swiper","Pagination","swiper","SwiperSlide","InfoIconSvg","previous"],"mappings":"gxBACA,SAASA,GAAe,CAAC,MAAAC,GAAQ,CAC7B,gBACO,MAAI,CAAA,UAAU,6BACf,SAAAC,EAAAA,OAAC,MAAI,SAALD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mIAAA,WAAA,EAAA,aAAA,EAAA,EAAA,IAAW,CADX,EAAA,OAAA,GAAA,CAAA,SAAA,mIAAA,WAAA,EAAA,aAAA,EAEF,EAAA,IAAA,CAGR,CCSA,MAAME,GAAY,CAAC,CAAE,QAAAC,EAAS,OAAAC,EAAQ,SAAAC,EAAU,eAAAC,EAAgB,QAAAC,KAAc,CAC5E,KAAM,CAACC,EAAeC,CAAgB,EAAIC,WAAS,EAAK,EAClDC,EAAWC,KACXC,EAAWC,KACE,IAAI,gBAAgBH,EAAS,MAAM,EACtD,KAAM,CAACI,EAAMC,CAAO,EAAIN,WAAS,CAC/B,CACE,eAAQO,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,GAAA,aAAA,EAAS,EAAAC,MAAA,EAChB,uBAAgBC,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,GAAA,aAAA,EAAgB,EAAAD,MAAA,EAC/B,MAAO,QACP,KAAM,yDACN,MAAO,KACP,OAAQ,eACR,QAAS,cACT,SAAU,CACR,sBACA,sCACA,8CACA,sCACA,yCACA,+BACA,4BACA,oBACF,EACA,QAAS,GACT,SAAU,WACV,cAAe,QACjB,EACA,CACE,eAAQE,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,GAAA,aAAA,EAAS,EAAAF,MAAA,EAChB,uBAAgBG,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,GAAA,aAAA,EAAmB,EAAAH,MAAA,EAClC,MAAO,eACP,KAAM,yDACN,MAAO,KACP,OAAQ,eACR,QAAS,cACT,SAAU,CACR,uBACA,uCACA,8CACA,sCACA,yCACA,+BACA,4BACA,qBACA,yCACA,4CACF,EACA,QAAS,GACT,SAAU,cACV,cAAe,QACjB,EACA,CACE,eAAQI,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,GAAA,aAAA,EAAS,EAAAJ,MAAA,EAChB,uBAAgBK,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,GAAA,aAAA,EAAkB,EAAAL,MAAA,EACjC,MAAO,aACP,KAAM,yDACN,MAAO,MACP,OAAQ,eACR,QAAS,cACT,SAAU,CACR,mBACA,gBACA,gBACA,0BACA,iBACA,iBACF,EACA,QAAS,GACT,SAAU,cACV,cAAe,QACjB,CAAA,CACD,EAEDM,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAO,CAEX,mFACA,sFACA,qFAAA,EAEIC,EAAO,SAAS,iBAAiB,YAAY,EAC7CC,EAAS,SAAS,iBAAiB,gBAAgB,EACnDC,EAAY,CAAA,EACZ,MAAA,KAAKD,CAAM,EAAE,QAASE,GAAQD,EAAK,KAAKC,EAAI,SAAS,CAAC,EAC5D,MAAM,KAAKH,CAAI,EAAE,QAAQ,CAACI,EAASC,IAAU,CACnCD,EAAA,iBAAiB,aAAc,IAAM,CAEzCH,EAAAI,CACF,EAAE,UAAY,qCAAqCN,EAAKM,CAAK,CAAC,aAAaN,EAAKM,CAAK,CAAC,qBAAA,CACvF,CAAA,CACF,EACD,MAAMC,EAAcjB,EAAK,IAAKkB,GACxB9B,EACK,CACL,GAAG8B,EACH,cAAe,QACf,SAAU,GAAGA,EAAK,SAAS,MAAM,EAAGA,EAAK,SAAS,OAAS,CAAC,CAAC,IAAA,EAGxD,CACL,GAAGA,EACH,cAAe,SACf,SAAU,GAAGA,EAAK,SAAS,MAAM,EAAGA,EAAK,SAAS,OAAS,CAAC,CAAC,IAAA,CAGlE,EACDjB,EAAQgB,CAAW,CAAA,EAClB,CAAC7B,CAAO,CAAC,EAEN,MAAA+B,EAAYlC,GAAU,CAC1B,MAAMmC,EAAOpB,EAAK,KAAMoB,IAASA,GAAAA,YAAAA,EAAM,SAAUnC,CAAK,EACtD,OAAImC,EACEhC,EACK,SAASgC,GAAA,YAAAA,EAAM,KAAK,GAAKhC,EAAU,GAAK,GAExCgC,GAAA,YAAAA,EAAM,MAGV,EAAA,EAGHC,EAAa,IAAM,CACvBC,GAAM,KAAK,OACLA,GAAA,QAAQ,KAAK,OAAQ,+BAA+B,CAAA,EAGtDC,EAAe,CAACC,EAAUvC,EAAOwC,EAAOC,IAAS,CACrD,MAAMC,EAAO,CACX,UAAWH,EACX,eAAAjC,CAAA,EAEF,IAAIqC,EAAOvC,EAAO,UAAU,OAAOA,EAAO,UAAU,OAAS,CAAC,EAC1DD,EACEC,EAAO,OAASoC,GAASG,GAAQF,EACnCG,GAAU,sBAAuBF,CAAI,EAClC,KAAMG,GAAa,CACd,GAAAA,EAAS,KAAK,QAAS,CACzBpC,EAAiB,EAAK,EACtB,MAAMuB,EAAcjB,EAAK,IAAKkB,GACxBA,EAAK,QAAUjC,EACV,CAAE,GAAGiC,EAAM,QAAS,EAAM,EAE5BA,CACR,EACDjB,EAAQgB,CAAW,EACnBnB,EACEiC,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,UACX,WAAY,UACZ,aACE,6FAAA,CACH,CAAA,CAEL,CAAA,CACD,EACA,MAAOC,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACflC,EACEiC,EAAU,QAAQ,cAAc,CAC9B,KAAM,GACN,UAAW,QACX,QAAS,sBAAA,CACV,CAAA,CACH,CACD,EACA,QAAQ,IAAM,CACb,WAAW,IAAM,CACfrC,EAAiB,EAAK,EACtB,MAAMuB,EAAcjB,EAAK,IAAKkB,GACxBA,EAAK,QAAUjC,EACV,CAAE,GAAGiC,EAAM,QAAS,EAAM,EAE5BA,CACR,EACDjB,EAAQgB,CAAW,GAClB,GAAI,CAAA,CACR,EAEHY,GAAU,yBAA0BF,CAAI,EACrC,KAAMG,GAAa,CAClB,OAAO,SAAS,OAAOA,EAAS,KAAK,GAAG,CAAA,CACzC,EACA,MAAOE,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACflC,EACEiC,EAAU,QAAQ,cAAc,CAC9B,KAAM,GACN,UAAW,QACX,QAAS,sBAAA,CACV,CAAA,CACH,CACD,EACA,QAAQ,IAAM,CACb,WAAW,IAAM,CACfrC,EAAiB,EAAK,EACtB,MAAMuB,EAAcjB,EAAK,IAAKkB,GACxBA,EAAK,QAAUjC,EACV,CAAE,GAAGiC,EAAM,QAAS,EAAM,EAE5BA,CACR,EACDjB,EAAQgB,CAAW,GAClB,GAAI,CAAA,CACR,EAIH5B,EAAO,OAASoC,GACfG,GAAQF,GAAQrC,EAAO,YAAc,WAEtCwC,GAAU,sBAAuBF,CAAI,EAClC,KAAMG,GAAa,CACd,GAAAA,EAAS,KAAK,QAAS,CACzBpC,EAAiB,EAAK,EACtB,MAAMuB,EAAcjB,EAAK,IAAKkB,GACxBA,EAAK,QAAUjC,EACV,CAAE,GAAGiC,EAAM,QAAS,EAAM,EAE5BA,CACR,EACDjB,EAAQgB,CAAW,EACnBnB,EACEiC,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,UACX,WAAY,UACZ,aACE,6FAAA,CACH,CAAA,CAEL,CAAA,CACD,EACA,MAAOC,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACflC,EACEiC,EAAU,QAAQ,cAAc,CAC9B,KAAM,GACN,UAAW,QACX,QAAS,sBAAA,CACV,CAAA,CACH,CACD,EACA,QAAQ,IAAM,CACb,WAAW,IAAM,CACfrC,EAAiB,EAAK,EACtB,MAAMuB,EAAcjB,EAAK,IAAKkB,GACxBA,EAAK,QAAUjC,EACV,CAAE,GAAGiC,EAAM,QAAS,EAAM,EAE5BA,CACR,EACDjB,EAAQgB,CAAW,GAClB,GAAI,CAAA,CACR,EAEHY,GAAU,yBAA0BF,CAAI,EACrC,KAAMG,GAAa,CAClB,OAAO,SAAS,OAAOA,EAAS,KAAK,GAAG,CAAA,CACzC,EACA,MAAOE,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACflC,EACEiC,EAAU,QAAQ,cAAc,CAC9B,KAAM,GACN,UAAW,QACX,QAAS,sBAAA,CACV,CAAA,CACH,CACD,EACA,QAAQ,IAAM,CACb,WAAW,IAAM,CACfrC,EAAiB,EAAK,EACtB,MAAMuB,EAAcjB,EAAK,IAAKkB,GACxBA,EAAK,QAAUjC,EACV,CAAE,GAAGiC,EAAM,QAAS,EAAM,EAE5BA,CACR,EACDjB,EAAQgB,CAAW,GAClB,GAAI,CAAA,CACR,CAEP,EAGIgB,EAAgB,CAAChD,EAAOwC,EAAOS,IAAkB,CAGrD,GAFAxC,EAAiB,EAAI,EACRM,EAAK,KAAMoB,IAASA,GAAAA,YAAAA,EAAM,SAAUnC,CAAK,EAC5C,CACR,MAAMgC,EAAcjB,EAAK,IAAKkB,GACxBA,EAAK,QAAUjC,EACV,CAAE,GAAGiC,EAAM,QAAS,EAAK,EAE3BA,CACR,EACDjB,EAAQgB,CAAW,EACfhC,IAAU,QACRG,EACWmC,EAAA,WAAYtC,EAAO,IAAK,GAAG,EAE3BsC,EAAA,WAAYtC,EAAO,GAAI,GAAG,EAEhCA,IAAU,eACfG,EACWmC,EAAA,cAAetC,EAAO,IAAK,GAAG,EAE9BsC,EAAA,cAAetC,EAAO,GAAI,GAAG,EAEnCA,IAAU,aACfG,EACWmC,EAAA,cAAetC,EAAO,KAAM,GAAG,EAE/BsC,EAAA,cAAetC,EAAO,IAAK,GAAG,EAEpCA,IAAU,QACNsC,EAAA,UAAWtC,EAAO,EAAG,GAAG,CAEzC,CAAA,EAGI,CAACkD,EAAWC,CAAY,EAAIzC,WAAS,EAAK,EAC1C0C,EAAmB,IAAM,CAC7BD,EAAa,EAAI,CAAA,EAGbE,EAAmB,IAAM,CAC7BF,EAAa,EAAK,CAAA,EAIlB,OAAAlD,SAACqD,EAAAA,SAAA,CACC,SAAArD,EAAA,OAAC,MAAA,CACC,UAAU,eACV,aAAcmD,EACd,aAAcC,EAEb,SAAKtC,EAAA,IAAI,CAACoB,EAAMoB,IACf,mBAAAtD,OAAAA,EAAA,OAAC,MAAA,CACC,UAAW,cACTG,GAAA,YAAAA,EAAQ,cAAc+B,GAAA,YAAAA,EAAM,YAC3B/B,GAAA,YAAAA,EAAQ,aAAc,aACrB+B,GAAA,YAAAA,EAAM,YAAa,aACpB/B,GAAA,YAAAA,EAAQ,aAAc,aACrB+B,GAAA,YAAAA,EAAM,YAAa,WACjB,gBACA,EACN,GAGA,SAAA,CAAAlC,EAAAA,OAAC,MAAI,CAAA,UAAU,gBAAiB,SAAAkC,GAAA,YAAAA,EAAM,KAAtC,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAA4C,EAAAjB,MAAA,EAC5CjB,EAAAA,OAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACA,EAAAA,OAAA,KAAA,CAAG,UAAU,QACX,SAAA,CAAMkC,GAAA,YAAAA,EAAA,QAEL/B,GAAA,YAAAA,EAAQ,SAASA,GAAA,YAAAA,EAAQ,QAAS,UAClC+B,GAAA,YAAAA,EAAM,SAAU,gBACblC,EAAA,OAAA,OAAA,CAAK,UAAU,eAAe,SAA/B,eAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAA0C,EAAAiB,MAAA,IAG5Cd,GAAA,YAAAA,EAAQ,cAAc+B,GAAA,YAAAA,EAAM,YAC3B/B,GAAA,YAAAA,EAAQ,aAAc,aACrB+B,GAAA,YAAAA,EAAM,YAAa,aACpB/B,GAAA,YAAAA,EAAQ,aAAc,aACrB+B,GAAA,YAAAA,EAAM,YAAa,cACrB/B,GAAA,YAAAA,EAAQ,QACLH,EAAA,OAAA,MAAA,CAAI,UAAU,iBACb,SAACA,EAAA,OAAA,MAAA,CAAI,UAAU,qCAAqC,SAApD,YAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAEA,CAHF,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAIA,EAAAA,MAAA,CAAA,GAlBN,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAoBA,EAAAA,MAAA,EAEAjB,EAAA,OAAC,OAAI,UAAU,6BACZ,WAAK,QAAU,aACbA,EAAA,OAAA,OAAA,CAAK,SAAN,SAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAa,EAGXjB,EAAAA,OAAAqD,EAAA,SAAA,CAAA,SAAA,CAAArD,SAAC,OAAK,CAAA,SAAA,CAAA,IAAEiC,EAASC,GAAA,YAAAA,EAAM,KAAK,CAAA,GAA5B,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAA8B,EAAAjB,MAAA,EAAO,OAAK,IACzCf,EAAU,OAAS,OAAA,GAFtB,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAe,MAGA,CAPJ,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EASA,EAAAA,MAAA,GAEGf,IACDgC,GAAA,YAAAA,EAAM,WAAUqB,EAAApD,GAAA,YAAAA,EAAQ,OAAR,YAAAoD,EAAc,UAC7BnD,IAAa,UAAW8B,GAAA,YAAAA,EAAM,SAAU,SACzC,EAAC/B,GAAA,MAAAA,EAAQ,QACR,CAACD,IACAgC,GAAA,YAAAA,EAAM,WAAUsB,EAAArD,GAAA,YAAAA,EAAQ,OAAR,YAAAqD,EAAc,SAC9BpD,IAAa,UACb,EAACD,GAAA,MAAAA,EAAQ,SACXH,EAAA,OAAC,SAAA,CACC,UACEkC,GAAA,YAAAA,EAAM,WACLA,GAAA,YAAAA,EAAM,aAAa/B,GAAA,YAAAA,EAAQ,YAAa,EAACA,GAAA,MAAAA,EAAQ,UAClDsD,EAAAvB,GAAA,YAAAA,EAAM,QAAN,YAAAuB,EAAa,SAAU,QACvBlD,GACAD,EAEH,SAAA,cAAA,EARD,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAW,MAUA,EAGD,EACC,CAACf,IACDgC,GAAA,YAAAA,EAAM,WAAUwB,EAAAvD,GAAA,YAAAA,EAAQ,OAAR,YAAAuD,EAAc,UAC7BtD,IAAa,WAAY8B,GAAA,YAAAA,EAAM,SAAU,SAC1C,EAAC/B,GAAA,MAAAA,EAAQ,SAET,EACED,IACAgC,GAAA,YAAAA,EAAM,WAAUyB,EAAAxD,GAAA,YAAAA,EAAQ,OAAR,YAAAwD,EAAc,UAC7BvD,IAAa,UAAW8B,GAAA,YAAAA,EAAM,SAAU,SACzC,EAAC/B,GAAA,MAAAA,EAAQ,SAEX+B,EAAK,QAAU,cACZmB,EAAAA,OAAAA,WAAA,CACE,SACCnD,EAAAF,EAAA,OAAC,SAAA,CACC,QAAS,IACP+C,EACEb,GAAA,YAAAA,EAAM,MACNA,GAAA,YAAAA,EAAM,MACNA,GAAA,YAAAA,EAAM,aACR,EAEF,UACEA,GAAA,YAAAA,EAAM,WACLA,GAAA,YAAAA,EAAM,aAAa/B,GAAA,YAAAA,EAAQ,YAC1B,EAACA,GAAA,MAAAA,EAAQ,UACXyD,EAAA1B,GAAA,YAAAA,EAAM,QAAN,YAAA0B,EAAa,SAAU,QACvBrD,GACAD,EAGD,SAAS2B,EAAAC,GAAA,YAAAA,EAAM,KAAK,GAAI/B,GAAA,YAAAA,EAAQ,QACjC+B,EAAK,gBAAkB9B,EAClBJ,EAAAA,OAAAqD,EAAAA,SAAA,CAAA,SAAAnB,GAAA,MAAAA,EAAM,QAAU,cAAgBA,GAAA,YAAAA,EAAM,OAAzC,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAjB,MAAiD,EAE9CjB,EAAAA,OAAAqD,EAAAA,SAAA,CAAA,SAAAnB,GAAA,MAAAA,EAAM,QAAU,eAAiBA,GAAA,YAAAA,EAAM,MAA1C,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAiD,EAAAjB,MAAA,CAAA,EArBrD,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAAA,EAyBAjB,EAAA,OAAC,SAAA,CACC,QAAS,IACP+C,EACEb,GAAA,YAAAA,EAAM,MACNA,GAAA,YAAAA,EAAM,MACNA,GAAA,YAAAA,EAAM,aACR,EAEF,UACEA,GAAA,YAAAA,EAAM,WACLA,GAAA,YAAAA,EAAM,aAAa/B,GAAA,YAAAA,EAAQ,YAC1B,EAACA,GAAA,MAAAA,EAAQ,UACX0D,EAAA3B,GAAA,YAAAA,EAAM,QAAN,YAAA2B,EAAa,SAAU,QACvBtD,GACAD,EAGD,SAAA2B,EAASC,GAAA,YAAAA,EAAM,KAAK,GAAI/B,GAAA,YAAAA,EAAQ,OAC/BH,EAAAA,OAAAqD,EAAA,SAAA,CAAG,SAAMnB,GAAA,MAAAA,EAAA,QAAU,cAAgBA,GAAA,YAAAA,EAAM,SAAzC,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAjB,MAAiD,EAE9CjB,EAAAA,OAAAqD,EAAAA,SAAA,CAAA,SAAAnB,GAAA,MAAAA,EAAM,QAAU,eAAiBA,GAAA,YAAAA,EAAM,MAA1C,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAiD,EAAAjB,MAAA,CAAA,EApBrD,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAAA,GA3BJ,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAmDA,EAAAA,MAAA,EAEHiB,EAAK,QAAU,uBACb,SAAO,CAAA,QAASC,EAAY,SAA7B,YAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAuC,EAAAlB,MAAA,WAGxC,KACE,CAAA,SAAA,EAAAiB,GAAA,YAAAA,EAAM,SAAU,aACdlC,EAAAA,OAAA,OAAA,CAAK,SAAN,eAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAmBiB,MAAA,EAElBjB,EAAA,OAAA,OAAA,CAAK,SAAN,UAAA,EAAA,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAc,EAAAiB,MAAA,EAGfiB,GAAA,YAAAA,EAAM,SAAS,IAAI,CAAC4B,EAAchC,IACjC9B,EAAAA,OAAC,KACC,CAAA,SAAAA,EAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,IAAE8D,CAAA,GAAR,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAA7C,MAAgB,GADTa,EAAT,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAAb,MAEA,EACD,GAXH,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAYA,EAAAA,MAAA,CAAA,GAzIF,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EA0IA,EAAAA,MAAA,CAAA,CAAA,EA7IKqC,EAVP,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,EAAA,EAAArC,MAAA,EAyJD,CAAA,EA/JH,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,CAAA,EAAAA,MAAA,GADF,OAAA,GAAA,CAAA,SAAA,mGAAA,WAAA,IAAA,aAAA,CAkKA,EAAAA,MAAA,CAEJ,EC1eM8C,EAAkBC,EAAY,EAQ9BC,GAAQ,CAAC,CAAE,gBAAAC,EAAiB,eAAAC,EAAiB,GAAI,kBAAAC,EAAoB,IAAM,CAAC,KAAgB,CAChG,MAAMxD,EAAWC,KACXwD,EAASC,KACT5D,EAAWC,KACX4D,EAAa,IAAI,gBAAgB7D,EAAS,MAAM,EAAE,IAAI,eAAe,EACrE8D,EAAW,IAAI,gBAAgB9D,EAAS,MAAM,EAAE,IAAI,SAAS,EAC7D+D,EAAY,IAAI,gBAAgB/D,EAAS,MAAM,EAAE,IAAI,MAAM,EAC3DgE,EAAW,IAAI,gBAAgBhE,EAAS,MAAM,EAAE,IAAI,OAAO,EAC3DiE,EAAM,IAAI,gBAAgBjE,EAAS,MAAM,EAAE,IAAI,OAAO,EACtD,CAACR,EAAS0E,CAAU,EAAInE,WAAgB,GAAA+D,GAAY,QAAUN,EAA+B,EAC7FW,EAAYC,GAAaC,GAAiBA,EAAM,KAAK,SAAS,EAC9DC,EAAcF,GAAaC,GAAiBA,EAAM,KAAK,cAAc,EACpDD,GAAaC,GAAiBA,EAAM,KAAK,MAAM,EACtE,KAAM,CAAC7C,EAAM+C,CAAO,EAAIxE,EAAA,SAAc,CAAE,CAAA,EAClC,CAACL,EAAU8E,CAAW,EAAIzE,WAAc,EAAE,EAC1C,CAACN,EAAQgF,CAAS,EAAI1E,EAAA,SAAc,CAAE,CAAA,EACtC,CAAC2E,EAASC,CAAU,EAAI5E,WAAkB,EAAK,EAC/C,CAAC6E,EAAaC,CAAc,EAAI9E,WAAkB,EAAI,EACtD,CAACJ,EAAgBmF,CAAiB,EAAI/E,WAAc,EAAE,EACtD,CAACgF,EAAcC,CAAe,EAAIjF,EAAA,SAAc,CAAE,CAAA,EAClD,CAACkF,EAAOC,CAAQ,EAAInF,WAAc,EAAE,EACpC,CAACH,EAASuF,CAAU,EAAIpF,WAAS,EAAK,EACtC,CAACqF,GAAcC,EAAe,EAAItF,EAAS,SAAA,EAAAgE,CAAwB,EAEnE,CAACuB,GAAWC,EAAY,EAAIxF,WAAkB,EAAK,EACnD,CAACyF,GAAYC,EAAa,EAAI1F,WAAkB,EAAK,EACrD,CAAC2F,GAAMC,EAAO,EAAI5F,WAAiB,EAAE,EACrC,CAAC8B,GAAO+D,CAAQ,EAAI7F,EAAAA,SAAS,OAAOiE,CAAQ,GAAK,CAAC,EAClD6B,EAAcC,KACd,CAACC,EAAQC,EAAS,EAAIjG,WAASkE,CAAG,EAClC,CAACgC,GAAYC,EAAa,EAAInG,WAAS,EAAE,EACzC,CAAC6B,GAAUuE,CAAY,EAAIpG,EAAAA,SAASgE,GAAa,EAAE,EACnDqC,EAAiBC,KAEvBxF,EAAAA,UAAU,IAAM,0GACd,GAAIuF,EAAe,UAAW,CAC5B,MAAMlE,EAAWkE,EAAe,KAC5BlE,GAAYA,EAAS,KAAK,QAC5BoE,GACE,QACApE,EAAS,KAAK,MACd,GACAoB,EAAAA,EAAe,IAAfA,YAAAA,EAAe,cACf,GAAA,EAEFgD,GACE,QACApE,EAAS,KAAK,MACd,GACAoB,EAAAA,EAAe,IAAfA,YAAAA,EAAe,YACf,GAAA,GAGE,MAAAiD,GACJ,CAACjD,EAAY,EAAE,QAAQP,EAAAb,EAAS,KAAK,KAAK,eAAnB,YAAAa,EAAiC,eAE7CO,IAAc,MACvBN,EAAAd,EAAS,KAAK,KAAK,kBAAnB,MAAAc,EAAoC,MACpCC,EAAAf,EAAS,KAAK,KAAK,eAAnB,MAAAe,EAAiC,KACrBK,IAAc,MAC1BJ,GAAAhB,EAAS,KAAK,KAAK,aAAnB,MAAAgB,GAA+B,sBAC/BC,GAAAjB,EAAS,KAAK,KAAK,UAAnB,MAAAiB,GAA4B,qBAEhC,MAAMqD,GAAWlD,EAAc,EAAA,MAC3BmD,IAAAC,IAAAC,GAAAzE,EAAS,KAAK,OAAd,YAAAyE,GAAoB,kBAApB,YAAAD,GAAqC,WAArC,YAAAD,GAA+C,aAC/CG,IAAAC,IAAAC,GAAA5E,EAAS,KAAK,OAAd,YAAA4E,GAAoB,eAApB,YAAAD,GAAkC,WAAlC,YAAAD,GAA4C,YAEhDV,GAAcM,EAAQ,EACNxB,EAAA9C,EAAS,KAAK,IAAI,EAUlCqC,IAAQwC,IAAAC,IAAAC,GAAA/E,GAAA,YAAAA,EAAU,OAAV,YAAA+E,GAAgB,OAAhB,YAAAD,GAAsB,eAAtB,YAAAD,GAAoC,OAAQ,CAAA,CAAE,EACtDtC,IAAUyC,IAAAC,IAAAC,EAAAlF,GAAA,YAAAA,EAAU,OAAV,YAAAkF,EAAgB,OAAhB,YAAAD,GAAsB,kBAAtB,YAAAD,GAAuC,OAAQ,CAAA,CAAE,EAC3DpC,GAAkBuC,IAAAC,GAAAC,GAAArF,GAAA,YAAAA,EAAU,OAAV,YAAAqF,GAAgB,OAAhB,YAAAD,EAAsB,kBAAtB,YAAAD,GAAuC,eAAe,EACxEnC,GAASsC,IAAAC,IAAAC,GAAAxF,GAAA,YAAAA,EAAU,OAAV,YAAAwF,GAAgB,OAAhB,YAAAD,GAAsB,eAAtB,YAAAD,GAAoC,eAAe,EAE5DhD,GAAYmD,IAAAC,IAAAC,GAAA3F,EAAS,OAAT,YAAA2F,GAAe,OAAf,YAAAD,GAAqB,kBAArB,YAAAD,GAAsC,aAAa,EAE/D,MAAMG,GAAYxE,EAAc,EAAA,MAC5ByE,IAAAC,IAAAC,IAAAC,GAAAhG,GAAA,YAAAA,EAAU,OAAV,YAAAgG,GAAgB,OAAhB,YAAAD,GAAsB,kBAAtB,YAAAD,GAAuC,OAAvC,YAAAD,GAA6C,WAC7CI,IAAAC,IAAAC,IAAAC,GAAApG,GAAA,YAAAA,EAAU,OAAV,YAAAoG,GAAgB,OAAhB,YAAAD,GAAsB,eAAtB,YAAAD,GAAoC,OAApC,YAAAD,GAA0C,UAEtC,QAAA,IAAI,UAAU3E,EAAiBM,CAAQ,GAE7CgE,KAAc,eACdA,KAAc,YACdA,KAAc,eACdA,KAAczE,EAAgB,YAC9BkD,KAAU,SAGVrC,EAAW,EAAI,EAEjBW,EAAe,EAAK,CACtB,CAAA,EACC,CAACuB,EAAe,IAAI,CAAC,EAExBvF,EAAAA,UAAU,IAAM,CACR,MAAA0H,EAASC,GAAGnF,EAAgB,eAAgB,CAChD,aAAc,GACd,WAAY,CAAC,WAAW,CAAA,CACzB,EAEMkF,EAAA,GAAG,UAAW,IAAM,CACzB,QAAQ,IAAI,iBAAiB,EAC7BrI,EAASiC,EAAU,QAAQ,UAAU,EAAI,CAAC,CAAA,CAC3C,EAEDoG,EAAO,KAAK,QAAS,CAAE,UAAApE,CAAsB,CAAA,EACtCoE,EAAA,GAAG,QAAUE,GAAQ,iHAC1B,MAAMC,EAAmBpE,EAAY,SAC/BqE,EAAcrE,EAAY,OAC1BsE,EAActE,EAAY,IAWhC,GAVQ,QAAA,IACN,eACAvB,IAAAD,IAAAD,GAAA4F,EAAI,OAAJ,YAAA5F,GAAU,sBAAV,YAAAC,GAA+B,QAA/B,YAAAC,GAAsC,KAAK,GAAG,KAAK,IACnDI,IAAAD,IAAAD,IAAAD,GAAAyF,EAAI,OAAJ,YAAAzF,GAAU,SAAV,YAAAC,GAAkB,QAAlB,YAAAC,GAAyB,KAAK,GAAG,OAAjC,YAAAC,GAAuC,EAAA,EAGjC,QAAA,IAAI,iBAAkBsF,EAAI,IAAI,EACtC5C,EAAY,kBAAkB,CAC5B,SAAU,CAAC,YAAY,CAAA,CACxB,IAECY,IAAAC,IAAAC,GAAA8B,EAAI,OAAJ,YAAA9B,GAAU,sBAAV,YAAAD,GAA+B,QAA/B,YAAAD,GAAsC,KAAK,GAAG,KAAK,QACnDQ,IAAAL,IAAAC,GAAAC,GAAA2B,EAAI,OAAJ,YAAA3B,GAAU,SAAV,YAAAD,EAAkB,QAAlB,YAAAD,GAAyB,KAAK,GAAG,OAAjC,YAAAK,GAAuC,IACvC,CACAsB,EAAO,IAAI,SAAS,EACpBA,EAAO,WAAW,EAClBrI,EAASiC,EAAU,QAAQ,UAAU,EAAK,CAAC,EAC3CgD,EAAW,EAAK,EAEhB,MACF,CACI,OAAO,OAAO,IAAO,YAChB,OAAA,GAAG,QAAS,aAAc,CAC/B,MAAOhB,CAAA,CACR,EAEH0E,GAA2B,CACzB,QACEzB,IAAAL,GAAAC,GAAAyB,EAAI,OAAJ,YAAAzB,GAAU,sBAAV,YAAAD,EAA+B,QAA/B,YAAAK,GAAsC,KAAK,GAAG,KAAK,MACnD/D,EAAgB,UACZ,WACA,UACN,WAAYc,GAAa,GACzB,YAAWmD,IAAAC,IAAAL,IAAAC,GAAAsB,EAAI,OAAJ,YAAAtB,GAAU,SAAV,YAAAD,GAAkB,QAAlB,YAAAK,GAAyB,KAAK,GAAG,OAAjC,YAAAD,GAAuC,WAAY,GAC9D,YAAWE,IAAAC,IAAAC,IAAAL,GAAAoB,EAAI,OAAJ,YAAApB,GAAU,SAAV,YAAAK,GAAkB,QAAlB,YAAAD,GAAyB,KAAK,GAAG,OAAjC,YAAAD,GAAuC,KAAM,GACxD,cAAaI,IAAAC,GAAAY,EAAI,OAAJ,YAAAZ,GAAU,SAAV,YAAAD,GAAkB,WAAY,GAC3C,kBAAiBM,IAAAP,GAAAc,EAAI,OAAJ,YAAAd,GAAU,SAAV,YAAAO,GAAkB,KAAM,GACzC,aAAcQ,GAAe,GAC7B,WAAYE,GAAU,GACtB,QAASD,GAAU,EAAA,CACpB,KAOCL,IAAAP,GAAAC,IAAAC,GAAAQ,EAAI,OAAJ,YAAAR,GAAU,SAAV,YAAAD,GAAkB,QAAlB,YAAAD,EAAyB,KAAK,GAAG,OAAjC,YAAAO,GAAuC,MACrCjF,EAAgB,eAClByF,IAAAX,IAAAC,IAAAC,GAAAI,EAAI,OAAJ,YAAAJ,GAAU,SAAV,YAAAD,GAAkB,QAAlB,YAAAD,GAAyB,KAAK,GAAG,OAAjC,YAAAW,GAAuC,MACrCzF,EAAgB,aAElBnD,EACEiC,EAAU,QAAQ,cAAc,CAC9B,KAAM,GACN,UAAW,UACX,QAAS,iCAAA,CACV,CAAA,EAGLgD,EAAW,EAAK,EAChBjF,EAASiC,EAAU,QAAQ,UAAU,EAAK,CAAC,EAC3CoG,EAAO,IAAI,SAAS,EACpBA,EAAO,WAAW,CAAA,CACnB,CACH,EAAG,CAAE,CAAA,EAEL1H,EAAAA,UAAU,IAAM,CACT2C,IACCK,GAAcA,EAAW,KAAK,EAAE,QAAU,GAC5CsB,EAAW,EAAI,EAEjBxB,EAAO,WAAW,GAEpBH,GAAmBE,EAAkB,MAAM,CAC7C,EAAG,CAAE,CAAA,EAEC,MAAAqF,EAAkB,MAAOnH,EAAUC,IAAU,CACjDsE,EAAavE,CAAQ,EACrB+C,EAAW,EAAI,EACfiB,EAAS/D,CAAK,EACdsD,EAAW,EAAI,EAGX,GAAA,CACE,IAAA3D,GAAA,YAAAA,EAAM,OAAQK,EAAO,CAMvB,MAAMmH,EAAY,MAAM/G,GAAU,0BAJrB,CACX,MAAAgD,EACA,UAAWrD,CAAA,CAEoD,EACjE1B,EACEiC,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,UACX,WAAY,oCACZ,aACE,kFACF,gBAAiB,eAAA,CAClB,CAAA,CACH,KACK,CACL,MAAM/B,EAAO,CACX,WAAA6F,EAAA,EAEFZ,GAAgB,EAAI,CAgCtB,OACY,CAAA,QACZ,CACAV,EAAW,EAAK,CAClB,CAAA,EAIIlD,EAAa,SAAY,CAC7BC,GAAM,KAAK,OACXA,GAAM,QAAQ,KACZ,OACA,sEAAA,EAEF,MAAMO,GAAU,kBAAmB,CACjC,UAAAkC,EACA,aAAc3C,EAAK,IAAA,CACpB,CAAA,EAID,OAAAlC,EAAA,OAACqD,WAAA,CACG,SAAA,EAAkBa,EAAAC,IAAmB,OAAS,IAAOnE,EAAA,OAAC2J,GAAO,IAAP,CACtD,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,WAAY,CAAE,SAAU,CAAE,EAC1B,UAAU,oDAGT,SAAA,CAAA,CAACzF,GAAmBlE,EAAA,OAACF,GAAe,CAAA,MAAO,mBAAvB,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAA4C,EAAAmB,MAAA,EAChEqE,WACEsE,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAA3I,MAAa,EAGVjB,SAAAqD,EAAAA,SAAA,CAAA,SAAAW,IAAc,KACbhE,EAAAA,OAACqD,WAAA,CACC,SAAA,CAACrD,EAAAA,OAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,yCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAA2C,EAAAiB,MAAA,EAE3CjB,EAAAA,OAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,UACEE,EAAU,gBAAkB,yBAE/B,SAAA,SAAA,EAJD,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAe,MAMA,EACAjB,EAAA,OAAC,QAAA,CACC,UAAU,yBACV,SAAU,IAAM,CACd4E,EAAW,CAAC1E,CAAO,CACrB,EAEA,SAAA,CAACF,SAAA,QAAA,CAAM,KAAK,WAAW,QAAAE,GAAvB,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAyC,EAAAe,MAAA,EACzCjB,EAAA,OAAC,OAAK,CAAA,UAAU,qBAAhB,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAsC,EAAAiB,MAAA,CAAA,CAAA,EAPxC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAQA,EACAjB,EAAA,OAAC,OAAA,CACC,UACEE,EAAU,wBAA0B,eAEvC,SAAA,QAAA,EAJD,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAe,MAMA,CAAA,GAvBF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAwBA,EAAAA,MAAA,EACAjB,EAAA,OAAC,KAAE,SAAH,qCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAsC,EAAAiB,MAAA,CAAA,GA5BxC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EA6BA,EAAAA,MAAA,EACAjB,EAAA,OAACC,GAAA,CACC,QAAAC,EACA,OAAAC,EACA,SAAAC,EACA,eAAAC,EACA,QAAAC,CAAA,EALF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAW,MAMA,GACEd,EAAO,YAAc,YACrBA,EAAO,YAAc,aAEnBH,EAAA,OAAAqD,WAAA,CAAA,SAAA,CAAArD,EAAA,OAAC,MAAA,CACC,UAAW,2DACTgG,GAAY,iBAAmB,EACjC,GAEA,SAAA,CAAAhG,SAAC,OAAI,UAAU,sBACZ,SACCgG,GAAAhG,EAAA,OAACqD,WAAA,CACC,SAAA,CAAArD,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,gHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,sCACF,OAAO,QACP,YAAY,GAAA,EAHd,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAIA,CAAA,CAAA,EAfF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAgBA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAqB,EAAAiB,MAAA,WACpB,IAAG,CAAA,SAAA,CAAAmF,GAAK,8BAAA,GAAT,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAqC,EAAAnF,MAAA,CAAA,GAFvC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,CAAA,GArBF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAsBA,EAAAA,MAAA,EAECoC,EAAAA,OAAAA,EAAAA,SAAA,CACC,SAAA,CAAArD,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,cACF,MAAM,KACN,OAAO,SACP,GAAG,UACH,KAAK,SAAA,EALP,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAMA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,wtCACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,s3EACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,wxCACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAGA,CAAA,CAAA,EAzBF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA0BA,WACC,MAAI,CAAA,UAAU,iBACb,SAAAjB,EAAAA,OAAC,MAAG,SAAJ,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAqB,CADvB,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,CAAA,GA/BF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAgCA,CA1DJ,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EA4DA,EAAAA,MAAA,EACC+E,GACChG,EAAA,OAAC,IAAE,CAAA,UAAU,KAAK,SAAlB,SAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAyBiB,MAAA,EAExBjB,EAAA,OAAA,IAAA,CAAE,UAAU,KAAK,QAAS,IAAMmG,GAAc,EAAI,EAAG,SAAtD,YAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAlF,MAAA,CAAA,CAAA,EAvEJ,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAyEA,EACCiF,IACClG,EAAA,OAAC6J,GAAA,CACC,aAAA5D,GACA,cAAAE,GACA,QAAAE,EAAA,EAHF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAApF,MAIA,CAAA,GAhFJ,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAkFA,EAAAA,MAAA,CAAA,GA1HJ,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA4HA,EAECoC,SAAAA,EAAAA,SAAA,CACC,SAACrD,EAAA,OAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,yCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAA2C,EAAAiB,MAAA,EAE3CjB,EAAAA,OAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,UACEE,EAAU,gBAAkB,yBAE/B,SAAA,SAAA,EAJD,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAe,MAMA,EACAjB,EAAA,OAAC,QAAA,CACC,UAAU,yBACV,SAAU,IAAM,CACd4E,EAAW,CAAC1E,CAAO,CACrB,EAEA,SAAA,CAACF,SAAA,QAAA,CAAM,KAAK,WAAW,QAAAE,GAAvB,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAyC,EAAAe,MAAA,EACzCjB,EAAA,OAAC,OAAK,CAAA,UAAU,qBAAhB,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAsC,EAAAiB,MAAA,CAAA,CAAA,EAPxC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAQA,EACAjB,EAAA,OAAC,OAAA,CACC,UACEE,EAAU,wBAA0B,eAEvC,SAAA,QAAA,EAJD,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAe,MAMA,CAAA,GAvBF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAwBA,EAAAA,MAAA,EACAjB,EAAA,OAAC,KAAE,SAAH,qCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAsC,EAAAiB,MAAA,CAAA,GA5BxC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EA6BA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,sBACb,SAAA,CAAAA,EAAA,OAAC,MAAA,CACC,UAAW,mBACRE,KACEgC,GAAA,YAAAA,EAAM,aACL6B,EAAgB,aAChB7B,GAAA,YAAAA,EAAM,aAAc,gBACvB,CAAChC,KACCgC,GAAA,YAAAA,EAAM,aACL6B,EAAgB,cAChB7B,GAAA,YAAAA,EAAM,aAAc,gBACpBA,GAAA,YAAAA,EAAM,aACJ6B,EAAgB,YAClB7B,GAAA,YAAAA,EAAM,aAAc,YACpB,aACA,EACN,IAEA,SAAA,CAAClC,EAAAA,OAAA,MAAA,CAAI,UAAU,iBACV,SAAA,EACDE,IAAAgC,GAAA,YAAAA,EAAM,aACJ6B,EAAgB,YACjB,CAAC7D,KACCgC,GAAA,YAAAA,EAAM,aACL6B,EAAgB,cAChB7B,GAAA,YAAAA,EAAM,aACJ6B,EAAgB,YAClB7B,GAAA,YAAAA,EAAM,aAAc,cACvBlC,EAAA,OAAA,MAAA,CAAI,UAAW,wBACb,SAAAkC,GAAA,MAAAA,EAAM,MAAQ,aAAe,cADhC,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAjB,MAAA,WAED6I,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAU,EAAA7I,MAAA,CAAA,GAdZ,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAeA,EAAAA,MAAA,EAEAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAAAA,SAAC,KACE,CAAA,SAAA,CAAA,KACAkC,GAAA,YAAAA,EAAM,QAAS,uBACd,WAAY,IAAI,YACR,GAAA,GAJZ,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAKA,EAAAjB,MAAA,EACCjB,SAAA,IAAA,CAAE,UAAU,OAAO,SAApB,oBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAsC,EAAAiB,MAAA,CAAA,GAPxC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAQA,EAAAA,MAAA,EACAjB,SAAC,MACC,CAAA,SAAAA,EAAAA,OAAC,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAI,CADN,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,WACC,MAAI,CAAA,UAAU,SACb,SAACjB,EAAA,OAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,YAAY,SAA3B,WAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAoC,EAAAiB,MAAA,EACpCjB,EAAAA,OAAC,MAAI,CAAA,UAAU,aACf,SAAA,CAAAA,SAAC,OACI,CAAA,UAAAkC,GAAA,YAAAA,EAAM,SAAU,IAEblC,EAAA,OAAAqD,WAAA,CAAA,SAAA,CAAArD,EAAAA,OAAC,MAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAK,EAAAiB,MAAA,EAAM,IAAEf,EAAU,IAAM,EAAA,GAD/B,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAe,MAEA,EAGEjB,EAAAA,OAAAqD,EAAA,SAAA,CAAA,SAAA,CAAArD,EAAAA,OAAC,MAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAK,EAAAiB,MAAA,EAAOf,EAAYF,EAAA,OAAAqD,WAAA,CAAA,SAAA,CAAArD,EAAA,OAAC,OAAI,SAAL,MAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAS,EAAAiB,MAAA,EAAM,OAAA,GAAjB,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAsBA,MAAA,uBAAQ,SAAF,KAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAK,EAAAA,MAAA,CAAA,GADzD,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAEA,CARN,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAUE,EAAAA,MAAA,EACAjB,EAAAA,OAAC,OAAK,CAAA,UAAU,eAAe,SAAA,CAAA,IAC3BE,EAAU,OAAS,OAAA,GADvB,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAe,MAAA,CAAA,GAdF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAeA,EAAAA,MAAA,CAAA,GAjBF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAkBA,CAnBF,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAoBA,EAAAA,MAAA,CAAA,GAjCF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAkCA,EAAAA,MAAA,EAEAjB,EAAA,OAAC,MAAA,CACC,UAAU,WACV,MAAO,CAAE,SAAU,UAAW,EAE9B,SAAA,CAAAA,EAAA,OAAC,SAAA,CACC,UAAU,QACV,QAAS,IAAM,CAEbkE,GAAmBE,EAAkB,SAAS,EAE1ClE,EAAAuJ,EACE1F,EAAgB,WAChB,GAAA,EAEF0F,EACE1F,EAAgB,YAChB,EAAA,CAER,EACA,SACG,EAAC7B,GAAA,MAAAA,EAAM,SACNA,GAAA,YAAAA,EAAM,aACJ6B,EAAgB,YAClB7D,GACD,EAACgC,GAAA,MAAAA,EAAM,SACNA,GAAA,YAAAA,EAAM,aACJ6B,EAAgB,aAClB,CAAC7D,GACHI,GACA8E,EAGD,WAAU,eAAiB,aAAA,EA5B9B,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAnE,MA6BA,EAIAjB,EAAAA,OAAC,IAAE,CAAA,UAAU,QAAQ,SAAA,CAAA,oBACDE,EAAU,YAAc,WAAA,GAD5C,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAe,MAAA,CAAA,CAAA,EAvCF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAwCA,EAEAjB,EAAAA,OAAC,KAAG,CAAA,UAAU,eACZ,SAAA,CAACA,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,aAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAiB,CADnB,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACAjB,EAAA,OAAC,KACC,CAAA,SAAAA,EAAAA,OAAC,OAAM,CAAA,SAAA,CAAAE,EAAU,OAAS,MAAM,aAAA,GAAhC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAe,MAA2C,CAD7C,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACAjB,EAAA,OAAC,KACC,CAAA,SAAAA,EAAAA,OAAC,OAAK,CAAA,SAAA,CAAA,IAAEE,EAAU,QAAU,MAAM,SAAA,GAAlC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAe,MAAyC,CAD3C,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EAOCjB,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,cAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAkB,CADpB,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACCjB,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,eAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAmB,CADrB,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,CAAA,GArBF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAsBA,EAAAA,MAAA,CAAA,CAAA,EAtIF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA4LA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAA,EAAAA,OAAC,MAAI,CAAA,UAAU,iBAEb,SAAAA,EAAA,OAAC+J,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAA9I,MAAY,CAFd,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,iBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAmB,EAAAiB,MAAA,EAClBjB,SAAA,IAAA,CAAE,UAAU,OAAO,SAApB,6BAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAA+C,EAAAiB,MAAA,CAAA,GAFjD,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,WACC,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAI,EAAAA,MAAA,WACH,MAAI,CAAA,UAAU,SACb,SAAAjB,EAAAA,OAAC,QAAK,SAAN,QAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAY,CADd,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,CAAA,GARF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EASA,EAAAA,MAAA,EACAjB,EAAA,OAAC,OAAI,UAAU,WACb,kBAAC,SAAO,CAAA,QAASmC,EAAY,SAA7B,YAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAlB,MAAuC,CADzC,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,KAAG,CAAA,UAAU,eACZ,SAAA,CAACA,EAAA,OAAA,KAAA,CACC,kBAAC,OACE,CAAA,SAAA,CAAA,IAAI,sDAAA,GADP,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAGA,CAJF,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAKA,EAAAA,MAAA,EAOCjB,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,oBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAwB,CAD1B,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACCjB,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,yBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAA6B,CAD/B,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACCjB,EAAAA,OAAA,KAAA,CACC,SAACA,SAAA,OAAA,CAAK,SAAN,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAuB,CADzB,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,CAAA,GArBF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAsBA,EAAAA,MAAA,CAAA,GAxCF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAyCA,EAAAA,MAAA,CAAA,GAvOF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAwOA,EAAAA,MAAA,CAAA,GAvQF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAwQA,CAzQF,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA0QA,CA1YJ,EAAA,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EA4YA,EAAAA,MAAA,CAAA,CAAA,EAxZmD,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA0ZvD,EACC6E,IACC9F,EAAA,OAACgK,GAAA,CACC,aAAAvE,EACA,gBAAAM,GACA,SAAAzD,GACA,WAAAuD,EACA,WAAAR,EACA,UAAW,GACX,MAAA9C,GACA,MAAOkE,EACP,gBAAAvC,EACA,kBAAAE,CAAA,EAVF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,CAAA,EAAAnD,MAWA,CAAA,GAxaJ,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,CA0aA,EAAAA,MAAA,CAEJ,mDCluBA;AACA;AACA;AACA;AACA;AAAA,CAEC,SAAUgJ,EAAMC,EAAS,CAISC,EAAO,QACxCA,EAAiB,QAAAD,EAAQE,EAAiB,EAI1CF,EAAQD,EAAK,MAAM,CAErB,GAAEhJ,GAAM,SAAUoJ,EAAQ,CAIrBA,EAAO,UAAY,QAAaA,EAAO,UAC1CA,EAASA,EAAO,SASjB,IAAIC,EAAU,SACbC,EAAQ,CAAE,EACVC,EAAQ,CAAE,EACVC,EAAY,CAAE,EACdC,EAAQ,CAAE,EACVC,EAAU,CAAE,EACZC,GAEG,CAACP,GAAU,OAAOA,EAAO,SAAY,WACxCQ,EAAS,8FAA8F,EAGxG,IAAIC,EAAgBT,EAAO,QAAQ,MAAM,GAAG,EAC3CU,EAAQ,CAACD,EAAc,CAAC,EACxBE,EAAQ,CAACF,EAAc,CAAC,GAGrBC,EAAQ,GAAMA,IAAU,GAAKC,EAAQ,IACxCH,EAAS,wEAA0ER,EAAO,QAAU,oBAAoB,EAOzH,SAASY,EAAcC,EAAU,CAChC,OAAIA,EAAW,GACPA,EAAW,GACRA,EAAW,GACdA,EAAW,GAEZA,EAAW,EAClB,CAED,SAASC,EAAaC,EAAQ,CAC7B,IAAI9H,EAAI,EACP+H,EAAQD,EAAO,MAAM,GAAG,EACxBE,EAAQD,EAAM,CAAC,EACfE,EAAaF,EAAM,CAAC,GAAK,GACzBG,EAAa,EACbC,EACAC,EAAM,EACNC,EAAO,EASR,IANIP,EAAO,WAAW,CAAC,IAAM,KAC5B9H,EAAI,EACJqI,EAAO,IAIHrI,EAAGA,EAAIgI,EAAM,OAAQhI,IACzBmI,EAAMR,EAAcK,EAAM,WAAWhI,CAAC,CAAC,EACvCoI,EAAM,GAAKA,EAAMD,EAIlB,IAAKnI,EAAI,EAAGA,EAAIiI,EAAW,OAAQjI,IAClCkI,EAAaA,EAAa,GAC1BC,EAAMR,EAAcM,EAAW,WAAWjI,CAAC,CAAC,EAC5CoI,GAAOD,EAAMD,EAGd,OAAOE,EAAMC,CACb,CAED,SAASC,EAAYC,EAAO,CAC3B,QAASvI,EAAI,EAAGA,EAAIuI,EAAM,OAAQvI,IACjCuI,EAAMvI,CAAC,EAAI6H,EAAaU,EAAMvI,CAAC,CAAC,CAEjC,CAED,SAASwI,EAAYD,EAAOE,EAAQ,CACnC,QAASzI,EAAI,EAAGA,EAAIyI,EAAQzI,IAC3BuI,EAAMvI,CAAC,EAAI,KAAK,OAAOuI,EAAMvI,EAAI,CAAC,GAAK,GAAMuI,EAAMvI,CAAC,EAAI,GAAM,EAG/DuI,EAAME,EAAS,CAAC,EAAI,GACpB,CAED,SAASC,EAAYC,EAAQC,EAAS,CACrC,IAAIR,EAAM,CAAE,EAAEpI,EAEd,IAAKA,EAAI,EAAGA,EAAI4I,EAAQ,OAAQ5I,IAC/BoI,EAAIpI,CAAC,EAAI2I,EAAOC,EAAQ5I,CAAC,CAAC,EAG3B,OAAOoI,CACP,CAED,SAASS,EAAQf,EAAQ,CACxB,IAAItK,EAAOsK,EAAO,MAAM,GAAG,EAC1BgB,EAAUtL,EAAK,CAAC,EAAE,MAAM,GAAG,EAC3BoL,EAAUpL,EAAK,CAAC,EAAE,MAAM,EAAE,EAC1BuL,EAAUvL,EAAK,CAAC,EAAE,MAAM,GAAG,EAE5B,OAAA8K,EAAWQ,CAAO,EAClBR,EAAWM,CAAO,EAClBN,EAAWS,CAAM,EAEjBP,EAAWO,EAAQH,EAAQ,MAAM,EAE1B,CACN,KAAapL,EAAK,CAAC,EACnB,MAAakL,EAAWlL,EAAK,CAAC,EAAE,MAAM,GAAG,EAAGoL,CAAO,EACnD,QAAaF,EAAWI,EAASF,CAAO,EACxC,OAAaG,EACb,WAAavL,EAAK,CAAC,EAAI,CAC1B,CACE,CAMD,SAASwL,EAAMC,EAAc,CACxBA,GACH,KAAK,KAAKJ,EAAOI,CAAY,CAAC,CAE/B,CAED,SAASC,EAASf,EAAKgB,EAAK,CAC3B,IAAIC,EAAMD,EAAI,OACd,GAAIhB,EAAMgB,EAAI,CAAC,EACd,MAAO,GACD,GAAIC,EAAM,GAAKD,EAAIC,EAAM,CAAC,IAAM,KAAYjB,GAAOgB,EAAIC,EAAM,CAAC,EACpE,OAAOA,EAAM,EACP,GAAIjB,GAAOgB,EAAIC,EAAM,CAAC,EAC5B,MAAO,GAMR,QAHIC,EACAC,EAAK,EACLC,EAAKH,EAAM,EACRG,EAAKD,EAAK,GAChBD,EAAM,KAAK,OAAOC,EAAKC,GAAM,CAAC,EAC1BJ,EAAIE,CAAG,GAAKlB,EACfmB,EAAKD,EAELE,EAAKF,EAGP,OAAOE,CACP,CAEDP,EAAK,UAAY,CAChB,KAAO,SAAUQ,EAAU,CAC1B,KAAK,KAAaA,EAAS,KAC3B,KAAK,MAAaA,EAAS,MAC3B,KAAK,OAAaA,EAAS,OAC3B,KAAK,QAAaA,EAAS,QAC3B,KAAK,WAAaA,EAAS,UAC3B,EAED,OAAS,SAAUC,EAAW,CAC7B,IAAIC,EAAS,CAACD,EACbV,EAAS,KAAK,OACd/I,EAGD,GADAA,EAAIkJ,EAAQQ,EAAQX,CAAM,EACtB/I,GAAK,EACR,OAAOA,CAER,EAED,UAAY,UAAY,CACvB,IAAI2J,EAAY,KAAK,KACrB,OAAO,OAAO,KAAKxC,CAAS,EAAE,OAAO,SAAUyC,EAAc,CAC5D,OAAOzC,EAAUyC,CAAY,EAAE,MAAM,QAAQD,CAAS,IAAM,EAChE,CAAI,CACD,EAED,MAAQ,SAAUF,EAAW,CAC5B,IAAIC,EAAU,CAACD,EACdX,EAAU,KAAK,QACfC,EAAU,KAAK,OACfc,EAAUd,EAAO,OAAS,EAC1Be,EAAQC,EAAYC,EAAYhK,EAEjC,IAAKA,EAAI,EAAGA,EAAI6J,EAAK7J,IAWpB,GAVA8J,EAAahB,EAAQ9I,CAAC,EACtB+J,EAAajB,EAAQ9I,EAAI,CAAC,EAC1BgK,EAAalB,EAAQ9I,GAAIA,EAAI,CAAK,EAE9B8J,EAASC,GAAcE,EAAG,qBAC7BH,EAASC,EACCD,EAASE,GAAcC,EAAG,qBACpCH,EAASE,GAGNN,EAASX,EAAO/I,CAAC,EAAK8J,EAAS,IAClC,OAAOhB,EAAQ9I,CAAC,EAIlB,OAAO8I,EAAQe,CAAG,CAClB,EAED,KAAO,SAAUK,EAAK,CACrB,OAAO,KAAK,MAAM,KAAK,OAAOA,CAAG,CAAC,CAClC,EAED,OAAS,SAAUA,EAAK,CACvB,OAAA3C,EAAS,4DAA4D,EAC9D,KAAK,QAAQ,KAAK,OAAO2C,CAAG,CAAC,CACpC,EAED,UAAY,SAAUA,EAAK,CAC1B,OAAO,KAAK,QAAQ,KAAK,OAAOA,CAAG,CAAC,CACpC,CACH,EAMC,SAASC,EAASC,EAAcC,EAAY,CAC3C,KAAK,KAAOD,EACZ,KAAK,MAAQC,CACb,CAMD,SAASC,EAASC,EAAI,CACrB,IAAIC,EAAaD,EAAG,eAChBE,EAAOD,EAAW,MAAM,cAAc,EACtCC,GAAQA,EAAK,CAAC,GAGjBA,EAAOA,EAAK,CAAC,EAAE,MAAM,QAAQ,EAC7BA,EAAOA,EAAOA,EAAK,KAAK,EAAE,EAAI,SAI9BA,EAAOD,EAAW,MAAM,aAAa,EACrCC,EAAOA,EAAOA,EAAK,CAAC,EAAI,QAGrBA,IAAS,QACZA,EAAO,QAGR,KAAK,GAAK,CAACF,EACX,KAAK,KAAOE,EACZ,KAAK,OAASF,EAAG,mBACjB,CAED,SAASG,EAAUC,EAAM,CACxB,KAAK,KAAOA,EACZ,KAAK,YAAc,EACnB,KAAK,UAAY,CACjB,CAEDD,EAAU,UAAU,cAAgB,SAAUE,EAAU,CACvD,KAAK,aAAe,KAAK,IAAI,KAAK,KAAK,UAAUA,EAAS,EAAE,EAAIA,EAAS,MAAM,EAC3E,KAAK,KAAK,KAAKA,EAAS,EAAE,EAAE,QAAQ,UAAW,EAAE,IAAMA,EAAS,MACnE,KAAK,WAER,EAEC,SAASC,EAAWC,EAAKC,EAAM,CAG9B,QAFI1B,EAAK2B,EAEDA,IAASD,EAAK,GAAKD,EAAI,IAAM,KAAO,GAAK,KAChDzB,EAAM,IAAIiB,EAAS,IAAI,KAAKQ,EAAI,GAAKE,CAAI,CAAC,EACtC3B,EAAI,SAAWyB,EAAI,OACtBA,EAAMzB,EAEN0B,EAAO1B,EAIT,OAAOyB,CACP,CAED,SAASG,GAAc,CACtB,IAAIC,EAAY,IAAI,OAAO,YAAa,EAAG,EAC1CC,EAAO,IAAIb,EAAS,IAAI,KAAKY,EAAW,EAAG,CAAC,CAAC,EAC7CE,EAAaD,EAAK,OAClBrC,EAAU,CAACqC,CAAI,EACfE,EAAQC,EAAMC,EAAYvL,EAE3B,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IACnBuL,EAAa,IAAI,KAAKL,EAAWlL,EAAG,CAAC,EAAE,oBACnCuL,IAAeH,IAElBE,EAAO,IAAIhB,EAAS,IAAI,KAAKY,EAAWlL,EAAG,CAAC,CAAC,EAC7CqL,EAASR,EAAWM,EAAMG,CAAI,EAC9BxC,EAAQ,KAAKuC,CAAM,EACnBvC,EAAQ,KAAK,IAAIwB,EAAS,IAAI,KAAKe,EAAO,GAAK,GAAG,CAAC,CAAC,EACpDF,EAAOG,EACPF,EAAaG,GAIf,IAAKvL,EAAI,EAAGA,EAAI,EAAGA,IAClB8I,EAAQ,KAAK,IAAIwB,EAAS,IAAI,KAAKY,EAAYlL,EAAG,EAAG,CAAC,CAAC,CAAC,EACxD8I,EAAQ,KAAK,IAAIwB,EAAS,IAAI,KAAKY,EAAYlL,EAAG,EAAG,CAAC,CAAC,CAAC,EAGzD,OAAO8I,CACP,CAED,SAAS0C,EAAgBC,EAAGC,EAAG,CAC9B,OAAID,EAAE,cAAgBC,EAAE,YAChBD,EAAE,YAAcC,EAAE,YAEtBD,EAAE,YAAcC,EAAE,UACdD,EAAE,UAAYC,EAAE,UAEpBD,EAAE,KAAK,aAAeC,EAAE,KAAK,WACzBA,EAAE,KAAK,WAAaD,EAAE,KAAK,WAE5BC,EAAE,KAAK,KAAK,cAAcD,EAAE,KAAK,IAAI,CAC5C,CAED,SAASE,EAAcC,EAAM9C,EAAS,CACrC,IAAI9I,EAAG8J,EAEP,IADAxB,EAAWQ,CAAO,EACb9I,EAAI,EAAGA,EAAI8I,EAAQ,OAAQ9I,IAC/B8J,EAAShB,EAAQ9I,CAAC,EAClBqH,EAAQyC,CAAM,EAAIzC,EAAQyC,CAAM,GAAK,CAAA,EACrCzC,EAAQyC,CAAM,EAAE8B,CAAI,EAAI,EAEzB,CAED,SAASC,EAAuB/C,EAAS,CACxC,IAAIgD,EAAgBhD,EAAQ,OAC3BiD,EAAkB,CAAE,EACpB3D,EAAM,CAAE,EACR4D,EAAiB,CAAE,EACnBhM,EAAGiM,EAAGnC,EAAQoC,EAEf,IAAKlM,EAAI,EAAGA,EAAI8L,EAAe9L,IAE9B,GADA8J,EAAShB,EAAQ9I,CAAC,EAAE,OAChB,CAAAgM,EAAe,eAAelC,CAAM,EAGxC,CAAAoC,EAAgB7E,EAAQyC,CAAM,GAAK,GACnC,IAAKmC,KAAKC,EACLA,EAAc,eAAeD,CAAC,IACjCF,EAAgBE,CAAC,EAAI,IAGvBD,EAAelC,CAAM,EAAI,GAG1B,IAAK9J,KAAK+L,EACLA,EAAgB,eAAe/L,CAAC,GACnCoI,EAAI,KAAKhB,EAAMpH,CAAC,CAAC,EAInB,OAAOoI,CACP,CAED,SAAS+D,GAAgB,CAGxB,GAAI,CACH,IAAIC,EAAW,KAAK,eAAgB,EAAC,gBAAe,EAAG,SACvD,GAAIA,GAAYA,EAAS,OAAS,EAAG,CACpC,IAAIR,EAAOxE,EAAMiF,EAAcD,CAAQ,CAAC,EACxC,GAAIR,EACH,OAAOA,EAERrE,EAAS,yBAA2B6E,EAAW,wDAAwD,CACvG,CACD,MAAW,CAEX,CAED,IAAItD,EAAUmC,EAAa,EAC1Ba,EAAgBhD,EAAQ,OACxBzB,EAAUwE,EAAsB/C,CAAO,EACvCwD,EAAa,CAAE,EACfC,EAAWvM,EAAGiM,EAEf,IAAKjM,EAAI,EAAGA,EAAIqH,EAAQ,OAAQrH,IAAK,CAEpC,IADAuM,EAAY,IAAI7B,EAAU8B,EAAQnF,EAAQrH,CAAC,CAAC,CAAgB,EACvDiM,EAAI,EAAGA,EAAIH,EAAeG,IAC9BM,EAAU,cAAczD,EAAQmD,CAAC,CAAC,EAEnCK,EAAW,KAAKC,CAAS,CACzB,CAED,OAAAD,EAAW,KAAKd,CAAc,EAEvBc,EAAW,OAAS,EAAIA,EAAW,CAAC,EAAE,KAAK,KAAO,MACzD,CAED,SAASG,EAAOC,EAAa,CAC5B,OAAI,CAACpF,GAAeoF,KACnBpF,EAAc6E,EAAY,GAEpB7E,CACP,CAMD,SAAS+E,EAAeT,EAAM,CAC7B,OAAQA,GAAQ,IAAI,YAAa,EAAC,QAAQ,MAAO,GAAG,CACpD,CAED,SAASe,EAASC,EAAQ,CACzB,IAAI5M,EAAG4L,EAAMiB,EAAOC,EAMpB,IAJI,OAAOF,GAAW,WACrBA,EAAS,CAACA,CAAM,GAGZ5M,EAAI,EAAGA,EAAI4M,EAAO,OAAQ5M,IAC9B6M,EAAQD,EAAO5M,CAAC,EAAE,MAAM,GAAG,EAC3B4L,EAAOiB,EAAM,CAAC,EACdC,EAAaT,EAAcT,CAAI,EAC/B3E,EAAM6F,CAAU,EAAIF,EAAO5M,CAAC,EAC5BoH,EAAM0F,CAAU,EAAIlB,EACpBD,EAAamB,EAAYD,EAAM,CAAC,EAAE,MAAM,GAAG,CAAC,CAE7C,CAED,SAASL,EAASZ,EAAMmB,EAAQ,CAE/BnB,EAAOS,EAAcT,CAAI,EAEzB,IAAIjB,EAAO1D,EAAM2E,CAAI,EACjBoB,EAEJ,OAAIrC,aAAgB3B,EACZ2B,EAGJ,OAAOA,GAAS,UACnBA,EAAO,IAAI3B,EAAK2B,CAAI,EACpB1D,EAAM2E,CAAI,EAAIjB,EACPA,GAIJzD,EAAM0E,CAAI,GAAKmB,IAAWP,IAAYQ,EAAOR,EAAQtF,EAAM0E,CAAI,EAAGY,CAAO,IAC5E7B,EAAO1D,EAAM2E,CAAI,EAAI,IAAI5C,EACzB2B,EAAK,KAAKqC,CAAI,EACdrC,EAAK,KAAOvD,EAAMwE,CAAI,EACfjB,GAGD,IACP,CAED,SAASsC,IAAY,CACpB,IAAIjN,EAAGoI,EAAM,GAEb,IAAKpI,KAAKoH,EACLA,EAAM,eAAepH,CAAC,IAAMiH,EAAMjH,CAAC,GAAKiH,EAAMC,EAAMlH,CAAC,CAAC,IAAMoH,EAAMpH,CAAC,GACtEoI,EAAI,KAAKhB,EAAMpH,CAAC,CAAC,EAInB,OAAOoI,EAAI,MACX,CAED,SAAS8E,IAAmB,CAC3B,OAAO,OAAO,KAAK/F,CAAS,CAC5B,CAED,SAASgG,GAASC,EAAS,CAC1B,IAAIpN,EAAGqN,EAAOC,EAASC,EAMvB,IAJI,OAAOH,GAAY,WACtBA,EAAU,CAACA,CAAO,GAGdpN,EAAI,EAAGA,EAAIoN,EAAQ,OAAQpN,IAC/BqN,EAAQD,EAAQpN,CAAC,EAAE,MAAM,GAAG,EAE5BsN,EAAUjB,EAAcgB,EAAM,CAAC,CAAC,EAChCE,EAAUlB,EAAcgB,EAAM,CAAC,CAAC,EAEhCnG,EAAMoG,CAAO,EAAIC,EACjBnG,EAAMkG,CAAO,EAAID,EAAM,CAAC,EAExBnG,EAAMqG,CAAO,EAAID,EACjBlG,EAAMmG,CAAO,EAAIF,EAAM,CAAC,CAEzB,CAED,SAASG,GAAchQ,EAAM,CAC5B,IAAIwC,EAAG4J,EAAc6D,EAAeZ,EACpC,GAAI,GAACrP,GAAQ,CAACA,EAAK,QACnB,IAAKwC,EAAI,EAAGA,EAAIxC,EAAK,OAAQwC,IAC5B6M,EAAQrP,EAAKwC,CAAC,EAAE,MAAM,GAAG,EACzB4J,EAAeiD,EAAM,CAAC,EAAE,YAAW,EACnCY,EAAgBZ,EAAM,CAAC,EAAE,MAAM,GAAG,EAClC1F,EAAUyC,CAAY,EAAI,IAAIO,EAC7BP,EACA6D,CACJ,CAEE,CAED,SAASC,GAAY9B,EAAM,CAC1B,OAAAA,EAAOA,EAAK,cACLzE,EAAUyE,CAAI,GAAK,IAC1B,CAED,SAAS+B,GAAgBC,EAASC,EAAa,CAG9C,GAFAD,EAAUF,GAAWE,CAAO,EAExB,CAACA,EAAS,OAAO,KAErB,IAAI3G,EAAQ2G,EAAQ,MAAM,KAAI,EAE9B,OAAIC,EACI5G,EAAM,IAAI,SAAU0C,EAAW,CACrC,IAAIgB,EAAO6B,EAAQ7C,CAAS,EAC5B,MAAO,CACN,KAAMA,EACN,OAAQgB,EAAK,UAAU,IAAI,IAAM,CACtC,CACA,CAAI,EAGK1D,CACP,CAED,SAAS6G,GAAUtQ,EAAM,CACxBmP,EAAQnP,EAAK,KAAK,EAClB2P,GAAQ3P,EAAK,KAAK,EAClBgQ,GAAahQ,EAAK,SAAS,EAC3ByM,EAAG,YAAczM,EAAK,OACtB,CAED,SAASuQ,GAAYnC,EAAM,CAC1B,OAAKmC,GAAW,eACfA,GAAW,aAAe,GACzBxG,EAAS,yBAA2BqE,EAAO,uDAAyDA,EAAO,IAAI,GAE1G,CAAC,CAACY,EAAQZ,CAAI,CACrB,CAED,SAASoC,GAAaC,EAAG,CACxB,IAAIC,EAAmBD,EAAE,KAAO,KAAOA,EAAE,KAAO,IAChD,MAAO,CAAC,EAAEA,EAAE,IAAOA,EAAE,OAAS,QAAc,CAACC,EAC7C,CAED,SAAS3G,EAAU4G,EAAS,CACvB,OAAO,QAAY,KAAe,OAAO,QAAQ,OAAU,YAC9D,QAAQ,MAAMA,CAAO,CAEtB,CAMD,SAASlE,EAAImE,EAAO,CACnB,IAAIC,EAAO,MAAM,UAAU,MAAM,KAAK,UAAW,EAAG,EAAE,EACrDzC,EAAO,UAAU,UAAU,OAAS,CAAC,EACrCxD,EAAOrB,EAAO,IAAI,MAAM,KAAMsH,CAAI,EAClC1D,EAED,MAAI,CAAC5D,EAAO,SAASqH,CAAK,GAAKJ,GAAY5F,CAAG,IAAMuC,EAAO6B,EAAQZ,CAAI,IACtExD,EAAI,IAAIuC,EAAK,MAAMvC,CAAG,EAAG,SAAS,EAGnCA,EAAI,GAAGwD,CAAI,EAEJxD,CACP,CAED6B,EAAG,QAAejD,EAClBiD,EAAG,YAAe,GAClBA,EAAG,OAAehD,EAClBgD,EAAG,OAAe/C,EAClB+C,EAAG,OAAe7C,EAClB6C,EAAG,WAAa9C,EAChB8C,EAAG,IAAe0C,EAClB1C,EAAG,KAAekD,GAClBlD,EAAG,KAAe6D,GAClB7D,EAAG,KAAeuC,EAClBvC,EAAG,WAAe8D,GAClB9D,EAAG,MAAewC,EAClBxC,EAAG,MAAegD,GAClBhD,EAAG,KAAejB,EAClBiB,EAAG,OAAepB,EAClBoB,EAAG,aAAepC,EAClBoC,EAAG,YAAe+D,GAClB/D,EAAG,mBAAuB,GAC1BA,EAAG,qBAAuB,GAC1BA,EAAG,UAAeiD,GAClBjD,EAAG,gBAAkB0D,GAMrB,IAAIW,EAAKvH,EAAO,GAEhBA,EAAO,GAAKkD,EAEZlD,EAAO,YAAc,KAErBA,EAAO,aAAe,SAAUmD,EAAKqE,EAAU,CAC9C,IAAI5D,EAAO5D,EAAO,YACjB+C,EASD,GAPII,EAAI,KAAO,SACVS,GAAQqD,GAAY9D,CAAG,GAAK,CAACA,EAAI,QAAUA,EAAI,YAClDA,EAAI,GAAKnD,EAAO,IAAImD,EAAI,EAAE,EAAE,GAC5BA,EAAI,IAAK,EAAC,IAAIS,EAAK,MAAMT,CAAG,EAAG,SAAS,GAEzCA,EAAI,GAAKS,GAENT,EAAI,GAKP,GAJAJ,EAASI,EAAI,GAAG,UAAUA,CAAG,EACzB,KAAK,IAAIJ,CAAM,EAAI,KACtBA,EAASA,EAAS,IAEfI,EAAI,YAAc,OAAW,CAChC,IAAIsE,EAAItE,EAAI,GACZA,EAAI,UAAU,CAACJ,EAAQyE,CAAQ,EAC/BrE,EAAI,GAAKsE,CACb,MACItE,EAAI,KAAKJ,EAAQyE,CAAQ,CAG7B,EAECD,EAAG,GAAK,SAAU1C,EAAM2C,EAAU,CACjC,GAAI3C,EAAM,CACT,GAAI,OAAOA,GAAS,SACnB,MAAM,IAAI,MAAM,wCAA0CA,EAAO,KAAO,OAAOA,EAAO,GAAG,EAE1F,YAAK,GAAKY,EAAQZ,CAAI,EAClB,KAAK,GACR7E,EAAO,aAAa,KAAMwH,CAAQ,EAElChH,EAAS,mCAAqCqE,EAAO,0DAA0D,EAEzG,IACP,CACD,GAAI,KAAK,GAAM,OAAO,KAAK,GAAG,IAChC,EAEC,SAAS6C,GAAUC,EAAK,CACvB,OAAO,UAAY,CAClB,OAAI,KAAK,GAAa,KAAK,GAAG,KAAK,IAAI,EAChCA,EAAI,KAAK,IAAI,CACvB,CACE,CAED,SAASC,GAAeD,EAAK,CAC5B,OAAO,UAAY,CAClB,YAAK,GAAK,KACHA,EAAI,MAAM,KAAM,SAAS,CACnC,CACE,CAED,SAASE,GAAgBF,EAAK,CAC7B,OAAO,UAAY,CAClB,OAAI,UAAU,OAAS,IAAG,KAAK,GAAK,MAC7BA,EAAI,MAAM,KAAM,SAAS,CACnC,CACE,CAEDJ,EAAG,SAAYG,GAASH,EAAG,QAAQ,EACnCA,EAAG,SAAYG,GAASH,EAAG,QAAQ,EACnCA,EAAG,IAAYK,GAAcL,EAAG,GAAG,EACnCA,EAAG,MAAYK,GAAcL,EAAG,KAAK,EACrCA,EAAG,UAAYM,GAAeN,EAAG,SAAS,EAE1CvH,EAAO,GAAG,WAAa,SAAS6E,EAAM,CACrC,OAAInE,EAAQ,GAAMA,IAAU,GAAKC,EAAQ,IACxCH,EAAS,qFAAuFR,EAAO,QAAU,GAAG,EAErHA,EAAO,YAAc6E,EAAOY,EAAQZ,CAAI,EAAI,KACrC7E,CACT,EAGC,IAAI8H,GAAmB9H,EAAO,iBAC9B,OAAI,OAAO,UAAU,SAAS,KAAK8H,EAAgB,IAAM,kBAExDA,GAAiB,KAAK,IAAI,EAC1BA,GAAiB,KAAK,IAAI,GAChBA,KAEVA,GAAiB,GAAK,MAKhB9H,CACR,CAAC,s5vvBCxtBD,IAAIA,GAAS+H,GAAc,QAAGhI,GAC9BC,GAAO,GAAG,KAAKgI,EAAoC,oCCD7CC,GAAU,IAEZtS,EAAA,OAAC,MAAI,CAAA,MAAM,6BAA6B,MAAM,MAAM,OAAO,MAAM,QAAQ,cAAc,KAAK,OAC1F,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,mTACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,EAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,ivCACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,EAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,49KACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,gDAAgD,KAAK,SAA7D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAuE,EAAAiB,MAAA,EACvEjB,EAAA,OAAC,OAAA,CACC,EAAE,m6BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAyE,EAAAiB,MAAA,EACxEjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,63BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC1EjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,m6BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC1EjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,m6BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC1EjB,SAAA,OAAA,CAAK,EAAE,iDAAiD,KAAK,SAA9D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAwE,EAAAiB,MAAA,EACxEjB,EAAA,OAAC,OAAA,CACC,EAAE,63BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,mDAAmD,KAAK,SAAhE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA0E,EAAAiB,MAAA,EAC1EjB,EAAA,OAAC,OAAA,CACC,EAAE,kHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,mHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,k6BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,oHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,sjCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,oHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,6qBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,oHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,88BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,gHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,wzBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,GAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,oHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,msCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,iHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,+/BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,oDAAoD,KAAK,SAAjE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAA2E,EAAAiB,MAAA,EAC3EjB,EAAA,OAAC,OAAA,CACC,EAAE,2rDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,0jCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,k6CACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,8rCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,2mCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,q9CACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,+kDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,+ZACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,omCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,mDAAmD,KAAK,SAAhE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAA0E,EAAAiB,MAAA,EAC1EjB,EAAA,OAAC,OAAA,CACC,EAAE,+mEACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,w+BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,wpCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,2+BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,uyBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,+rBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,8qZACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,CAAA,GAtLF,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,EAAA,aAAA,CAuLA,EAAAA,MAAA,EAMSsR,GAAe,IAC1BvS,EAAA,OAAC,MAAA,CACC,MAAO,IACP,OAAQ,IACR,QAAQ,cACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,mTACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,6uCACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,s/KACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,05BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,u4BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,iDAAiD,KAAK,SAA9D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAwE,EAAAiB,MAAA,EACxEjB,EAAA,OAAC,OAAA,CACC,EAAE,o3BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,mDAAmD,KAAK,SAAhE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAA0E,EAAAiB,MAAA,EACzEjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,05BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,05BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,mHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,kHACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,o6BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,yGACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,kjCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,4GACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,mDAAmD,KAAK,SAAhE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAA0E,EAAAiB,MAAA,EAC1EjB,EAAA,OAAC,OAAA,CACC,EAAE,grBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,6GACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,g9BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,yGACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,wzBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,2GACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,msCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,8GACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,kDAAkD,KAAK,SAA/D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAyE,EAAAiB,MAAA,EACzEjB,EAAA,OAAC,OAAA,CACC,EAAE,+/BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,oDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,6rDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,ikCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,65CACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,ksCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,ymCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,q9CACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,gmDACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,maACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,iDAAiD,KAAK,SAA9D,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAwE,EAAAiB,MAAA,EACxEjB,EAAA,OAAC,OAAA,CACC,EAAE,omCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACCjB,SAAA,OAAA,CAAK,EAAE,mDAAmD,KAAK,SAAhE,EAAA,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAA0E,EAAAiB,MAAA,EAC1EjB,EAAA,OAAC,OAAA,CACC,EAAE,2mEACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,k/BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,ypCACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,4+BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,0yBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,wsBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,6yZACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAiB,MAGA,CAAA,CAAA,EAnOF,OAAA,GAAA,CAAA,SAAA,uFAAA,WAAA,IAAA,aAAA,CAAA,EAAAA,MAoOA,EC3ZF,SAASuR,GAAeC,EAAY,CAClC,KAAM,CAAE,UAAAC,EAAW,YAAAC,EAAa,kBAAAC,CAAA,EAA6BH,EAG3D,OAAAzS,EAAA,OAAC,MAAI,CAAA,UAAU,0DACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,oCAAoC,SAAnD,uDAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAAwG,EAAA,IAAA,EACvGA,EAAA,OAAA,MAAA,CAAI,UAAU,8CACZ,SAAU0S,EAAA,IAAKG,GACd,SAAA,OAAAA,EAAM,MAAQ,oBAAsBA,EAAM,MAAQ,YAChD7S,EAAA,OAAC,MAAA,CAEC,WACEuD,EAAAoP,EAAYE,EAAM,GAAG,IAArB,MAAAtP,EAAwB,UACpBC,EAAAmP,EAAYE,EAAM,GAAG,IAArB,MAAArP,EAAwB,SACtB,8BACA,qBACF,8BAEN,QAAS,IAAMmP,EAAYE,EAAM,GAAG,EAAE,UAAYD,EAAkBC,EAAM,GAAG,EAE7E,SAAA,CAAC7S,EAAA,OAAA,MAAA,CAAI,UAAU,gCACb,SAACA,EAAAA,OAAA,OAAA,CAAK,UAAU,WAAY,SAAA8S,GAAWD,EAAM,GAAG,GAAhD,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAkD,CADpD,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAEA,EAAA,IAAA,EACA7S,EAAAA,OAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAAAA,EAAAA,OAAC,MAAI,CAAA,UAAU,wBAAyB,SAAA6S,EAAM,IAA9C,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAmD,EAAA,IAAA,EAClD7S,SAAA,MAAA,CAAI,UAAU,wBACb,kBAAC,MAAI,CAAA,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,MAAM,6BAChE,SAAA,CAACA,EAAAA,OAAA,OAAA,CAAK,MAAM,KAAK,OAAO,KAAK,GAAG,KAAK,KAAK,SAA1C,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAoD,EAAA,IAAA,EACpDA,EAAA,OAAC,OAAA,CACC,EAAE,kXACF,KAAK,OAAA,EAFP,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAGA,CAAA,GALF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAMA,CAPF,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAQA,EAAA,IAAA,CAAA,GAVF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAWA,EAAA,IAAA,CAAA,CAAA,EAxBK6S,EAAM,IADb,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAA,EA4BH,CA/BH,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAgCA,EAAA,IAAA,CAAA,GAlCF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAmCA,EAAA,IAAA,CAEJ,CCpCA,SAASE,GAAeN,EAAc,CACpC,KAAM,CAAE,UAAAC,EAAW,YAAAC,EAAa,UAAAK,EAAW,aAAAC,EAAc,eAAAC,EAAe,SAAAC,CAAa,EAAAV,EAEnF,OAAAzS,EAAA,OAAC,MAAI,CAAA,UAAU,qFACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,qCAAqC,SAApD,6EAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAA+H,EAAA,IAAA,EAC/HA,EAAAA,OAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,GAAG,OAAO,UAAU,2CACtB,SAAU0S,EAAA,OAAO,CAACU,EAAUP,KACvBF,EAAYE,EAAM,GAAG,EAAE,UACrBO,EAAA,KACFpT,EAAAA,OAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,EAAAA,OAAC,OAAI,UAAU,+BAAgC,SAAW8S,GAAAD,EAAM,GAAG,CAAnE,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAqE,EAAA,IAAA,EACrE7S,EAAAA,OAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAA,EAAAA,OAAC,MAAI,CAAA,UAAU,uBAAwB,SAAA6S,EAAM,IAA7C,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAkD,EAAA,IAAA,EAClD7S,EAAAA,OAAC,MAAI,CAAA,UAAU,gCAAgC,SAAA,CAAA,IAC3C6S,EAAM,MAAMI,CAAY,WACzB,OAAK,CAAA,SAAA,CAAA,IACFJ,EAAM,MAAQ,OAAS,OAASA,EAAM,KAAKI,CAAY,EACxDJ,EAAM,KAAO,MAAA,GAFhB,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAGA,EAAA,IAAA,CAAA,GALF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAMA,EAAA,IAAA,CAAA,GARF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EASA,EAAA,IAAA,EACA7S,EAAAA,OAAC,MAAI,CAAA,UAAU,6DACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,yBAAyB,SAAA,CAAA,gBAErC6S,EAAM,MAAQ,WACXF,EAAYE,EAAM,GAAG,EAAE,SACrB,UACA,WACFF,EAAYE,EAAM,GAAG,EAAE,SAAWA,EAAM,KAAKI,CAAY,CAAA,GAN/D,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAOA,EAAA,IAAA,EACAjT,EAAAA,OAAC,OAAI,UAAU,8CACZ,WAAM,MAAQ,oBACZqD,WACC,CAAA,SAAArD,EAAA,OAAC,SAAA,CACC,UAAU,oBACV,QAAS,IAAMkT,EAAeL,EAAM,IAAMF,EAAYE,EAAM,GAAG,EAAE,mBAAkC,WAAb,UAAuB,EAE5G,SAACF,EAAYE,EAAM,GAAG,EAAE,mBAA6B,SAAR,KAAQ,EAJxD,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAA,GADF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAOA,EAAA,IAAA,WAECxP,EACC,SAAA,CAAA,SAAA,CAAArD,SAAC,UAAO,UAAW2S,EAAYE,EAAM,GAAG,EAAE,qBAAuB,EAAI,kCAAoC,0BAA4B,QAAS,IAAMK,EAAeL,EAAM,IAAK,UAAU,EAAG,SAA3L,GAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAEA,EAAA,IAAA,EACC7S,EAAA,OAAA,MAAA,CAAI,UAAU,uBACZ,SAAY2S,EAAAE,EAAM,GAAG,EAAE,mBAAqBA,EAAM,KAAKI,CAAY,CADtE,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAEA,EAAA,IAAA,EACAjT,EAAAA,OAAC,UAAO,UAAW2S,EAAYE,EAAM,GAAG,EAAE,qBAAuBF,EAAYE,EAAM,GAAG,EAAE,SAAW,kCAAoC,0BAA2B,QAAS,IAAMK,EAAeL,EAAM,IAAK,UAAU,EAAG,SAAxN,GAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAEA,EAAA,IAAA,CAAA,GATF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAUA,CArBJ,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAuBA,EAAA,IAAA,CAAA,GAhCF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAiCA,EAAA,IAAA,CAAA,GA5CF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EA6CA,EAAA,IAAA,CAAA,GA/C4CA,EAAM,IAApD,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAgDA,EAAA,IAAA,CAAA,EAEGO,GACN,EAAE,CAvDP,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAwDA,EAAA,IAAA,WACC,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAAI,EAAA,IAAA,EACJpT,EAAAA,OAAC,MAAI,CAAA,UAAU,kDACb,SAAA,CAAAA,EAAAA,OAAC,MAAI,CAAA,UAAU,mCACb,SAAAA,EAAAA,OAAC,KAAE,SAAH,iCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAkC,CADpC,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAGA,EAAA,IAAA,WACC,MACC,CAAA,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,8CACb,SAAA,CAAAA,EAAAA,OAAC,OAAI,UAAU,6BACb,SAACA,EAAA,OAAA,MAAA,CAAI,UAAU,uDACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,6BAA6B,SAA5C,MAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAgD,EAAA,IAAA,EAC/CA,SAAA,MAAA,CAAI,UAAU,6BAA6B,SAA5C,UAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAoD,EAAA,IAAA,EACnDA,SAAA,MAAA,CAAI,UAAU,6BAA6B,SAA5C,OAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAiD,EAAA,IAAA,CAAA,GAHnD,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAIA,CALF,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAMA,EAAA,IAAA,EACAA,SAAC,OAAI,UAAU,6BACZ,WAAU,OAAO,CAACoT,EAAUP,KACvBF,EAAYE,EAAM,GAAG,EAAE,UACrBO,EAAA,KACFpT,EAAAA,OAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,yDACZ,SAAA,CAAM6S,EAAA,KACP7S,EAAAA,OAAC,MAAI,CAAA,UAAU,6CAA6C,SAAA,CAAA,gBAE7D6S,EAAM,MAAQ,WACXF,EAAYE,EAAM,GAAG,EAAE,SACrB,UACA,WACFF,EAAYE,EAAM,GAAG,EAAE,SAAWA,EAAM,KAAKI,CAAY,CAAA,GAN3D,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAOJ,EAAA,IAAA,CAAA,GATE,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAUE,EAAA,IAAA,EACDjT,EAAA,OAAA,MAAA,CAAI,UAAU,6DACZ,SAAM6S,EAAA,KAAKI,CAAY,EAAIN,EAAYE,EAAM,GAAG,EAAE,kBADrD,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAEA,EAAA,IAAA,EACC7S,EAAA,OAAA,MAAA,CAAI,UAAU,gGACjB,SAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,8CACZ,SAAM6S,EAAA,MAAQ,WACb7S,EAAAA,OAACqD,EACC,SAAA,CAAA,SAAArD,EAAA,OAAC,SAAA,CACC,UAAU,oBACV,QAAS,IAAMkT,EAAeL,EAAM,IAAMF,EAAYE,EAAM,GAAG,EAAE,mBAAkC,WAAb,UAAuB,EAE5G,SAACF,EAAYE,EAAM,GAAG,EAAE,mBAA6B,SAAR,KAAQ,EAJxD,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAA,GADF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAOA,EAAA,IAAA,WAECxP,EACC,SAAA,CAAA,SAAA,CAACrD,EAAA,OAAA,SAAA,CAAO,UAAU,0BAA0B,QAAS,IAAMkT,EAAeL,EAAM,IAAK,UAAU,EAAG,SAAlG,GAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAEA,EAAA,IAAA,EACC7S,EAAA,OAAA,MAAA,CAAI,UAAU,uBACZ,SAAY2S,EAAAE,EAAM,GAAG,EAAE,mBAAqBA,EAAM,KAAKI,CAAY,CADtE,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAEA,EAAA,IAAA,EACAjT,EAAA,OAAC,SAAO,CAAA,UAAU,0BAA0B,QAAS,IAAMkT,EAAeL,EAAM,IAAK,UAAU,EAAG,SAAlG,GAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAEA,EAAA,IAAA,CAAA,GATF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAUA,CArBJ,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAuBA,CAxBE,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAyBJ,EAAA,IAAA,EACI7S,EAAAA,OAAC,MAAI,CAAA,UAAU,8CAA8C,SAAA,CAAA,IACzD6S,EAAM,MAAMI,CAAY,EAAIN,EAAYE,EAAM,GAAG,EAAE,kBAAA,GADvD,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAEA,EAAA,IAAA,CAAA,GA3C8CA,EAAM,IAAtD,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EA4CA,EAAA,IAAA,CAAA,EAEGO,GACN,EAAE,CAnDP,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAoDA,EAAA,IAAA,EACApT,EAAA,OAAC,MAAI,CAAA,UAAU,mBAAf,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAmC,EAAA,IAAA,CAAA,GA7DrC,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EA8DA,EAAA,IAAA,EACAA,EAAAA,OAAC,MAAI,CAAA,UAAU,8EACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,6BAA6B,SAA5C,gBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAA0D,EAAA,IAAA,EAC1DA,EAAAA,OAAC,MAAI,CAAA,UAAU,2CAA2C,SAAA,CAAA,IAAEgT,EAAU,YAAA,GAAtE,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAmF,EAAA,IAAA,CAAA,GAFrF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAGA,EAAA,IAAA,EACAhT,EAAAA,OAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,6BAA6B,SAA5C,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAA6D,EAAA,IAAA,EAC7DA,EAAAA,OAAC,MAAI,CAAA,UAAU,qDAAqD,SAAA,CAAA,IAAEgT,EAAU,aAAeA,EAAU,YAAA,GAAzG,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAsH,EAAA,IAAA,CAAA,GAFxH,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAGA,EAAA,IAAA,EACAhT,EAAAA,OAAC,MAAI,CAAA,UAAU,+CACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,6BAA6B,SAA5C,gBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAA0D,EAAA,IAAA,EAC1DA,EAAAA,OAAC,MAAI,CAAA,UAAU,2CAA2C,SAAA,CAAA,IAAEgT,EAAU,YAAA,GAAtE,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAmF,EAAA,IAAA,CAAA,GAFrF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAGA,EAAA,IAAA,CAAA,GAZF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAaA,EAAA,IAAA,WACC,MAAI,CAAA,UAAU,wBACb,SAAChT,EAAA,OAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,2DACb,SAAA,CAAAA,SAAC,IACC,CAAA,SAAA,CAAAA,EAAA,OAAC,QAAK,SAAN,cAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAkB,EAAA,IAAA,EAAO,gBAAA,GAD3B,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAEA,EAAA,IAAA,EACAA,EAAAA,OAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,MAAM,6BAChE,SAAA,CAACA,EAAAA,OAAA,IAAA,CAAE,SAAS,0BACV,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,07BACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAIC,EACDA,EAAA,OAAC,OAAA,CACC,EAAE,ygBACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAIC,EACDA,EAAA,OAAC,OAAA,CACC,EAAE,+kBACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAIC,CAAA,GAfH,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAgBA,EAAA,IAAA,EACCA,SAAA,OAAA,CACC,SAACA,EAAA,OAAA,WAAA,CAAS,GAAG,oBACX,SAACA,EAAA,OAAA,OAAA,CAAK,MAAM,KAAK,OAAO,KAAK,KAAK,OAAlC,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAA0C,CAD5C,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAEA,CAHF,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAIA,EAAA,IAAA,CAAA,GAtBF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAuBA,EAAA,IAAA,EACAA,EAAAA,OAAC,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,+EAC+B,SAAQ,CAAA,SAAAqK,GAAO8I,CAAQ,EAAE,OAAO,cAAc,CAA/C,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAkD,EAAA,IAAA,EAAS,GAAA,GADhI,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAEA,EAAA,IAAA,CAAA,GA3BF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EA4BA,EAAA,IAAA,CAAA,GAhCF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAiCA,EAAA,IAAA,EACAnT,EAAAA,OAAC,MAAI,CAAA,UAAU,sDAAsD,SAAA,CAAA,IAAEgT,EAAU,QAAA,GAAjF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAA0F,EAAA,IAAA,CAAA,GAnC5F,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAoCA,CArCF,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAsCA,EAAA,IAAA,CAAA,GArDF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,IAAA,aAAA,EAsDA,EAAA,IAAA,CAAA,GAtHF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,EAuHA,EAAA,IAAA,CAAA,GA5HF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CA6HA,EAAA,IAAA,CAAA,GAxLF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAyLA,EAAA,IAAA,CAAA,GA3LF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CA4LA,EAAA,IAAA,CAEJ,CC1MA,SAASK,GAAeZ,EAAY,CAC5B,KAAA,CAAE,gBAAAa,EAAiB,sBAAAC,CAAiC,EAAAd,EAGxD,OAAAzS,EAAA,OAAC,MAAI,CAAA,UAAU,iEACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,sDACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,8BAA8B,SAA7C,gDAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAA2F,EAAA,IAAA,EAC1FA,SAAA,MAAA,CAAI,UAAU,iCAAiC,SAAhD,yCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAAuF,EAAA,IAAA,CAAA,GAFzF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAGA,EAAA,IAAA,WACC,MAAI,CAAA,UAAU,8CACb,SAAAA,EAAAA,OAAC,YAAS,YAAY,eAAe,MAAOsT,EAAiB,SAAWE,GAAUD,EAAsBC,EAAM,OAAO,KAAK,CAA1H,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAA6H,CAD/H,EAAA,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAEA,EAAA,IAAA,CAAA,GAPF,OAAA,GAAA,CAAA,SAAA,0HAAA,WAAA,GAAA,aAAA,CAQA,EAAA,IAAA,CAEJ,CCoBA,MAAMC,GACJ,OAAO,WAAa,IAChB,CAAC,iBAAkB,iBAAkB,eAAe,EACnD,CACC,uBACA,kBACA,qBACF,EAEAC,GAAaD,GAAM,OAGzB,SAASE,GAAUlB,EAAc,CACzB,KAAA,CACJ,UAAAC,EACA,UAAAkB,EACA,cAAAC,EACA,eAAAC,EACA,aAAAb,EACA,iBAAAc,EACA,aAAAC,EACA,SAAAb,CACE,EAAAV,EACE7R,EAAWC,KACXoT,EAAOjQ,EAAc,EAAA,KACrB,CAACkQ,EAAYC,CAAa,EAAI1T,WAAiB,CAAC,EAChD,CAACkS,EAAayB,CAAc,EAAI3T,EAAA,SAAkC,CAAE,CAAA,EACpE,CAAC6S,EAAiBe,CAAkB,EAAI5T,WAAiB,EAAE,EAC3D,CAAC2E,EAASC,CAAU,EAAI5E,WAAkB,EAAK,EAErDc,EAAAA,UAAU,IAAM,CACd,MAAMoR,EAAuC,CAAA,EACnCD,EAAA,QAASG,GAAiB,CAClC,MAAM/R,EAAYmT,EACdL,EAAU,UAAUf,EAAM,GAAG,GAAK,CAAC,EACnCe,EAAU,WAAWf,EAAM,GAAG,GAAK,CAAA,EACjCyB,EACJzB,EAAM,MAAQ,WAAa,OAAO/R,CAAI,EAAIA,EAAK,SAE3CyT,EAA6BV,EAAc,OAC/C,CAACW,EAAe9K,IACd8K,EACA9K,EAAU,WAAW,OACnB,CAAC+K,EAAkBzS,KACjBA,GAAK,aAAe6Q,EAAM,WAAWI,CAAY,EAC7CwB,EAAWzS,GAAK,SAChByS,EACN,CACF,EACF,CAAA,EAGF9B,EAAYE,EAAM,GAAG,EAAI,CACvB,SAAU,GACV,SAAU,KAAK,IAAIyB,EAAWC,EAAoB,CAAC,EACnD,mBAAoB,KAAK,IAAID,EAAWC,EAAoB,CAAC,CAAA,CAC/D,CACD,EAEDH,EAAezB,CAAW,CAC5B,EAAG,CAAE,CAAA,EAEL,MAAMK,EAAmB0B,EAAA,QACvB,IACEhC,EAAU,OACR,CAACU,EAAYP,IAAiB,CACtB,KAAA,CAAE,IAAA8B,EAAK,MAAApS,CAAU,EAAAsQ,EACjB,CAAE,SAAA+B,EAAU,SAAAN,EAAU,mBAAAC,GAC1B5B,EAAYgC,CAAG,GAAK,GACf,MAAA,CACL,aACEvB,EAAI,cACHwB,EAAWN,EAAW/R,EAAM0Q,CAAY,EAAI,GAC/C,aACEG,EAAI,cACHwB,EAAWL,EAAqBhS,EAAM0Q,CAAY,EAAI,GACzD,SAAUG,EAAI,SAAWmB,EAAqBhS,EAAM0Q,CAAY,CAAA,CAEpE,EACA,CAAE,aAAc,EAAG,aAAc,EAAG,SAAU,CAAE,CAClD,EACF,CAACN,CAAW,CAAA,EAGRkC,EAAsBH,EAAAA,QAAQ,IAC9BR,IAAe,EACV,OAAO,KAAKvB,CAAW,EAAE,KAC7BgC,GAAgBhC,EAAYgC,CAAG,EAAE,UAAYhC,EAAYgC,CAAG,EAAE,QAAA,EAE/DT,IAAe,EACV,OAAO,KAAKvB,CAAW,EAAE,KAC7BgC,GACChC,EAAYgC,CAAG,EAAE,mBAAqBhC,EAAYgC,CAAG,EAAE,QAAA,EAEtD,GACN,CAACT,EAAYvB,CAAW,CAAC,EAEtBC,EAAqBkC,GAAqB,CAC/BV,EAAA,CACb,GAAGzB,EACH,CAACmC,CAAQ,EAAG,CACV,GAAGnC,EAAYmC,CAAQ,EACvB,SAAU,CAACnC,EAAYmC,CAAQ,EAAE,QACnC,CAAA,CACD,CAAA,EAGG5B,EAAiB,CACrB4B,EACAC,IACG,CACG,MAAAT,EAAmBS,IAAW,WAAa,EAAI,GAC/CjU,EAAgB6R,EAAYmC,CAAQ,EAE3BV,EAAA,CACb,GAAGzB,EACH,CAACmC,CAAQ,EAAG,CACV,GAAGhU,EACH,mBAAoB,KAAK,IACvB,KAAK,IAAIA,EAAK,mBAAqBwT,EAAU,CAAC,EAC9CxT,EAAK,QACP,CACF,CAAA,CACD,CAAA,EAGGkU,EAAoBC,GAA+B,CACnDA,IAAc,QAChBd,EAAef,GAAQ,KAAK,IAAI,EAAEA,EAAKM,EAAU,CAAC,EAChDuB,IAAc,QAAQd,EAAef,GAAQ,KAAK,IAAI,EAAEA,EAAK,CAAC,CAAC,CAAA,EAG/D8B,EAAiB,SAAY,CAC7B,GAAA,CACF,GAAI,CAAC5B,EAAiB,MAAM,MAAM,iCAAiC,EACnEjO,EAAW,EAAI,EACf,MAAM8P,EAAoB,CAAA,EACpBtB,EAAuB,CAAA,EA+B7B,GA7BUnB,EAAA,QAASG,GAAiB,CAClC,KAAM,CAAE,SAAA+B,EAAU,SAAAN,EAAU,mBAAAC,CAC1B,EAAA5B,EAAYE,EAAM,GAAG,EACjB,CAAE,WAAAuC,EAAY,MAAA7S,CAAU,EAAAsQ,EAE1B0B,GACFY,EAAW,KAAK,CACd,WAAYC,EAAWnC,CAAY,EACnC,SAAUsB,EACV,MAAOhS,EAAM0Q,CAAY,CAAA,CAC1B,EAECsB,EAAqBD,GACvBT,EAAc,KAAK,CACjB,WAAYuB,EAAWnC,CAAY,EACnC,SAAUqB,EAAWC,EACrB,MAAOhS,EAAM0Q,CAAY,CAAA,CAC1B,CAAA,CACJ,EACea,GAAA,MAAAA,EAAA,QAAShT,GAAS,CAChC+S,EAAc,KAAK,CACjB,WAAY/S,EAAK,WACjB,SAAUA,EAAK,SACf,MAAOA,EAAK,KAAA,CACb,CAAA,GAGH,QAAQ,IAAI+S,CAAa,EAErB,CAACP,EAAiB,MAAM,MAAM,iCAAiC,EAC7D,MAAA3Q,GACJ,aAAasR,EAAO,mBAAqB,gBAAgB,GACzD,CACE,gBAAAX,EACA,OAAQ6B,EACR,WAAYtB,CACd,CAAA,EAEeE,IACjBnT,EACEiC,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,UACX,WAAY,kCACZ,aACE,kFACF,gBAAiB,iBAAA,CAClB,CAAA,EAEUmR,EAACZ,GAAQ,CAACA,CAAG,QACnBtQ,EAAU,CACjB,QAAQ,IAAIA,CAAG,EACflC,EACEiC,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,QACX,WAAY,QACZ,aAAcC,EAAI,OAAA,CACnB,CAAA,CACH,QACA,CACAuC,EAAW,EAAK,CAClB,CAAA,EAIA,OAAArF,EAAA,OAAC,OAAI,UAAU,iCAAiC,QAAS+T,EACvD,SAAA/T,EAAAA,OAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,OAAC,MAAA,CACC,UAAU,iCACV,QAAUqV,GAAMA,EAAE,gBAAgB,EAElC,SAAA,CAAArV,EAAA,OAAC,MAAI,CAAA,UAAU,sBAAsB,QAAS+T,EAC5C,SAAA/T,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAACA,EAAAA,OAAA,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,KAAK,OAApC,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAA4C,EAAA,IAAA,EAC5CA,EAAAA,OAAC,IAAE,CAAA,SAAS,0BACV,SAAAA,EAAA,OAAC,OAAA,CACC,EAAE,+IACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAA,GADF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAKA,EAAA,IAAA,EACCA,SAAA,OAAA,CACC,SAACA,EAAA,OAAA,WAAA,CAAS,GAAG,oBACX,SAAAA,EAAA,OAAC,OAAA,CACC,MAAM,KACN,OAAO,KACP,KAAK,QACL,UAAU,gBAAA,EAJZ,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAA,GADF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAOA,CARF,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EASA,EAAA,IAAA,CAAA,CAAA,EAvBF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAA,GADF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EA0BA,EAAA,IAAA,EACAA,EAAAA,OAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAACA,SAAA,MAAA,CAAI,UAAU,kBAAkB,SAAjC,mBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAkD,EAAA,IAAA,EACjDA,SAAA,MAAA,CAAI,UAAU,2BAA2B,SAA1C,4FAAA,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAGA,EAAA,IAAA,CAAA,GALF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAMA,EAAA,IAAA,EACAA,EAAAA,OAAC,MAAI,CAAA,UAAU,8BACZ,SAAAyT,GAAM,IAAI,CAAC6B,EAAMC,IAChBvV,EAAA,OAACqD,EACC,SAAA,CAAA,SAAA,CAACrD,EAAAA,OAAA,MAAA,CAAI,UAAU,oCACZ,SAAA,CAAAuV,EAAYrB,EACXlU,SAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACA,SAAA,OAAA,CAAM,WAAY,GAAnB,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAqB,EAAA,IAAA,EACrBA,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAAAA,EAAA,OAAC,SAAA,CACC,GAAG,KACH,GAAG,KACH,EAAE,OACF,KAAK,UACL,OAAO,SAAA,EALT,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAMA,EACAA,EAAAA,OAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,KAAK,SAApC,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAA8C,EAAA,IAAA,CAAA,CAAA,EAdhD,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAeA,CAAA,GAjBF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAkBA,EAEAA,SAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAAAA,EAAAA,OAAC,OAAK,CAAA,UAAU,WAAY,SAAAuV,EAAY,CAAxC,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAA0C,EAAA,IAAA,EAC1CvV,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAAAA,EAAA,OAAC,SAAA,CACC,GAAG,KACH,GAAG,KACH,EAAE,OACF,OAAO,UACP,eAAe,QACf,gBAAgB,KAAA,EANlB,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAOA,EACAA,EAAAA,OAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,SAAnC,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAA6C,EAAA,IAAA,CAAA,CAAA,EAf/C,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAgBA,CAAA,GAlBF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAmBA,EAAA,IAAA,EAEFA,EAAA,OAAC,IAAA,CACC,MAAO,CACL,MAAO,GAAGuV,EAAYrB,EAAa,UAAY,SAAS,EAC1D,EAEC,SAAAoB,CAAA,EALH,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAMA,CAAA,GAjDF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAkDA,EAAA,IAAA,EACCC,EAAY,EAAI9B,GAAM,QACrBzT,EAAA,OAAC,MAAA,CACC,MAAM,IACN,OAAO,KACP,QAAQ,WACR,KAAK,OACL,MAAM,6BAEN,SAAAA,EAAA,OAAC,OAAA,CACC,EAAE,8zBACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAGA,CAAA,EAVF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAWA,CAAA,CAAA,EAhEWuV,EAAf,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAkEA,CACD,CArEH,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAsEA,EAAA,IAAA,CAAA,GA9EF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EA+EA,EAAA,IAAA,EACCrB,IAAe,GACdlU,EAAA,OAACwS,GAAA,CACC,UAAAE,EACA,YAAAC,EACA,kBAAAC,CAAA,EAHF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAIA,EAEDsB,IAAe,GACdlU,EAAA,OAAC+S,GAAA,CACC,UAAAL,EACA,YAAAC,EACA,UAAAK,EACA,aAAAC,EACA,eAAAC,EACA,SAAAC,CAAA,EANF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAOA,EAEDe,IAAe,GACdlU,EAAA,OAACqT,GAAA,CACC,gBAAAC,EACA,sBAAuBe,CAAA,EAFzB,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAGA,EAEFrU,EAAAA,OAAC,MAAI,CAAA,UAAU,mCACZ,SAAA,CAAAkU,IAAe,GACdlU,EAAA,OAAC,SAAA,CACC,UAAU,8BACV,QAAS,IAAMgV,EAAiB,MAAM,EACvC,SAAA,MAAA,EAHD,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAKA,EAEDd,IAAeR,GACd1T,EAAA,OAAC,SAAA,CACC,UACE6U,EACI,8BACA,sCAEN,QAAS,IAAMA,GAAcG,EAAiB,MAAM,EACrD,SAAA,MAAA,EAPD,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAA,EAWAhV,EAAA,OAAC,SAAA,CACC,UAAU,gCACV,QAASkV,EAER,WAAU,YAAc,QAAA,EAJ3B,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAKA,CAAA,GA1BJ,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,EA4BA,EAAA,IAAA,CAAA,CAAA,EAlKF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,CAAA,EAAA,IAAA,GADF,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,CAAA,EAAA,IAqKA,CAtKF,EAAA,OAAA,GAAA,CAAA,SAAA,qHAAA,WAAA,IAAA,aAAA,CAuKA,EAAA,IAAA,CAEJ,CCzXA,MAAMnR,GAAkBC,EAAY,EAmBvB8O,GAA2C,CACtD,2BAAoB0C,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAsB,EAAAvU,MAAA,EACzC,gBAASwU,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAY,EAAAxU,MAAA,EACpB,kBAAWyU,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAc,EAAAzU,MAAA,EACxB,SAAU+C,EAAc,EAAA,cAAQ2R,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAA,EAAc1U,MAAA,WAAM2U,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAqB,EAAA3U,MAAA,EACvE,0BAAmB4U,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAsB,EAAA5U,MAAA,EACxC,cAAO6U,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,CAAe,EAAA7U,MAAA,EACrB,aAAM8U,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,CAAS,EAAA9U,MAAA,EACd,sBAAe+U,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAY,EAAA/U,MAAA,EAC1B,qBAAc+U,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAY,EAAA/U,MAAA,EACzB,cAAOgV,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,CAAS,EAAAhV,MAAA,EACf,mBAAYiV,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,GAAA,aAAA,EAAa,EAAAjV,MAAA,CAC1B,EAUMkV,GAAe,CAAC,CACpB,gBAAAjS,EAAkB,GAClB,gBAAAkS,EAAkB,GAClB,mBAAAC,EAAqB,IAAM,CAAC,EAC5B,QAAAC,CACF,IAAa,CAEb,QAAQ,IAAI,EAEJ,MAAArC,EAAOjQ,EAAc,EAAA,KACrBpD,EAAWC,KACX,CAAC0V,EAAQC,CAAS,EAAI/V,WAAkB,EAAK,EACjCqE,GAAaC,GAAiBA,EAAM,KAAK,SAAS,EACpE,KAAM,CAAC6O,EAAW6C,CAAY,EAAIhW,EAAA,SAAc,CAAE,CAAA,EAC5C,CAACiW,EAAWC,CAAY,EAAIlW,EAAA,SAAkB,CAAE,CAAA,EAChD,CAACoT,EAAe+C,CAAgB,EAAInW,EAAA,SAAc,CAAE,CAAA,EACpD,CAACoW,EAASC,CAAU,EAAIrW,WAAiB,CAAC,EAC1C,CAACqT,EAAgBiD,CAAiB,EAAItW,EAAA,SAAc,CAAE,CAAA,EAEtD,CAACwS,EAAc+D,CAAe,EAAIvW,EAAA,SACtC,SAAA,EAEI,CAACwW,EAASC,CAAU,EAAIzW,WAAkB,EAAK,EAC/C,CAAC0W,EAAWC,CAAY,EAAI3W,WAAkB,EAAK,EACnD,CAAC4W,EAAgBC,CAAiB,EAAI7W,WAAkB,EAAK,EAC7D,CAACH,EAASuF,CAAU,EAAIpF,WAAS,EAAK,EACtC,CAAC2E,EAASC,CAAU,EAAI5E,WAAkB,EAAK,EAC/C,CAAC6E,EAAaC,CAAc,EAAI9E,WAAkB,EAAI,EACtD,CAAC0S,EAAUoE,EAAW,EAAI9W,EAAAA,SAAqB,IAAA,KAAA,EAAO,YAAA,CAAa,EACnE,CAAC+W,GAAaC,EAAc,EAAIhX,WAAc,EAAE,EACvC6D,GAAY,EACR,IAAI,gBAAgB,SAAS,MAAM,EAAE,IAAI,eAAe,EAC3E,KAAM,CAACoT,GAAcC,EAAe,EAAIlX,EAAA,SAAiC,CAAE,CAAA,EACrE,CAACmX,GAAaC,EAAc,EAAIpX,EAAc,SAAA,EAE5BA,EAAAA,SAAkB,EAAK,EAC/C,KAAM,CAACqX,GAAOC,EAAQ,EAAItX,WAAkB,EAAI,EAC1CuX,EAAc,CAClB,kBAAmB,EACnB,OAAQ,EACR,SAAU,EACV,SAAU,EACV,iBAAkB,EAClB,KAAM,EACN,IAAK,EACL,aAAc,EACd,YAAa,CAAA,EAETC,EAAgB,CACpB,KAAM,EACN,UAAW,EACX,SAAU,CAAA,EAEN,CAACC,EAAcC,EAAe,EAAI1X,EAAA,SACtCwT,EAAOgE,EAAgBD,CAAA,EAGzBzW,EAAAA,UAAU,IAAM,CACd2C,GAAmBmS,EAAmB,QAAQ,CAChD,EAAG,CAAE,CAAA,EAEL9U,EAAAA,UAAU,IAAM,CACJ6W,IAAA,EACT,CAAC7B,EAAQjW,CAAO,CAAC,EAIpBiB,EAAAA,UAAU,IAAM,CAEZmV,EAAU,KAAM7D,GAAiBqF,EAAarF,EAAM,GAAG,CAAC,GACxD,OAAO,WAAa,IAEpB,EACE,wEAAA,EACA,KACA,QACA,+EAAA,EAGF,EACE,wEAAA,EACA,KAAK,QAAS,6BAA6B,CAC/C,EACC,CAAC6D,EAAU,KAAM7D,GAAiBqF,EAAarF,EAAM,GAAG,CAAC,CAAC,CAAC,EAqC9D,MAAMuF,GAAY,SAAY,wDACxB,GAAA,CACI,MAAAC,EAAiBC,GAAS,mBAAmB,EAC7CC,GAAeD,GACnB,aAAarE,EAAO,cAAgB,WAAW,EAAA,EAE3CuE,GAAeF,GAAS,uBAAuB,EAC/CG,GAAmBH,GAAS,8BAA8B,EAE1D,CAACI,EAAiBC,GAAeC,GAAeC,EAAiB,EACrE,MAAM,QAAQ,IAAI,CAChBR,EACAE,GACAC,GACAC,EAAA,CACD,EA6CC,GA1CFC,GACAC,IACAC,IACAC,IAEAtT,EAAe,EAAK,EAElB0O,GACFsD,IAAYhU,EAAAmV,EAAgB,KAAK,KAAK,aAA1B,YAAAnV,EAAsC,oBAAoB,EACtDoU,IAAAnU,EAAAkV,EAAgB,KAAK,OAArB,YAAAlV,EAA2B,eAAe,EAC1DqU,IAAepU,EAAAiV,EAAgB,KAAK,KAAK,kBAA1B,YAAAjV,EAA2C,KAAK,IAAI,EACnEyT,IACExT,EAAAgV,EAAgB,KAAK,KAAK,kBAA1B,YAAAhV,EAA2C,KAAK,UAC9CC,EAAA+U,EAAgB,KAAK,KAAK,kBAA1B,YAAA/U,EAA2C,KAAK,QAAS,UACzDC,EAAA8U,EAAgB,KAAK,KAAK,kBAA1B,YAAA9U,EAA2C,KAAK,QAC9C,YACF,CAAC,GAACC,EAAA6U,EAAgB,KAAK,KAAK,YAA1B,MAAA7U,EAAqC,YAAA,EAE3CmT,IACE3P,EAAAqR,EAAgB,KAAK,KAAK,kBAA1B,YAAArR,EAA2C,iBAAkB,QACzD,SACA,SAAA,IAGNkQ,IAAYnQ,EAAAsR,EAAgB,KAAK,KAAK,UAA1B,YAAAtR,EAAmC,oBAAoB,EACnDuQ,IAAAxQ,GAAAuR,EAAgB,KAAK,OAArB,YAAAvR,GAA2B,YAAY,EACvD+P,IACE1P,GAAAkR,EAAgB,KAAK,KAAK,eAA1B,YAAAlR,GAAwC,KAAK,UAC3CD,GAAAmR,EAAgB,KAAK,KAAK,eAA1B,YAAAnR,GAAwC,KAAK,QAAS,UACtDD,GAAAoR,EAAgB,KAAK,KAAK,eAA1B,YAAApR,GAAwC,KAAK,QAAS,YACtD,CAAC,GAACK,GAAA+Q,EAAgB,KAAK,KAAK,SAA1B,MAAA/Q,GAAkC,YAAA,EAExCqP,IACEtP,GAAAgR,EAAgB,KAAK,KAAK,eAA1B,YAAAhR,GAAwC,iBAAkB,OACtD,SACA,SAAA,GAGO+P,IAAAhQ,GAAAiR,GAAA,YAAAA,EAAiB,OAAjB,YAAAjR,GAAuB,gBAAgB,EACtDkP,EAAagC,GAAc,KAAK,MAAQ,CAAE,CAAA,EAC1ClC,EAAamC,GAAc,KAAK,MAAQ,CAAE,CAAA,EAC1ChC,EAAiBiC,GAAkB,KAAK,MAAQ,CAAE,CAAA,EAC9CA,GAAkB,KAAK,KAAK,OAAQ,CACtC,MAAMC,IAAkBjR,IAAAC,GAAA+Q,GAAkB,KAAK,OAAvB,YAAA/Q,GACpB,OAAQhH,IAASA,GAAK,cADF,YAAA+G,GAEpB,IAAK/G,IAASA,GAAK,YACpB,OACHiW,EAAkB+B,EAAe,CACnC,CACWhC,EAAA8B,GAAc,KAAK,WAAW,QAClC9V,EAAU,CACjB,QAAQ,IAAIA,CAAG,EACflC,EACEiC,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,QACX,WAAY,UACZ,cAAcoF,IAAAL,GAAA9E,GAAA,YAAAA,EAAK,WAAL,YAAA8E,GAAe,OAAf,YAAAK,GAAqB,gBACnC,gBAAA/D,EACA,aAAAkT,CAAA,CACD,CAAA,CAEL,CAAA,EAGIlE,GAAiB,CACrB4B,EACAC,IACG,CACH,IAAIT,EACF4D,EAAapD,CAAQ,GAAKC,IAAW,WAAa,EAAI,IACpDD,IAAa,aAAuBR,EAAAS,IAAW,WAAa,EAAI,GAEpDoD,GAAA,CACd,GAAGD,EACH,CAACpD,CAAQ,EAAG,KAAK,IAAIR,EAAU,CAAC,CAAA,CACjC,CAAA,EAGGyE,GAAa,SAAY,CACzB,GAAA,CACF1T,EAAW,EAAI,EACX,IAAAvE,EACAmT,EACFnT,EAAO4V,EAAU,OAAO,CAACtD,EAAYP,IAAiB,OAChD,IAAAmG,EACAC,EACJD,EAAgB,OAAOpF,EAAU,UAAUf,EAAM,GAAG,CAAC,EACrDoG,GAAgB1V,EAAAqQ,EAAU,UAAUf,EAAM,GAAG,IAA7B,YAAAtP,EAAgC,SAGhD,MAAM+Q,GADJzB,EAAM,MAAQ,WAAamG,EAAgBC,GAAiB,GACvBf,EAAarF,EAAM,GAAG,EACzD,OAAAyB,GACFlB,EAAI,KAAK,CACP,WAAYP,EAAM,WAAWI,CAAY,EACzC,SAAAqB,CAAA,CACD,EACIlB,CACT,EAAG,CAAE,CAAA,EAELtS,EAAO4V,EAAU,OAAO,CAACtD,EAAYP,IAAiB,OAChD,IAAAmG,EACAC,EACJD,EAAgB,OAAOpF,EAAU,WAAWf,EAAM,GAAG,CAAC,EACtDoG,GAAgB1V,EAAAqQ,EAAU,WAAWf,EAAM,GAAG,IAA9B,YAAAtP,EAAiC,SACjD,MAAM2V,EACJrG,EAAM,MAAQ,WAAamG,EAAgBC,GAAiB,EACxD3E,EAAmB4D,EAAarF,EAAM,GAAG,EAE/C,OAAIyB,GACFlB,EAAI,KAAK,CACP,WAAYP,EAAM,WAAWI,CAAY,EACzC,SAAAqB,CAAA,CACD,EAGIlB,CACT,EAAG,CAAE,CAAA,EAGH,IAAAxQ,EACAqR,GACFrR,EAAW,MAAMD,GAAU,oBAAqB,CAAE,OAAQ7B,EAAM,EAChE,OAAO,SAAS,OAAO8B,EAAS,KAAK,GAAG,IAExCA,EAAW,MAAMD,GAAU,kBAAmB,CAAE,OAAQ7B,EAAM,EAC1D8B,IACFhC,EACEiC,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,UACX,WAAY,4BACZ,aACE,+DACF,gBAAiB,WACjB,gBAAAqB,CAAA,CACK,CAAA,EAETkT,EAAa,EAAK,EACVd,YAGLxT,EAAU,CACjBuC,EAAW,EAAK,EAChB+R,EAAa,EAAK,EAClBxW,EACEiC,EAAU,QAAQ,aAAa,CAC7B,UAAW,GACX,UAAW,QACX,WAAY,UACZ,aAAcC,EAAI,SAAS,KAAK,eAAA,CACjC,CAAA,CACH,QACA,CACAuC,EAAW,EAAK,CAElB,CAAA,EAIA,OAAArF,SAACqD,EAAAA,SAAA,CAEH,SAAArD,EAAA,OAAC2J,GAAO,IAAP,CACK,UAAW,qDAAqDsN,EAAU,aAAe,EAAE,GAC3F,QAAS,CAAE,QAAS,CAAE,EACtB,QAAS,CAAE,QAAS,CAAE,EACtB,KAAM,CAAE,QAAS,CAAE,EACnB,WAAY,CAAE,SAAU,CAAE,EAEzB,SAAA,CACCI,GAAArX,EAAA,OAAC2T,GAAA,CACC,UAAW+C,EACX,UAAA9C,EACA,cAAAC,EACA,eAAAC,EACA,aAAAb,EACA,SAAAE,EACA,iBAAkB,IAAM,CACtBmE,EAAkB,EAAK,EACvBjB,EAAmB,QAAQ,CAC7B,EACA,aAAcG,CAAA,EAXhB,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAvV,MAYA,EAED,CAACiD,GAAoBlE,EAAA,OAAAF,GAAA,CAAe,MAAO,gBAAvB,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAyC,EAAAmB,MAAA,EAC7DgW,GACCjX,EAAA,OAAC,OAAA,CACC,UAAW,mBAAmBiX,EAAU,wBAA0B,EAAE,GAEpE,SAAA,CAAAjX,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAAA,EAAA,OAAC,OAAA,CACC,SAAS,UACT,SAAS,UACT,EAAE,8pCACF,KAAK,OAAA,EAJP,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAKA,CAAA,EAZF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAaA,EAAM,yDACiD,IACvDjB,EAAA,OAAC,OAAA,CACC,UAAU,uCACV,QAAS,IAAM,CACbY,EAASiC,EAAU,QAAQ,YAAY,CAAC,CAAC,EACzCsW,GAAS,YAAY,CACvB,EACD,SAAA,aAAA,EAND,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAlY,MAQA,CAAA,CAAA,EA1BF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA2BA,GAEAiD,EAAkBkS,IAAoB,YAAc,aACnDgD,GAAc,CAAA,QAAAnC,EAAkB,UAAW,EAC1C,SAAAjX,EAAA,OAAC,MAAA,CACC,UAAW,0BAA0BiX,EAAU,wBAA0B,EAAE,GAEzE,SAAA,EAAkB/S,EAAA,CAACiT,EAAY,IAE7BnX,EAAAA,OAAAqD,EAAAA,SAAA,CAAA,SAAA,CAACrD,SAAA,KAAA,CAAG,UAAU,OAAO,SAArB,qBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAwC,EAAAiB,MAAA,EACvCqE,WACEsE,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAA3I,MAAa,EAEbjB,SAAC,KAAG,CAAA,UAAU,6DACZ,SAAA,CAACA,SAAA,IAAA,CAAE,UAAU,0BAA0B,SAAvC,6BAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAEA,EAAAiB,MAAA,EACAjB,EAAA,OAACoZ,GAAA,CACC,QACEnF,EACI,OAAO,KAAK,CAAE,GAAGL,EAAU,SAAW,CAAA,EAAE,MACrCe,GACC,OAAA,OAAAA,IAAQ,WACJ,CAACf,EAAU,UAAUe,CAAG,EACxB,GAACpR,EAAAqQ,EAAU,UAAUe,CAAG,IAAvB,MAAApR,EAA0B,QAAA,EAEnC,OAAO,KAAK,CAAE,GAAGqQ,EAAU,UAAY,CAAA,EAAE,MACtCe,GACC,OAAA,OAAAA,IAAQ,WACJ,CAACf,EAAU,WAAWe,CAAG,EACzB,GAACpR,EAAAqQ,EAAU,WAAWe,CAAG,IAAxB,MAAApR,EAA2B,QACpC,EAEN,UAAW,EAEX,SAAAvD,EAAA,OAAC,OAAA,CACC,QAAS,IAAM,CACbsX,EAAkB,EAAI,EACtBjB,EAAmB,WAAW,CAChC,EACA,UAAU,YAEV,SAAA,CAAArW,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAAA,EAAA,OAAC,OAAA,CACC,EAAE,8fACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAGA,CAAA,EAVF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAWA,EAAM,mBAAA,CAAA,EAlBR,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAoBA,CAAA,EAtCF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAuCA,CAAA,GA3CF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA4CA,EAAAA,MAAA,EAGD,CAACqE,IACD2O,EACG,OAAO,KAAK,CAAE,GAAGL,EAAU,SAAW,CAAA,EAAE,MACrCe,GACC,OAAA,OAAAA,IAAQ,WACJ,CAACf,EAAU,UAAUe,CAAG,EACxB,GAACpR,EAAAqQ,EAAU,UAAUe,CAAG,IAAvB,MAAApR,EAA0B,QAAA,EAEnC,OAAO,KAAK,CAAE,GAAGqQ,EAAU,UAAY,CAAA,EAAE,MACtCe,GACC,OAAA,OAAAA,IAAQ,WACJ,CAACf,EAAU,WAAWe,CAAG,EACzB,GAACpR,EAAAqQ,EAAU,WAAWe,CAAG,IAAxB,MAAApR,EAA2B,QAAA,GAEtCvD,EAAA,OAAC,MAAI,CAAA,UAAU,oCACb,SAAAA,EAAA,OAAC,MAAA,CACC,IAAI,4EACJ,IAAI,EAAA,EAFN,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAiB,MAAA,GADF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAKA,EAECjB,EAAAA,OAAA,MAAA,CAAI,UAAU,iBACZ,SAAAiU,uBAEI,SAAUyC,EAAA,IACT,CAAC7D,EAAcwG,eACb,OAAC,EAAExG,EAAM,MAAQ,WACbe,EAAU,UAAUf,EAAM,GAAG,GAC7BtP,EAAAqQ,EAAU,UAAUf,EAAM,GAAG,IAA7B,MAAAtP,EAAgC,SAClCvD,SAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,aACZ,SAAA,CAAA8S,GAAWD,EAAM,GAAG,WACpB,KACE,CAAA,SAAA,CAAMA,EAAA,KACNA,EAAM,OAAS,qBACd,GAAA,GAHJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAIA,EAAA5R,MAAA,CAAA,GANF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAOA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAA,OAAC,KAAE,SAAH,QAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAS,EAAAiB,MAAA,EACR4R,EAAM,MAAQ,WACZ7S,EAAA,OAAA,OAAA,CACE,SAAU4T,EAAA,UAAUf,EAAM,GAAG,EAC1B,UACA,UAHN,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAIA,EAAA5R,MAAA,WAEC,OACC,CAAA,SAAA,CAAAjB,EAAAA,OAAC,UACE,SAAK,KAAA,MACJ,KAAK,IACH4T,EAAU,gBACRf,EAAM,GACR,EACEe,EAAU,iBACRf,EAAM,GACR,EACF,CAAA,EACE,KACF,GAXN,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAYA,EAAA5R,MAAA,EAAS,KAGPuC,EAAAoQ,EAAU,UAAUf,EAAM,GAAG,IAA7B,YAAArP,EACI,MAAA,GAjBR,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAmBA,EAAAvC,MAAA,CAAA,GA5BJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA8BA,EAAAA,MAAA,EACCjB,SAAA,MAAA,CAAI,UAAU,aACb,kBAAC,MAAI,CAAA,UAAU,MACb,SAAAA,EAAA,OAAC,MAAI,CAAA,UAAU,gBACZ,SAAA6S,EAAM,MAAQ,WACb7S,EAAA,OAAC,OAAA,CACC,MAAO,CACL,MAAO,GAAG4T,EAAU,UAAUf,EAAM,GAAG,EAAI,OAAS,IAAI,EAC1D,CAAA,EAHF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAA5R,MAAA,EAMAjB,EAAA,OAAC,OAAA,CACC,MAAO,CACL,MAAO,GAAG,KAAK,IACZ,KAAK,IACJ4T,EAAU,gBACRf,EAAM,GACR,EACEe,EACG,iBACDf,EAAM,GACR,EACF,CAAA,IAEApP,EAAAmQ,EAAU,UACRf,EAAM,GACR,IAFA,YAAApP,EAEG,QACH,IACF,GACD,CAAA,GACH,CAAA,EAnBF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAxC,MAAA,GARJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA8BA,CA/BF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAgCA,CAjCF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAkCA,EAAAA,MAAA,CAAA,GAlEF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAmEA,EAAAA,MAAA,CAAA,CAAA,EA5E+BoY,EAAjC,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA6EA,EAAApY,MAAA,EAAA,GAnFR,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAsFAA,MAAA,EACEiD,EAEAlE,EAAA,OAAAqD,EAAA,SAAA,CAAA,SAAA,CAACrD,SAAA,MAAA,CAAI,UAAU,eAAe,SAA9B,GAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAA+B,EAAAiB,MAAA,EAC/BjB,EAAA,OAACsZ,GAAA,CACC,WAAY,CACV,UAAW,EACb,EACA,QAAS,CAACC,EAAU,EACpB,WAAY,GACZ,cAAe,EACf,YAAa,CACX,KAAM,CACJ,cAAe,EACf,aAAc,EAChB,EACA,KAAM,CACJ,cAAe,EACf,aAAc,EAChB,CACF,EACA,gBAAkBC,GAAW,CACvBA,EAAO,MAAOzB,GAAS,EAAK,EAC3BA,GAAS,EAAI,CACpB,EAEC,SAAUrB,EAAA,IACT,CAAC7D,EAAcwG,eACb,OAAC,EAAExG,EAAM,MAAQ,WACbe,EAAU,WAAWf,EAAM,GAAG,GAC9BtP,EAAAqQ,EAAU,WAAWf,EAAM,GAAG,IAA9B,MAAAtP,EACI,SACNvD,EAAA,OAACyZ,GAAA,CACC,UAAU,aAGV,SAAA,CAACzZ,EAAAA,OAAA,MAAA,CAAI,UAAU,aACZ,SAAA,CAAA8S,GAAWD,EAAM,GAAG,WACpB,KACE,CAAA,SAAA,CAAMA,EAAA,KACNA,EAAM,OAAS,qBACd,GAAA,GAHJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAIA,EAAA5R,MAAA,CAAA,GANF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAOA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAA,OAAC,KAAE,SAAH,OAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAQ,EAAAiB,MAAA,EACP4R,EAAM,MAAQ,WACZ7S,EAAA,OAAA,OAAA,CACE,SAAU4T,EAAA,WAAWf,EAAM,GAAG,EAC3B,UACA,UAHN,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAIA,EAAA5R,MAAA,WAEC,OACC,CAAA,SAAA,CAAAjB,EAAAA,OAAC,UACE,SAAK,KAAA,MACJ,KAAK,IACH4T,EAAU,cACRf,EAAM,GACR,EACEe,EAAU,cACRf,EAAM,GACR,EACF,CAAA,EACE,KACF,GAXN,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAYA,EAAA5R,MAAA,EAAS,KAGPuC,EAAAoQ,EAAU,WAAWf,EAAM,GAAG,IAA9B,YAAArP,EACI,MAAA,GAjBR,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAmBA,EAAAvC,MAAA,CAAA,GA5BJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA8BA,EAAAA,MAAA,EACCjB,SAAA,MAAA,CAAI,UAAU,aACb,kBAAC,MAAI,CAAA,UAAU,MACb,SAAAA,EAAA,OAAC,MAAI,CAAA,UAAU,gBACZ,SAAA6S,EAAM,MAAQ,WACb7S,EAAA,OAAC,OAAA,CACC,MAAO,CACL,MAAO,GAAG4T,EAAU,WAAWf,EAAM,GAAG,EAAI,OAAS,IAAI,EAC3D,CAAA,EAHF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAA5R,MAAA,EAMAjB,EAAA,OAAC,OAAA,CACC,MAAO,CACL,MAAO,GAAG,KAAK,IACZ,KAAK,IACJ4T,EAAU,cACRf,EAAM,GACR,EACEe,EAAU,cACRf,EAAM,GACR,EACF,CAAA,IAEApP,EAAAmQ,EAAU,WACRf,EAAM,GACR,IAFA,YAAApP,EAEG,QACH,IACF,GACD,CAAA,GACH,CAAA,EAlBF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAxC,MAAA,GARJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA6BA,CA9BF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA+BA,CAhCF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAiCA,EAAAA,MAAA,CAAA,GAjEF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAkEA,EAAAA,MAAA,CAAA,CAAA,EA5EKoY,EAFP,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAApY,MA+EA,EAEN,CAAA,EA7GF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA8GA,EACC6W,IAAS9X,EAAAA,OAAC,MAAI,CAAA,UAAU,uBAAf,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAqC,EAAAiB,MAAA,CAAA,GAjHjD,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAkHAA,MAAA,uBAGG,SAAUyV,EAAA,IACT,CAAC7D,EAAcwG,eACb,OAAC,EAAExG,EAAM,MAAQ,WACbe,EAAU,WAAWf,EAAM,GAAG,GAC9BtP,EAAAqQ,EAAU,WAAWf,EAAM,GAAG,IAA9B,MAAAtP,EAAiC,SACnCvD,SAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,aACZ,SAAA,CAAA8S,GAAWD,EAAM,GAAG,WACpB,KACE,CAAA,SAAA,CAAMA,EAAA,KACNA,EAAM,OAAS,qBACd,GAAA,GAHJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAIA,EAAA5R,MAAA,CAAA,GANF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAOA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,EAAA,OAAC,KAAE,SAAH,OAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAQ,EAAAiB,MAAA,EACP4R,EAAM,MAAQ,WACZ7S,EAAA,OAAA,OAAA,CACE,SAAU4T,EAAA,WAAWf,EAAM,GAAG,EAC3B,UACA,UAHN,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAIA,EAAA5R,MAAA,WAEC,OACC,CAAA,SAAA,CAAAjB,EAAAA,OAAC,UACE,SAAK,KAAA,MACJ,KAAK,IACH4T,EAAU,cACRf,EAAM,GACR,EACEe,EAAU,cACRf,EAAM,GACR,EACF,CAAA,EACE,KACF,GAXN,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAYA,EAAA5R,MAAA,EAAS,KAGPuC,EAAAoQ,EAAU,WAAWf,EAAM,GAAG,IAA9B,YAAArP,EACI,MAAA,GAjBR,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAmBA,EAAAvC,MAAA,CAAA,GA5BJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA8BA,EAAAA,MAAA,EACCjB,SAAA,MAAA,CAAI,UAAU,aACb,kBAAC,MAAI,CAAA,UAAU,MACb,SAAAA,EAAA,OAAC,MAAI,CAAA,UAAU,gBACZ,SAAA6S,EAAM,MAAQ,WACb7S,EAAA,OAAC,OAAA,CACC,MAAO,CACL,MAAO,GAAG4T,EAAU,WAAWf,EAAM,GAAG,EAAI,OAAS,IAAI,EAC3D,CAAA,EAHF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAA5R,MAAA,EAMAjB,EAAA,OAAC,OAAA,CACC,MAAO,CACL,MAAO,GAAG,KAAK,IACZ,KAAK,IACJ4T,EAAU,cACRf,EAAM,GACR,EACEe,EAAU,cACRf,EAAM,GACR,EACF,CAAA,IAEApP,EAAAmQ,EAAU,WACRf,EAAM,GACR,IAFA,YAAApP,EAEG,QACH,IACF,GACD,CAAA,GACH,CAAA,EAlBF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAxC,MAAA,GARJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA6BA,CA9BF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA+BA,CAhCF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAiCA,EAAAA,MAAA,CAAA,GAjEF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAkEA,EAAAA,MAAA,CAAA,CAAA,EA3E+BoY,EAAjC,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA4EA,EAAApY,MAAA,EAAA,GAlFR,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAqFA,CAnSJ,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAqSA,EAAAA,MAAA,EAED,CAACqE,GACCtF,EAAAA,OAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,SAAC,KAAG,CAAA,SAAA,CAAA,cACU,IACXA,SAAA,OAAA,CAAK,UAAU,YAAa,SAA7BiT,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAA0C,EAAAhS,MAAA,CAAA,GAF5C,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACA,EAAA,OAAA,MAAA,CAAI,UAAU,kBACZ,SAAU0W,EAAA,IAAI,CAAC7D,EAAcwG,IAC5B,SAAArZ,OAAAA,EAAA,OAAAqD,WAAA,CACG,SAAMwP,EAAA,MAAQ,qBACb7S,EAAA,OAAC,MAAA,CACC,UACE6S,EAAM,MAAQ,aACboB,EACG2D,KAAgB,gBAChB,QAAOrU,EAAAqQ,EAAU,YAAV,YAAArQ,EAAsBsP,EAAM,IAAI,EACvC,QACErP,EAAAoQ,EAAU,aAAV,YAAApQ,EAAuBqP,EAAM,IAAG,GAElC,yBACA,iBAIN,SAAA,CAAC7S,EAAA,OAAA,MAAA,CAAI,UAAU,YACb,SAAAA,EAAAA,OAAC,QAAM,SAAW8S,GAAAD,EAAM,GAAG,CAA3B,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAA5R,MAA6B,CAD/B,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAEA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,kCACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,2BACb,SAAA,CAAAA,SAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,OAAC,KACE,CAAA,SAAA,CAAM6S,EAAA,KACNA,EAAM,OAAS,qBACd,IACF7S,EAAAA,OAAC,OAAK,CAAA,UAAU,OACd,SAAA,CAAAA,EAAAA,OAAC0Z,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAa,EAAAzY,MAAA,WACZ,IAAG,CAAA,SAAA,CAAM4R,EAAA,kBAAkB,GAAA,GAA5B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAA6B,EAAA5R,MAAA,CAAA,GAF/B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAGA,EAAAA,MAAA,CAAA,GAPF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAQA,CATF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAUA,EAAAA,MAAA,WACC,MAAI,CAAA,UAAU,wBACb,SAACjB,EAAA,OAAA,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAA,SAAC,KACE,CAAA,SAAA,CAAM6S,EAAA,KACNA,EAAM,OACL,qBAAuB,GAAA,GAH3B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAIA,EAAA5R,MAAA,WACC,IAAG,CAAA,SAAA,CAAM4R,EAAA,kBAAkB,GAAA,GAA5B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAA6B,EAAA5R,MAAA,WAC5B,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAI,EAAAA,MAAA,CAAA,GAPN,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAQA,CATF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAUA,EAAAA,MAAA,WACC,MAAI,CAAA,UAAU,aACb,SAACjB,EAAA,OAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,QAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAU,EAAAiB,MAAA,WACT,MACC,CAAA,SAAA,CAAAjB,SAAC,KAAG,CAAA,SAAA,CAAA,IACA6S,EAAM,MAAMI,CAAY,CAAA,GAD5B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAEA,EAAAhS,MAAA,EACC4R,EAAM,KAAKI,CAAY,EAAI,GAC1BjT,EAAA,OAAC,IAAA,CACC,UAAW,2BAA2B6S,EAAM,OAAS,oBAAsB,mBAAqB,EAAE,GACnG,SAAA,CAAA,IACGA,EAAM,KAAKI,CAAY,EAAG,IAC3BJ,EAAM,MAAQ,eACfA,EAAM,MAAQ,eACV,SACAA,EAAM,IAAI,IAEbI,IAAiB,UACd,QACA,MAAA,CAAA,EAXN,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAhS,MAYA,EAED4R,EAAM,MACL,oBACA7S,EAAA,OAAC,IAAE,CAAA,SAAA,CAAA,YAEAiT,IAAiB,UACd,QACA,MAAA,GAJN,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAKA,EAAAhS,MAAA,EAED4R,EAAM,MAAQ,QACZ7S,EAAA,OAAA,IAAA,CAAE,UAAU,0BAA0B,SAAA,CAAA,gBAEpC,OAAK,CAAA,SAAA,CAAA,IAEHiT,IAAiB,UACd,QACA,MAAA,GAJN,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAKA,EAAAhS,MAAA,CAAA,GAPF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAQA,EAAAA,MAAA,EAED4R,EAAM,MAAQ,QACZ7S,EAAA,OAAA,IAAA,CAAE,UAAU,0BAA0B,SAAA,CAAA,iBAEpC,OAAK,CAAA,SAAA,CAAA,IAEHiT,IAAiB,UACd,QACA,MAAA,GAJN,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAKA,EAAAhS,MAAA,CAAA,GAPF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAQA,EAAAA,MAAA,EAED4R,EAAM,MAAQ,YACZ7S,EAAA,OAAA,IAAA,CAAE,UAAU,0BAA0B,SAAA,CAAA,qBAEpC,OAAK,CAAA,SAAA,CAAA,IAEHiT,IAAiB,UACd,QACA,MAAA,GAJN,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAKA,EAAAhS,MAAA,CAAA,GAPF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAQA,EAAAA,MAAA,CAAA,GA3DJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA6DA,EAAAA,MAAA,CAAA,GA/DF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAgEA,CAjEF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAkEA,EAAAA,MAAA,CAAA,GAzFF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA0FA,EAAAA,MAAA,EAEC4R,EAAM,MAAQ,WACZ7S,EAAAA,OAAA,MAAA,CAAI,UAAU,2BACb,SAAAA,EAAA,OAAC,MAAI,CAAA,UAAU,uBACb,SAAA,CAAAA,EAAA,OAAC,SAAA,CACC,UACEkY,EAAarF,EAAM,GAAG,EAClB,GACA,iBAEN,QAAS,IACP,SAAA,QACEA,EAAM,MAAQ,YAEV,OADHoB,GAEK1Q,EAAAqQ,EAAU,YAAV,YAAArQ,EACEsP,EAAM,MAIRrP,EAAAoQ,EAAU,aAAV,YAAApQ,EACEqP,EAAM,IAJR,IAQRK,GACEL,EAAM,IACN,UACF,GAEH,SAAA,KAAA,EA1BD,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAA5R,MA4BA,EACAjB,EAAA,OAAC,SAAA,CACC,UACEkY,EAAarF,EAAM,GAAG,EAClB,iBACA,GAEN,QAAS,IACP,SAAA,QACEA,EAAM,MAAQ,YAEV,OADHoB,GAEK1Q,EAAAqQ,EAAU,YAAV,YAAArQ,EACEsP,EAAM,MAIRrP,EAAAoQ,EAAU,aAAV,YAAApQ,EACEqP,EAAM,IAJR,IAQRK,GACEL,EAAM,IACN,UACF,GAEH,SAAA,IAAA,EA1BD,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAA5R,MA4BA,CAAA,GA1DF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA2DA,CA5DF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA6DA,EAEAjB,EAAAA,OAACqD,EAAA,SAAA,CACE,WAAawP,EAAM,GAAG,EACrB7S,EAAAA,OAAC,OAAI,UAAU,eACb,SAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAA,EAAA,OAAC,SAAA,CACC,QAAS,IACPkT,GACEL,EAAM,IACN,UACF,EAEH,SAAA,GAAA,EAPD,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAA5R,MASA,EACAjB,EAAAA,OAAC,QACE,SAAakY,EAAArF,EAAM,GAAG,EACrBA,EAAM,KAAKI,CAAY,CAF3B,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAGA,EAAAhS,MAAA,EACAjB,EAAA,OAAC,SAAA,CACC,QAAS,IACPkT,GACEL,EAAM,IACN,UACF,EAEH,SAAA,GAAA,EAPD,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAA5R,MASA,CAAA,GAxBF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAyBA,CA1BF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA2BA,EAEAjB,EAAA,OAAC,SAAA,CACC,QAAS,IACPkT,GACEL,EAAM,IACN,UACF,EAGF,SAAA,CAAA7S,EAAA,OAAC,MAAA,CACC,MAAM,IACN,OAAO,IACP,QAAQ,UACR,KAAK,OACL,MAAM,6BAEN,SAAAA,EAAA,OAAC,OAAA,CACC,EAAE,k0BACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAGA,CAAA,EAVF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAWA,EAAM,KAAA,CAAA,EAnBR,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAAA,GA/BJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAsDA,EAAAA,MAAA,CAAA,GAnNJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAqNA,EAAAA,MAAA,CAAA,CAAA,EA1NKoY,EAZP,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAApY,MAAA,GAFJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MA2OA,EACD,CA9OH,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA+OA,EAAAA,MAAA,WACC,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAI,EAAAA,MAAA,EACJjB,EAAAA,OAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAAAA,SAAC,KAAG,CAAA,SAAA,CAAA,0BAEFA,EAAAA,OAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAA,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAACA,EAAAA,OAAA,IAAA,CAAE,SAAS,0BACV,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,07BACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAIC,EACDjB,EAAA,OAAC,OAAA,CACC,EAAE,ygBACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAIC,EACDjB,EAAA,OAAC,OAAA,CACC,EAAE,+kBACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAIC,CAAA,GAfH,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAgBA,EAAAA,MAAA,EACCjB,SAAA,OAAA,CACC,SAACA,EAAA,OAAA,WAAA,CAAS,GAAG,oBACX,SAAAA,EAAA,OAAC,OAAA,CACC,MAAM,KACN,OAAO,KACP,KAAK,OAAA,EAHP,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAAA,GADF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAMA,CAPF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAQA,EAAAA,MAAA,CAAA,CAAA,EAhCF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAiCA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,wBACZ,SAAA,CAAA,IAAI,4CAAA,GADP,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAGA,EAAAiB,MAAA,CAAA,GAtCF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAuCA,EAAAA,MAAA,CAAA,GAzCF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EA0CA,EAAAA,MAAA,EACAjB,EAAA,OAAC,KAAE,SAAH,2HAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAIA,EAAAiB,MAAA,CAAA,GAhDF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAiDA,EAAAA,MAAA,EACCyV,EAAU,KACR7D,GAAiBqF,EAAarF,EAAM,GAAG,CAAA,EAEvCxP,EAAAA,OAAAA,WAAA,CACC,SAAA,CAACrD,EAAAA,OAAA,QAAA,CAAM,UAAU,0BACf,SAAA,CAAAA,SAAC,KACC,CAAA,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,MAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAQ,EAAAiB,MAAA,EACRjB,EAAA,OAAC,MAAG,SAAJ,UAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAY,EAAAiB,MAAA,EACZjB,EAAA,OAAC,MAAG,SAAJ,OAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAS,EAAAiB,MAAA,CAAA,GAHX,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAIA,EAAAA,MAAA,EACCyV,EAAU,OACT,CACEiD,EACA9G,EACAwG,KAEInB,EAAarF,EAAM,GAAG,GACf8G,EAAA,cACN,KACC,CAAA,SAAA,CAAA3Z,SAAC,KACE,CAAA,SAAA,CAAM6S,EAAA,KACNA,EAAM,OACL,qBAAuB,IACzB7S,EAAAA,OAAC,OAAK,CAAA,UAAU,OACd,SAAA,CAAAA,EAAAA,OAAC0Z,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAa,EAAAzY,MAAA,EACbjB,SAAC,IAAG,CAAA,SAAA6S,EAAM,mBAAV,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAA4B,EAAA5R,MAAA,CAAA,GAF9B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAGA,EAAAA,MAAA,CAAA,GAPF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAQA,EAAAA,MAAA,WACC,KACE,CAAA,SAAA4R,EAAM,MAAQ,WACXqF,EAAarF,EAAM,GAAG,EACpB,MACA,KACFqF,EAAarF,EAAM,GAAG,EACtBA,EAAM,KAAKI,CAAY,CAN7B,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAOA,EAAAhS,MAAA,WACC,KAAG,CAAA,SAAA,CAAA,KAED4R,EAAM,MAAMI,CAAY,EACvBiF,EAAarF,EAAM,GAAG,CAAA,GAH1B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAIA,EAAA5R,MAAA,CAAA,CAAA,EAtBOoY,EAAT,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAuBA,EAAApY,MAAA,CAAA,EAEG0Y,GAET,CAAC,CACH,CAAA,GA1CF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EA2CA,EAAA1Y,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,yCACb,SAAA,CAAAA,EAAA,OAAC,SAAA,CACC,QAAS,IAAM,CACboX,EAAa,EAAI,EACjBf,EAAmB,SAAS,CAC9B,EACD,SAAA,eAAA,EALD,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAApV,MAOA,WACC,KAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAI,EAAAA,MAAA,EACJjB,EAAAA,OAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,qBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAuB,EAAAiB,MAAA,WACtB,OAAK,CAAA,SAAA,CAAA,IAEHyV,EAAU,OACT,CAACtD,EAAaP,IACZO,EACAP,EAAM,MAAMI,CAAY,EACtBiF,EAAarF,EAAM,GAAG,EAC1B,CACF,CAAA,GARF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EASA,EAAA5R,MAAA,CAAA,GAXF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAYA,EAAAA,MAAA,CAAA,GAtBF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAuBA,EAAAA,MAAA,CAAA,GApEF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAqEA,EAEAjB,SAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAO,OAAA,WAAa,KACnBA,EAAA,OAACuS,GAAD,GAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAActR,MAAA,WAEbqR,GAAD,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAS,EAAArR,MAAA,EAEXjB,EAAAA,OAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,qBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAuB,EAAAiB,MAAA,EACvBjB,EAAA,OAAC,KAAE,SAAH,mCAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAoC,EAAAiB,MAAA,CAAA,GAFtC,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAGA,EAAAA,MAAA,CAAA,GATF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAUA,EAAAA,MAAA,CAAA,GAvIJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAyIA,EAAAA,MAAA,CAAA,GA3XF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EA4XA,EAAAA,MAAA,CAAA,GAjYF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAkYA,EAAAA,MAAA,CAAA,GAnvBJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAqvBA,EAAAA,MAAA,EAEDkW,GACCnX,EAAA,OAAC,MAAI,CAAA,UAAU,WACb,SAAAA,EAAA,OAAC,MAAA,CACC,UAAU,iBACV,QAAUqV,GAAMA,EAAE,gBAAgB,EAElC,SAAA,CAAArV,EAAA,OAAC,MAAA,CACC,UAAU,OACV,QAAS,IAAM,CACboX,EAAa,EAAK,EAClBf,EAAmB,QAAQ,CAC7B,EAEA,SAAArW,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAAA,EAAA,OAAC,OAAA,CACC,EAAE,2IACF,KAAK,SAAA,EAFP,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAGA,CAAA,EAVF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAWA,CAAA,EAlBF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAmBA,WACC,MAAI,CAAA,UAAU,kBACb,SAAAjB,EAAAA,OAAC,MAAG,SAAJ,iBAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAAmB,CADrB,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAEA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,eAIb,SAAA,CAAAA,EAAA,OAAC,MAAG,SAAJ,0BAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAA4B,EAAAiB,MAAA,EAC3BjB,EAAA,OAAA,QAAA,CAAM,UAAU,gBACd,SAAU0W,EAAA,OACT,CACEiD,EACA9G,EACAwG,KAEInB,EAAarF,EAAM,GAAG,GACf8G,EAAA,cACN,KACC,CAAA,SAAA,CAAA3Z,SAAC,KACE,CAAA,SAAA,CAAM6S,EAAA,KACNA,EAAM,OAAS,qBAAuB,GAAA,GAFzC,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAGA,EAAA5R,MAAA,WACC,KACE,CAAA,SAAA4R,EAAM,MAAQ,WACXqF,EAAarF,EAAM,GAAG,EACpB,MACA,KACFqF,EAAarF,EAAM,GAAG,EACtBA,EAAM,KAAKI,CAAY,CAN7B,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAOA,EAAAhS,MAAA,WACC,KAAG,CAAA,SAAA,CAAA,KAED4R,EAAM,MAAMI,CAAY,EACvBiF,EAAarF,EAAM,GAAG,CAAA,GAH1B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAIA,EAAA5R,MAAA,CAAA,CAAA,EAjBOoY,EAAT,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAkBA,EAAApY,MAAA,CAAA,EAEG0Y,GAET,CAAC,CAAA,GA/BL,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAiCA,EAAA1Y,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACA,EAAAA,OAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAA,SAAC,KAAG,CAAA,SAAA,CAAA,gBAEFA,EAAAA,OAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAA,EAAA,OAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BAEN,SAAA,CAACA,EAAAA,OAAA,IAAA,CAAE,SAAS,0BACV,SAAA,CAAAA,EAAA,OAAC,OAAA,CACC,EAAE,07BACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAIA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,ygBACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAIA,EACAjB,EAAA,OAAC,OAAA,CACC,EAAE,+kBACF,KAAK,QACL,YAAY,KAAA,EAHd,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAIA,CAAA,GAfF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAgBA,EAAAA,MAAA,EACCjB,SAAA,OAAA,CACC,SAACA,EAAA,OAAA,WAAA,CAAS,GAAG,oBACX,SAACA,EAAA,OAAA,OAAA,CAAK,MAAM,KAAK,OAAO,KAAK,KAAK,OAAlC,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAiB,MAA0C,CAD5C,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAEA,CAHF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAIA,EAAAA,MAAA,CAAA,CAAA,EA5BF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MA6BA,EACCjB,SAAA,MAAA,CAAI,UAAU,wBAAwB,SAAvC,4FAAA,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAYA,EAAAiB,MAAA,CAAA,GA3CF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EA4CA,EAAAA,MAAA,CAAA,GA9CF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EA+CA,EAAAA,MAAA,WACC,IAAE,CAAA,SAAA,CAAA,IAEAyV,EAAU,OACT,CAACtD,EAAaP,IACZO,EACAP,EAAM,MAAMI,CAAY,EACtBiF,EAAarF,EAAM,GAAG,EAC1B,CACF,WACC,OACE,CAAA,SAAA,CAAA,IAAI,OACA,IACJoB,EACGL,EAAU,gBAAgB,cAAc,MACtC,EACA,EAAA,EAEFA,EAAU,aAAa,cAAc,GAAA,GAR3C,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAUA,EAAA3S,MAAA,CAAA,GAnBF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAoBA,EAAAA,MAAA,CAAA,GArEF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAsEA,EAAAA,MAAA,EAEAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,kBAAkB,SAAA,CAAA,2BAE9B,OAAK,CAAA,SAAA,CAAA,IAEH0W,EACE,OAAO,CAACtD,EAAaP,IAElBA,EAAM,WAAW,UACf9O,GAAgB,iBAClB8O,EAAM,WAAW,SACf9O,GAAgB,eAGhBqP,GACA,CAACP,EAAM,MAAMI,CAAY,EAAE,QAAQ,CAAC,EAClCiF,EAAarF,EAAM,GAAG,EAIxBO,GACA,EACEP,EAAM,MAAMI,CAAY,EAAI4D,GAC5B,QAAQ,CAAC,EACTqB,EAAarF,EAAM,GAAG,EAG3B,CAAC,EACH,QAAQ,CAAC,CAAA,GAzBd,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EA0BA,EAAA5R,MAAA,CAAA,GA5BF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EA6BA,EAAAA,MAAA,EACAjB,EAAAA,OAAC,MAAI,CAAA,UAAU,eAAe,SAAA,CAAA,yCACW,aACtC,SACE,CAAA,SAAA,CAAK,KAAA,OACH,IAAI,KAAKmT,CAAQ,EAAE,UAAYqE,KAC7B,IAAO,GAAK,GAAK,GACtB,EAAG,IAAI,iBACQ,GAAA,GALjB,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAMA,EAAAvW,MAAA,EAAS,+BACoB,aAC5B,SACE,CAAA,SAAAoJ,GACC4J,EACIL,EAAU,gBAAgB,gBAC1BA,EAAU,aAAa,eAC7B,EAAE,OAAO,aAAa,CALxB,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAMA,EAAA3S,MAAA,EAAS,GAAA,GAhBX,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAkBA,EAAAA,MAAA,CAAA,GAzHF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EA0HA,EAAAA,MAAA,CAAA,GAjKF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAkKA,EAAAA,MAAA,EACAjB,EAAA,OAAC,MAAI,CAAA,UAAU,iBACb,SAAAA,EAAA,OAAC,UAAO,QAAS+Y,GACd,SAAU3T,EAAA,aAAe,0BAD5B,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAnE,MAEA,CAHF,EAAA,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAIA,EAAAA,MAAA,CAAA,CAAA,EAlMF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAAA,EAAAA,MAAA,GADF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,KAAA,aAAA,EAqMA,EAAAA,MAAA,CAAA,CAAA,EAj8BJ,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAAA,EAAAA,MAAA,GADF,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,EAq8BA,EAAAA,MAAA,CAAA,CAAA,EA3/BR,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,CAAA,EAAAA,MAAA,GAFE,OAAA,GAAA,CAAA,SAAA,+GAAA,WAAA,IAAA,aAAA,CAggCA,EAAAA,MAAA,CAEJ","x_google_ignoreList":[3,4]}