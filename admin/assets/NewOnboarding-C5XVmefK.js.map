{"version":3,"file":"NewOnboarding-C5XVmefK.js","sources":["../../src/pages/AIOnboarding/Steps/AIStep1.tsx","../../src/pages/AIOnboarding/Steps/AIStep2.tsx","../../src/pages/AIOnboarding/Steps/AIStep3.tsx","../../src/pages/AIOnboarding/Steps/AIStep4.tsx","../../src/pages/AIOnboarding/Steps/AIStep5.tsx","../../src/pages/AIOnboarding/Steps/AIStep6.tsx","../../src/pages/AIOnboarding/Steps/Aistep7.tsx","../../src/pages/AIOnboarding/Steps/AIStep8.tsx","../../src/pages/AIOnboarding/NewOnboarding.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nfunction AIStep1({ workflowTitle, setWorkflowTitle, showError, errorMsg, validateInput, step }) {\r\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    const { value } = event.target;\r\n    validateInput(value);\r\n    setWorkflowTitle(value);\r\n  }\r\n\r\n  const inputRef:any = useRef()\r\n\r\n  useEffect(()=>{\r\n    \r\n    inputRef.current.focus();\r\n  }, [step])\r\n\r\n  \r\n  return (\r\n    <div className=\"steps-flex\">\r\n      <span>1 out of 8</span>\r\n      <h3>Provide a title for your Workflow?</h3>\r\n      <input type=\"text\" placeholder=\"Workflow Title\" value={workflowTitle} onChange={handleInputChange} ref={inputRef}></input>\r\n      {step === 1 && showError && <span className=\"err-msg\">{errorMsg}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIStep1;\r\n\r\nconst ChannelIcon = () => (\r\n  <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M17.9467 3.03223C16.8744 3.03223 15.9624 3.72935 15.6385 4.69394L7.19286 8.1202H3.06079C1.37307 8.1202 0 9.49328 0 11.181V13.2233C0 14.911 1.37307 16.2841 3.06079 16.2841H3.52818V20.65C3.52818 21.9281 4.56798 22.9679 5.84604 22.9679C7.12405 22.9679 8.16385 21.9281 8.16385 20.65V16.6781L15.7113 19.7399C16.0854 20.6043 16.9464 21.2108 17.9467 21.2108C19.2892 21.2108 20.3814 20.1186 20.3814 18.7761V5.46698C20.3814 4.12448 19.2892 3.03223 17.9467 3.03223ZM8.16385 9.47992L15.5119 6.49891V17.9054L8.16385 14.9244V9.47992ZM1.625 13.2233V11.181C1.625 10.3894 2.26911 9.74525 3.06079 9.74525H6.53885V14.6591H3.06079C2.26911 14.6591 1.625 14.015 1.625 13.2233ZM5.84604 21.3428C5.46401 21.3428 5.15323 21.032 5.15323 20.65V16.2841H6.5389V20.65C6.53885 21.032 6.22807 21.3428 5.84604 21.3428ZM18.7564 18.776C18.7564 19.2225 18.3932 19.5858 17.9467 19.5858C17.5001 19.5858 17.1369 19.2226 17.1369 18.776V5.46698C17.1369 5.02052 17.5001 4.65723 17.9467 4.65723C18.3931 4.65723 18.7564 5.02046 18.7564 5.46698V18.776H18.7564ZM26 12.1215C26 12.5702 25.6362 12.934 25.1875 12.934H23.1751C22.7264 12.934 22.3626 12.5702 22.3626 12.1215C22.3626 11.6728 22.7264 11.309 23.1751 11.309H25.1875C25.6362 11.309 26 11.6728 26 12.1215ZM21.5536 9.10247C21.3292 8.71384 21.4624 8.21694 21.851 7.99259L23.5938 6.98641C23.9824 6.76196 24.4793 6.89521 24.7037 7.28379C24.928 7.67236 24.7949 8.16931 24.4063 8.39366L22.6635 9.39984C22.5403 9.47123 22.4004 9.50883 22.258 9.50882C21.9772 9.50882 21.7041 9.36313 21.5536 9.10247ZM24.7038 16.9593C24.5533 17.22 24.2801 17.3656 23.9993 17.3656C23.8615 17.3656 23.7218 17.3306 23.5938 17.2567L21.851 16.2504C21.4624 16.0261 21.3292 15.5291 21.5536 15.1406C21.778 14.752 22.2749 14.6189 22.6635 14.8432L24.4063 15.8494C24.795 16.0738 24.9281 16.5707 24.7038 16.9593Z\"\r\n      fill=\"#EFAB10\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst AIWhatsappIcon = () => (\r\n  <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M3.34375 28.6562L5.12354 22.1551C4.026 20.2567 3.45251 18.0962 3.45251 15.8863C3.45251 8.96985 9.08356 3.34375 16 3.34375C19.3569 3.34375 22.5061 4.65387 24.8742 7.02197C27.2423 9.39502 28.5475 12.5443 28.5475 15.8962C28.5425 22.8126 22.9164 28.4387 16 28.4387H15.9951C13.8939 28.4387 11.8323 27.9097 9.99817 26.9111L3.34375 28.6562ZM10.3047 24.6418L10.6854 24.8693C12.2872 25.8185 14.1213 26.3228 15.9951 26.3228H16C21.7497 26.3228 26.4266 21.6459 26.4266 15.8962C26.4266 13.1128 25.3439 10.4926 23.3762 8.51996C21.4086 6.54736 18.7883 5.46466 16.0049 5.46466C10.2503 5.46466 5.57343 10.1415 5.57343 15.8912C5.57343 17.8589 6.12219 19.7771 7.16534 21.4382L7.41254 21.8337L6.3595 25.6801L10.3047 24.6418Z\"\r\n      fill=\"white\"\r\n    />\r\n    <g filter=\"url(#filter0_d_3411_10473)\">\r\n      <path\r\n        d=\"M3.7832 28.2157L5.50366 21.942C4.44073 20.1078 3.88208 18.0215 3.88208 15.8907C3.88702 9.21155 9.32031 3.7832 15.9945 3.7832C19.2327 3.7832 22.2781 5.04388 24.5622 7.33289C26.8512 9.62189 28.1119 12.6624 28.1069 15.9006C28.102 22.5748 22.6687 28.0081 15.9945 28.0081H15.9896C13.9626 28.0081 11.9702 27.4988 10.2003 26.5348L3.7832 28.2157Z\"\r\n        fill=\"url(#paint0_linear_3411_10473)\"\r\n      />\r\n    </g>\r\n    <path\r\n      d=\"M3.34375 28.6562L5.12354 22.1551C4.026 20.2567 3.45251 18.0962 3.45251 15.8863C3.45251 8.96985 9.08356 3.34375 16 3.34375C19.3569 3.34375 22.5061 4.65387 24.8742 7.02197C27.2423 9.39502 28.5475 12.5443 28.5475 15.8962C28.5425 22.8126 22.9164 28.4387 16 28.4387H15.9951C13.8939 28.4387 11.8323 27.9097 9.99817 26.9111L3.34375 28.6562ZM10.3047 24.6418L10.6854 24.8693C12.2872 25.8185 14.1213 26.3228 15.9951 26.3228H16C21.7497 26.3228 26.4266 21.6459 26.4266 15.8962C26.4266 13.1128 25.3439 10.4926 23.3762 8.51996C21.4086 6.54736 18.7883 5.46466 16.0049 5.46466C10.2503 5.46466 5.57343 10.1415 5.57343 15.8912C5.57343 17.8589 6.12219 19.7771 7.16534 21.4382L7.41254 21.8337L6.3595 25.6801L10.3047 24.6418Z\"\r\n      fill=\"url(#paint1_linear_3411_10473)\"\r\n    />\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M12.8711 10.6418C12.6338 10.1178 12.3866 10.1079 12.1641 10.098C11.9812 10.0881 11.7736 10.093 11.561 10.093C11.3533 10.093 11.0122 10.1721 10.7255 10.4836C10.4387 10.7951 9.62793 11.5564 9.62793 13.0989C9.62793 14.6414 10.7502 16.1344 10.9084 16.3421C11.0666 16.5497 13.0787 19.8176 16.2626 21.0733C18.9125 22.1165 19.4514 21.9088 20.0248 21.8594C20.5983 21.81 21.8788 21.103 22.1408 20.3713C22.4028 19.6396 22.4028 19.0117 22.3237 18.8832C22.2446 18.7547 22.037 18.6756 21.7206 18.5173C21.4091 18.3591 19.8666 17.6027 19.5799 17.4989C19.2932 17.3951 19.0855 17.3407 18.8729 17.6571C18.6653 17.9686 18.0621 18.6756 17.8792 18.8832C17.6963 19.0908 17.5134 19.1205 17.2019 18.9623C16.8904 18.8041 15.877 18.4729 14.6805 17.405C13.7462 16.5744 13.1183 15.5461 12.9354 15.2346C12.7524 14.9232 12.9156 14.7501 13.0738 14.5969C13.2122 14.4585 13.3853 14.231 13.5435 14.0481C13.7017 13.8652 13.7511 13.7366 13.8549 13.5241C13.9587 13.3164 13.9093 13.1335 13.8302 12.9753C13.761 12.8121 13.1529 11.2647 12.8711 10.6418Z\"\r\n      fill=\"white\"\r\n    />\r\n    <defs>\r\n      <filter\r\n        id=\"filter0_d_3411_10473\"\r\n        x=\"0.408203\"\r\n        y=\"0.408203\"\r\n        width=\"31.0742\"\r\n        height=\"31.1826\"\r\n        filterUnits=\"userSpaceOnUse\"\r\n        color-interpolation-filters=\"sRGB\"\r\n      >\r\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\r\n        <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\r\n        <feOffset />\r\n        <feGaussianBlur stdDeviation=\"1.6875\" />\r\n        <feComposite in2=\"hardAlpha\" operator=\"out\" />\r\n        <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\" />\r\n        <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_3411_10473\" />\r\n        <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_3411_10473\" result=\"shape\" />\r\n      </filter>\r\n      <linearGradient id=\"paint0_linear_3411_10473\" x1=\"15.945\" y1=\"28.2177\" x2=\"15.945\" y2=\"3.78152\" gradientUnits=\"userSpaceOnUse\">\r\n        <stop stop-color=\"#20B038\" />\r\n        <stop offset=\"1\" stop-color=\"#60D66A\" />\r\n      </linearGradient>\r\n      <linearGradient id=\"paint1_linear_3411_10473\" x1=\"15.9456\" y1=\"28.6562\" x2=\"15.9456\" y2=\"3.34375\" gradientUnits=\"userSpaceOnUse\">\r\n        <stop stop-color=\"#F9F9F9\" />\r\n        <stop offset=\"1\" stop-color=\"white\" />\r\n      </linearGradient>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nconst AIMessengerIcon = () => (\r\n  <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0_3411_10489)\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M13 0.34082C5.87033 0.34082 0.34375 5.5633 0.34375 12.6174C0.34375 16.3071 1.85592 19.4955 4.3185 21.6977C4.52526 21.8828 4.65004 22.142 4.65849 22.4194L4.72741 24.6707C4.74941 25.3888 5.49119 25.8561 6.14832 25.566L8.66039 24.457C8.87327 24.3631 9.11204 24.3456 9.33636 24.4074C10.4907 24.7248 11.7193 24.8939 12.9999 24.8939C20.1296 24.8939 25.6562 19.6714 25.6562 12.6173C25.6562 5.56325 20.1296 0.34082 13 0.34082Z\"\r\n        fill=\"url(#paint0_radial_3411_10489)\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M5.39654 16.2083L9.11432 10.31C9.7057 9.37167 10.9721 9.13803 11.8594 9.80352L14.8163 12.0212C14.9483 12.1203 15.1091 12.1736 15.2741 12.1731C15.4392 12.1727 15.5996 12.1184 15.7311 12.0186L19.7246 8.98783C20.2576 8.58333 20.9533 9.22123 20.5966 9.7873L16.8789 15.6857C16.2874 16.624 15.0211 16.8576 14.1338 16.1921L11.1768 13.9743C11.0447 13.8753 10.884 13.822 10.719 13.8225C10.5539 13.823 10.3935 13.8772 10.2621 13.977L6.26859 17.0078C5.73554 17.4122 5.03975 16.7744 5.39654 16.2083Z\"\r\n        fill=\"white\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <radialGradient\r\n        id=\"paint0_radial_3411_10489\"\r\n        cx=\"0\"\r\n        cy=\"0\"\r\n        r=\"1\"\r\n        gradientUnits=\"userSpaceOnUse\"\r\n        gradientTransform=\"translate(5.21838 25.346) scale(27.5669 27.5669)\"\r\n      >\r\n        <stop stop-color=\"#0099FF\" />\r\n        <stop offset=\"0.61\" stop-color=\"#A033FF\" />\r\n        <stop offset=\"0.935\" stop-color=\"#FF5280\" />\r\n        <stop offset=\"1\" stop-color=\"#FF7061\" />\r\n      </radialGradient>\r\n      <clipPath id=\"clip0_3411_10489\">\r\n        <rect width=\"25.3125\" height=\"25.3125\" fill=\"white\" transform=\"translate(0.34375 0.34375)\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nconst WebBotIcon = () => (\r\n  <svg width=\"26\" height=\"27\" viewBox=\"0 0 26 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0_3411_10505)\">\r\n      <path\r\n        d=\"M17.1869 14.2908C17.5965 14.2908 17.9285 13.9588 17.9285 13.5492C17.9285 13.1396 17.5965 12.8076 17.1869 12.8076C16.7773 12.8076 16.4453 13.1396 16.4453 13.5492C16.4453 13.9588 16.7773 14.2908 17.1869 14.2908Z\"\r\n        fill=\"#3E9BDD\"\r\n      />\r\n      <path\r\n        d=\"M8.28845 14.2908C8.69801 14.2908 9.03003 13.9588 9.03003 13.5492C9.03003 13.1396 8.69801 12.8076 8.28845 12.8076C7.87889 12.8076 7.54688 13.1396 7.54688 13.5492C7.54688 13.9588 7.87889 14.2908 8.28845 14.2908Z\"\r\n        fill=\"#3E9BDD\"\r\n      />\r\n      <path\r\n        d=\"M23.8561 12.0663C23.8561 9.20424 21.5271 6.87524 18.665 6.87524H13.474V5.15661C14.3353 4.84945 14.9572 4.03401 14.9572 3.06848C14.9572 1.84172 13.9592 0.84375 12.7324 0.84375C11.5057 0.84375 10.5077 1.84172 10.5077 3.06848C10.5077 4.03401 11.1295 4.84945 11.9908 5.15661V6.87524H6.7998C3.93776 6.87524 1.60876 9.20424 1.60876 12.0663V14.291H0.0761719V15.7742H1.60876V17.9989C1.60876 20.8609 3.93776 23.1899 6.7998 23.1899H18.665C21.5271 23.1899 23.8561 20.8609 23.8561 17.9989V15.7742H25.3887V14.291H23.8561V12.0663ZM6.05823 13.5494C6.05823 12.3227 7.05619 11.3247 8.28296 11.3247C9.50973 11.3247 10.5077 12.3227 10.5077 13.5494C10.5077 14.7762 9.50973 15.7742 8.28296 15.7742C7.05619 15.7742 6.05823 14.7762 6.05823 13.5494ZM13.474 20.2236H11.9908C10.3549 20.2236 9.02454 18.8933 9.02454 17.2573H10.5077C10.5077 18.0749 11.1732 18.7405 11.9908 18.7405H13.474C14.2916 18.7405 14.9572 18.0749 14.9572 17.2573H16.4403C16.4403 18.8933 15.11 20.2236 13.474 20.2236ZM17.1819 15.7742C15.9551 15.7742 14.9572 14.7762 14.9572 13.5494C14.9572 12.3227 15.9551 11.3247 17.1819 11.3247C18.4087 11.3247 19.4066 12.3227 19.4066 13.5494C19.4066 14.7762 18.4087 15.7742 17.1819 15.7742ZM10.5077 24.6731H14.9572V26.1562H10.5077V24.6731Z\"\r\n        fill=\"#3E9BDD\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_3411_10505\">\r\n        <rect width=\"25.3125\" height=\"25.3125\" fill=\"white\" transform=\"translate(0.0761719 0.84375)\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\n\r\nconst data = [\r\n  {\r\n    id: 0,\r\n    name: \"Multichannel Campaign\",\r\n    background: \"rgba(239, 171, 16, 0.2)\",\r\n    icon: <ChannelIcon />,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \" Single Channel Campaign\",\r\n    background: \"rgba(62, 155, 221, 0.2)\",\r\n    icon: <WebBotIcon />,\r\n  },\r\n\r\n  // {\r\n  //   name: \"WhatsApp\",\r\n  //   background: \" rgba(77, 203, 91, 0.2) \",\r\n  //   icon: <AIWhatsappIcon />,\r\n  // },\r\n  // {\r\n  //   name: \"Messenger\",\r\n  //   background: `linear-gradient(180deg, rgba(238, 77, 152, 0.2) 0%, rgba(11, 146, 255, 0.2) 100%)`,\r\n  //   icon: <AIMessengerIcon />,\r\n  // },\r\n];\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nexport default function AIStep2({\r\n  setWorkflowDesc,\r\n  workflowDesc,\r\n  showError,\r\n  errorMsg,\r\n  validateInput,\r\n  step,\r\n}) {\r\n  function handleInputChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n    const { value } = event.target;\r\n    validateInput(value);\r\n    if (value != \"\\n\") setWorkflowDesc(value);\r\n  }\r\n\r\n  const textAreaRef: any = useRef();\r\n\r\n  useEffect(() => {\r\n    if (step === 2) textAreaRef.current.focus();\r\n    else textAreaRef.current.blur();\r\n  }, [step]);\r\n\r\n  return (\r\n    <div className=\"steps-flex\">\r\n      <span>2 out of 8</span>\r\n      <h3>Specify the purpose or goal of your workflow?</h3>\r\n      <textarea\r\n        value={workflowDesc}\r\n        placeholder=\"To create a personalized workflow, share your business details including website link and workflow goals.\"\r\n        onChange={handleInputChange}\r\n        ref={textAreaRef}\r\n      />\r\n      {step === 2 && showError && <span className=\"err-msg\">{errorMsg}</span>}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport default function AIStep3({\r\n  targetAudience,\r\n  setTargetAudience,\r\n  showError,\r\n  errorMsg,\r\n  validateInput,\r\n  step,\r\n  setStep,\r\n}) {\r\n  function handleInputChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n    const { value } = event.target;\r\n    validateInput(value);\r\n    if (value != \"\\n\") setTargetAudience(value);\r\n  }\r\n\r\n  const handleSkip = () => {\r\n    setStep(Math.min(step + 1, 8));\r\n  };\r\n\r\n  const textAreaRef: any = useRef();\r\n\r\n  useEffect(() => {\r\n    if (step === 3) textAreaRef.current.focus();\r\n    else textAreaRef.current.blur();\r\n  }, [step]);\r\n\r\n  return (\r\n    <div className=\"steps-flex\">\r\n      <span>3 out of 8</span>\r\n      <div className=\"fx jstfy-sp-btw\">\r\n        <h3>Who is the intended audience for this workflow?</h3>\r\n        <button className=\"btn-skip\" onClick={handleSkip}>\r\n          SKIP QUESTION\r\n        </button>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"Specify your target audience here. You can include details related to audience demographics including age, location etc.\"\r\n        value={targetAudience}\r\n        onChange={handleInputChange}\r\n        ref={textAreaRef}\r\n      />\r\n      {step === 3 && showError && <span className=\"err-msg\">{errorMsg}</span>}\r\n    </div>\r\n  );\r\n}\r\n","import { botTone } from \"../../cbb-builder/AiBotData\";\r\n\r\nexport default function AIStep5(props: any) {\r\n  return (\r\n    <div className=\"steps-flex\">\r\n      <span>4 OUT OF 8</span>\r\n      <h3>\r\n        What is your preferred response style and tone?\r\n        {/* <span onClick={props.handleSkip}>Skip Question</span> */}\r\n      </h3>\r\n      <ul className=\"responseStyles mt-20\">\r\n        {botTone.slice(0, 7).map((res, index) => {\r\n          return (\r\n            <li\r\n              key={res.tone}\r\n              className={`response-style ${\r\n                props.selectStyle === index && \"active-style\"\r\n              }`}\r\n              onClick={() => props.setSelectStyle(index)}\r\n            >\r\n              <input type=\"radio\" />\r\n              <img src={res.emoji} alt={res.tone} />\r\n              <p>{res.tone}</p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","export default function AIStep6(props: any) {\r\n  return (\r\n    <div className=\"steps-flex wd-7\">\r\n      <span>5 OUT OF 8</span>\r\n      <h3>\r\n        How many steps would you like to incorporate in your Workflow?\r\n        {/* <span onClick={props.handleSkip}>Skip Question</span> */}\r\n      </h3>\r\n      <form className=\"radio-checks\">\r\n        {LeadsOptions.map((option) => {\r\n          return (\r\n            <label className={`leads ${props.touchPoints === option.number && \"active-style\"}`} htmlFor={option.id} key={option.id}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"touchpoints\"\r\n                id={option.id}\r\n                value={option.number}\r\n                checked={props.touchPoints === option.number}\r\n                onChange={(e) => props.setTouchPoints(e.target.value)}\r\n              />\r\n              <div className=\"leads-number\">{option.number}</div>\r\n            </label>\r\n          );\r\n        })}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LeadsOptions = [\r\n  {\r\n    id: \"id_1\",\r\n    number: \"Less than 10\",\r\n    isChecked: false,\r\n  },\r\n  {\r\n    id: \"id_2\",\r\n    number: \"10-15\",\r\n    isChecked: false,\r\n  },\r\n  {\r\n    id: \"id_3\",\r\n    number: \"15-20\",\r\n    isChecked: false,\r\n  },\r\n  {\r\n    id: \"id_4\",\r\n    number: \"More than 20\",\r\n    isChecked: false,\r\n  },\r\n  {\r\n    id: \"id_5\",\r\n    number: \"I don’t know\",\r\n    isChecked: false,\r\n  },\r\n];\r\n","import { AudienceIcon, WebHookIcon } from \"../../../assets/NodeIcon\";\r\nimport { UserDetailsIcon } from \"../Assest\";\r\n\r\nexport default function AIStep6({ activeFlow, setActiveFlow, setActions, campaignTrigger, setCampaignTrigger }) {\r\n  return (\r\n    <div className=\"steps-flex wd-7\">\r\n      <span>6 OUT OF 8</span>\r\n      <h3>\r\n      Choose your method for inputting user data into the workflow to add the necessary nodes:\r\n        {/* <span onClick={handleSkip}>Skip Question</span> */}\r\n      </h3>\r\n      <div className=\"onboard_bot_ai mt-20\">\r\n        {data.map((item) => (\r\n          <div\r\n            className={`bots_ai step-6-card ${\r\n              activeFlow\r\n                ? item.id === 3 && \"bot_Active\"\r\n                : campaignTrigger === \"segment\"\r\n                ? item.id === 2 && \"bot_Active\"\r\n                : item.id === 1 && \"bot_Active\"\r\n            }`}\r\n            key={item.id}\r\n            onClick={() => {\r\n              if (item.id === 1 || item.id === 2) {\r\n                setActiveFlow(0);\r\n                setCampaignTrigger(item.id === 1 ? \"socialData\" : \"segment\");\r\n                setActions({ sendEmail: true, sendSMS: true });\r\n              } else {\r\n                setActiveFlow(1);\r\n              }\r\n            }}\r\n          >\r\n            <div className=\"rightContent fx al-cnt jstfy-cnt\">\r\n              {item.icon}\r\n              <div className=\"onboard-aiBot-info-head\">\r\n                <h2 className=\"txt-cnt lh-n\">{item.name}</h2>\r\n              </div>\r\n              {/* <div className=\"tl-corner-svg\">\r\n                <ToolTip />\r\n                <div className=\"tl-corner-svg-desc\" style={{ width: item.width, left: item.left }}>\r\n                  {item.tooltipDesc}\r\n                </div>\r\n              </div> */}\r\n              <div className=\"tr-corner-svg\">\r\n                <Selected />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    name: \"Import user data via Webhook\",\r\n    background: \"rgba(239, 171, 16, 0.2)\",\r\n    icon: <WebHookIcon />,\r\n    tooltipDesc: \"Set up a webhook to automatically fetch contacts from another platform\",\r\n    width: 232,\r\n    left: -110,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Import an existing user list or audience segment from the account\",\r\n    background: \"rgba(62, 155, 221, 0.2)\",\r\n    icon: <AudienceIcon />,\r\n    tooltipDesc: \"Import existing contacts into Omniengage and use them as target audience\",\r\n    width: 257,\r\n    left: -120,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Collect user details within the workflow\",\r\n    background: \"\",\r\n    icon: <UserDetailsIcon />,\r\n    tooltipDesc: \"Collect lead details using your Omniengage Workflow\",\r\n    width: 190,\r\n    left: -88,\r\n  },\r\n];\r\n\r\nfunction Selected() {\r\n  return (\r\n    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <rect width=\"18\" height=\"18\" rx=\"9\" fill=\"#FB5F66\" />\r\n      <path\r\n        d=\"M7.9254 12.3377C7.88197 12.3814 7.83033 12.416 7.77345 12.4397C7.71658 12.4634 7.65559 12.4755 7.59399 12.4755C7.53239 12.4755 7.4714 12.4634 7.41453 12.4397C7.35765 12.416 7.30602 12.3814 7.26258 12.3377L4.61602 9.69067C4.48421 9.55882 4.41016 9.38 4.41016 9.19356C4.41016 9.00712 4.48421 8.82831 4.61602 8.69645L4.94743 8.36505C5.07928 8.23323 5.25809 8.15918 5.44454 8.15918C5.63098 8.15918 5.80979 8.23323 5.94165 8.36505L7.59399 10.0174L12.0588 5.55255C12.1907 5.42073 12.3695 5.34668 12.5559 5.34668C12.7424 5.34668 12.9212 5.42073 13.0531 5.55255L13.3845 5.88395C13.5163 6.01581 13.5903 6.19462 13.5903 6.38106C13.5903 6.5675 13.5163 6.74631 13.3845 6.87817L7.9254 12.3377Z\"\r\n        fill=\"white\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction ToolTip() {\r\n  return (\r\n    <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g clipPath=\"url(#clip0_5539_11638)\">\r\n        <path\r\n          d=\"M7 0C5.61553 0 4.26215 0.410543 3.11101 1.17971C1.95986 1.94888 1.06265 3.04213 0.532841 4.32122C0.00302758 5.6003 -0.135596 7.00776 0.134501 8.36563C0.404597 9.7235 1.07128 10.9708 2.05025 11.9497C3.02922 12.9287 4.2765 13.5954 5.63437 13.8655C6.99223 14.1356 8.3997 13.997 9.67878 13.4672C10.9579 12.9373 12.0511 12.0401 12.8203 10.889C13.5895 9.73785 14 8.38447 14 7C13.998 5.1441 13.2598 3.36479 11.9475 2.05247C10.6352 0.74015 8.8559 0.0020073 7 0ZM7 12.25C5.96165 12.25 4.94661 11.9421 4.08325 11.3652C3.2199 10.7883 2.54699 9.9684 2.14963 9.00909C1.75227 8.04978 1.6483 6.99418 1.85087 5.97578C2.05345 4.95738 2.55346 4.02191 3.28769 3.28769C4.02191 2.55346 4.95737 2.05345 5.97577 1.85088C6.99417 1.6483 8.04977 1.75227 9.00908 2.14963C9.9684 2.54699 10.7883 3.2199 11.3652 4.08326C11.9421 4.94661 12.25 5.96165 12.25 7C12.2483 8.39187 11.6946 9.72624 10.7104 10.7104C9.72623 11.6946 8.39186 12.2483 7 12.25Z\"\r\n          fill=\"#999999\"\r\n        />\r\n        <path\r\n          d=\"M6.73458 5.56864H6.55958C6.33032 5.56301 6.10722 5.64321 5.93402 5.79353C5.76083 5.94385 5.65002 6.15345 5.62333 6.38122C5.60807 6.60908 5.6825 6.83389 5.83073 7.00762C5.97896 7.18135 6.18924 7.29025 6.41667 7.31105V10.0236C6.41667 10.2556 6.50885 10.4782 6.67295 10.6423C6.83704 10.8064 7.0596 10.8986 7.29167 10.8986C7.52373 10.8986 7.74629 10.8064 7.91038 10.6423C8.07448 10.4782 8.16667 10.2556 8.16667 10.0236V7.00072C8.16667 6.62091 8.01579 6.25665 7.74722 5.98808C7.47865 5.71952 7.11439 5.56864 6.73458 5.56864Z\"\r\n          fill=\"#999999\"\r\n        />\r\n        <path\r\n          d=\"M6.90083 4.93755C7.09881 4.93755 7.29235 4.87884 7.45696 4.76885C7.62157 4.65886 7.74987 4.50252 7.82564 4.31961C7.9014 4.1367 7.92122 3.93544 7.8826 3.74126C7.84398 3.54709 7.74864 3.36873 7.60865 3.22873C7.46865 3.08874 7.29029 2.99341 7.09612 2.95478C6.90194 2.91616 6.70068 2.93598 6.51777 3.01174C6.33486 3.08751 6.17852 3.21581 6.06853 3.38042C5.95854 3.54504 5.89983 3.73857 5.89983 3.93655C5.89976 4.06802 5.9256 4.19822 5.97587 4.3197C6.02615 4.44119 6.09988 4.55157 6.19285 4.64453C6.28582 4.7375 6.39619 4.81123 6.51768 4.86151C6.63916 4.91178 6.76936 4.93762 6.90083 4.93755Z\"\r\n          fill=\"#999999\"\r\n        />\r\n      </g>\r\n      <defs>\r\n        <clipPath id=\"clip0_5539_11638\">\r\n          <rect width=\"14\" height=\"14\" fill=\"white\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n","import * as NodeIcon from \"@/assets/NodeIcon\";\r\nimport { CheckIcon } from \"../Assest\";\r\n\r\nfunction Aistep7({\r\n  triggers,\r\n  setTriggers,\r\n  actions,\r\n  setActions,\r\n  apps,\r\n  setApps,\r\n  activeFlow,\r\n  campaignTrigger,\r\n}) {\r\n  function handleNodeSelect(key: string, type: \"trigger\" | \"action\" | \"apps\") {\r\n    if (key === \"phone\") {\r\n      setTriggers({\r\n        ...triggers,\r\n        phone: !triggers.phone || actions.whatsApp || actions.sendSMS,\r\n      });\r\n    } else if (key === \"email\") {\r\n      setTriggers({ ...triggers, email: !triggers.email || actions.sendEmail });\r\n    } else if (key === \"sendEmail\") {\r\n      setTriggers({ ...triggers, email: !actions.sendEmail });\r\n      setActions({ ...actions, sendEmail: !actions.sendEmail || !activeFlow });\r\n    } else if (key === \"sendSMS\") {\r\n      setTriggers({ ...triggers, phone: !actions.sendSMS || actions.whatsApp });\r\n      setActions({ ...actions, sendSMS: !actions.sendSMS });\r\n    } else if (key === \"whatsApp\") {\r\n      setTriggers({ ...triggers, phone: !actions.whatsApp || actions.sendSMS });\r\n      setActions({ ...actions, whatsApp: !actions.whatsApp });\r\n    } else if (\r\n      key === \"ask_question\" ||\r\n      key === \"sendMessage\" ||\r\n      key === \"button\"\r\n    ) {\r\n      return;\r\n    } else if (type === \"trigger\") {\r\n      setTriggers({ ...triggers, [key]: !triggers[key] });\r\n    } else if (type === \"action\") {\r\n      setActions({ ...actions, [key]: !actions[key] });\r\n    } else if (type === \"apps\") {\r\n      setApps({ ...apps, [key]: !apps[key] });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"steps-flex\">\r\n      <span>7 out of 8</span>\r\n      <h3>\r\n        Do you have specific triggers & actions you want to make sure we\r\n        include?\r\n      </h3>\r\n\r\n      <div className=\"triggers-section \">\r\n        <span className=\"mt-20\">Triggers</span>\r\n        <div className=\"bots-fx \">\r\n          {activeFlow\r\n            ? TRIGGER_NODES.map((value) => (\r\n                <div\r\n                  key={value.key}\r\n                  className={`bot-ai-bx fx fx-d-col jstfy-cnt ${\r\n                    triggers[value.key] && \"active-style\"\r\n                  }`}\r\n                  onClick={() => handleNodeSelect(value.key, \"trigger\")}\r\n                >\r\n                  {value.icon}\r\n                  <p>{value.name}</p>\r\n                  {triggers[value.key] && <CheckIcon />}\r\n                </div>\r\n              ))\r\n            : CAMPAIGN_NODES.map(\r\n                (value) =>\r\n                  value.key === campaignTrigger && (\r\n                    <div\r\n                      key={value.key}\r\n                      className={\"bot-ai-bx fx fx-d-col jstfy-cnt active-style\"}\r\n                    >\r\n                      {value.icon}\r\n                      <p>{value.name}</p>\r\n                      <CheckIcon />\r\n                    </div>\r\n                  )\r\n              )}\r\n        </div>\r\n        <span className=\"mt-25\">Actions</span>\r\n        <div className=\"bots-fx \">\r\n          {ACTION_NODES.map((value) => (\r\n            <div\r\n              key={value.key}\r\n              className={`bot-ai-bx fx fx-d-col jstfy-cnt ${\r\n                actions[value.key] && \"active-style\"\r\n              }`}\r\n              onClick={() => handleNodeSelect(value.key, \"action\")}\r\n            >\r\n              {value.icon}\r\n              <p>{value.name}</p>\r\n              {actions[value.key] && <CheckIcon />}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <span className=\"mt-25\">Apps</span>\r\n        <div className=\"bots-fx \">\r\n          {APPS_NODES.map((value) => (\r\n            <div\r\n              key={value.key}\r\n              className={`bot-ai-bx fx fx-d-col jstfy-cnt ${\r\n                apps[value.key] && \"active-style\"\r\n              }`}\r\n              onClick={() => handleNodeSelect(value.key, \"apps\")}\r\n            >\r\n              {value.icon}\r\n              <p>{value.name}</p>\r\n              {apps[value.key] && <CheckIcon />}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Aistep7;\r\n\r\nconst CAMPAIGN_NODES = [\r\n  {\r\n    name: \"Webhook\",\r\n    icon: <NodeIcon.WebHookIcon />,\r\n    key: \"socialData\",\r\n  },\r\n  {\r\n    name: \"Audience\",\r\n    icon: <NodeIcon.AudienceIcon />,\r\n    key: \"segment\",\r\n  },\r\n];\r\n\r\nconst TRIGGER_NODES = [\r\n  {\r\n    name: \"Ask question\",\r\n    icon: <NodeIcon.AskQuestionIcon />,\r\n    key: \"ask_question\",\r\n  },\r\n  {\r\n    name: \"Button\",\r\n    icon: <NodeIcon.SingleSelectIcon />,\r\n    key: \"button\",\r\n  },\r\n  {\r\n    name: \"Email\",\r\n    icon: <NodeIcon.GetEmailIcon />,\r\n    key: \"email\",\r\n  },\r\n  {\r\n    name: \"Phone\",\r\n    icon: <NodeIcon.GetPhoneIcon />,\r\n    key: \"phone\",\r\n  },\r\n  {\r\n    name: \"Username\",\r\n    icon: <NodeIcon.GetUsernameIcon />,\r\n    key: \"username\",\r\n  },\r\n  {\r\n    name: \"Address\",\r\n    icon: <NodeIcon.GetAddressIcon />,\r\n    key: \"address\",\r\n  },\r\n  {\r\n    name: \"Result\",\r\n    icon: <NodeIcon.CalculateResultIcon />,\r\n    key: \"result\",\r\n  },\r\n  {\r\n    name: \"Send message\",\r\n    icon: <NodeIcon.SendMessageIcon />,\r\n    key: \"sendMessage\",\r\n  },\r\n];\r\n\r\nconst ACTION_NODES = [\r\n  {\r\n    name: \"Send mail\",\r\n    icon: <NodeIcon.SendEmailIcon />,\r\n    key: \"sendEmail\",\r\n  },\r\n  {\r\n    name: \"Send SMS\",\r\n    icon: <NodeIcon.SendSMSIcon />,\r\n    key: \"sendSMS\",\r\n  },\r\n  {\r\n    name: \"Call API\",\r\n    icon: <NodeIcon.CallApiIcon />,\r\n    key: \"hitApi\",\r\n  },\r\n  {\r\n    name: \"Delay action\",\r\n    icon: <NodeIcon.DelayActionIcon />,\r\n    key: \"delayAction\",\r\n  },\r\n  {\r\n    name: \"Push notification\",\r\n    icon: <NodeIcon.NotificationIcon />,\r\n    key: \"pushNotification\",\r\n  },\r\n  {\r\n    name: \"Whatsapp\",\r\n    icon: <NodeIcon.WhatsappIcon />,\r\n    key: \"whatsApp\",\r\n  },\r\n\r\n  {\r\n    name: \"A/B Testing\",\r\n    icon: <NodeIcon.ABTestingIcon />,\r\n    key: \"abTest\",\r\n  },\r\n  {\r\n    name: \"Conditions\",\r\n    icon: <NodeIcon.ConditionIcon />,\r\n    key: \"condition\",\r\n  },\r\n];\r\n\r\nconst APPS_NODES = [\r\n  {\r\n    name: \"Open AI\",\r\n    icon: <NodeIcon.OpenAIIcon />,\r\n    key: \"openai\",\r\n  },\r\n  {\r\n    name: \"LinkedIn\",\r\n    icon: <NodeIcon.LinkedInIcon />,\r\n    key: \"linkedIn\",\r\n  },\r\n];\r\n","export default function AIStep8({\r\n  inputRequirement,\r\n  setInputRequirement,\r\n  loader,\r\n  generateBot,\r\n  showError,\r\n  errorMsg,\r\n  validateInput,\r\n  step,\r\n  debug,\r\n  customPrompt,\r\n  setCustomPrompt,\r\n  customNodes,\r\n  setCustomNodes,\r\n  btnDisable,\r\n}) {\r\n  function handleInputChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n    const { value } = event.target;\r\n    validateInput(value);\r\n    setInputRequirement(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"steps-flex\">\r\n      <span>8 out of 8</span>\r\n      <h3>\r\n        Are there any other specific inputs or requirements for your workflow\r\n        that you would like to add?\r\n      </h3>\r\n      <textarea\r\n        placeholder=\"Provide any additional specific inputs or requirements for your workflow here. Be as clear and detailed as possible to ensure accurate workflow creation.\"\r\n        value={inputRequirement}\r\n        onChange={handleInputChange}\r\n      />\r\n      {step === 8 && showError && <span className=\"err-msg\">{errorMsg}</span>}\r\n\r\n      <button\r\n        className={\r\n          btnDisable ? \"generate-ai-btn disable-btn\" : \"generate-ai-btn\"\r\n        }\r\n        onClick={() => !loader && generateBot()}\r\n      >\r\n        {loader ? \"Generating...\" : \"Generate\"}\r\n      </button>\r\n      {debug && (\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            overflow: \"scroll\",\r\n            height: \"200px\",\r\n          }}\r\n        >\r\n          <h4>Prompt</h4>\r\n          <pre>\r\n            Variables: {variables.reduce((pre, cur) => pre + `{${cur}}, `, \"\")}\r\n          </pre>\r\n          <textarea\r\n            value={customPrompt}\r\n            onChange={(e) => setCustomPrompt(e.target.value)}\r\n          />\r\n          <h4>Node Structure</h4>\r\n          <pre>\r\n            Node name: {nodeNames.reduce((pre, cur) => pre + `${cur}, `, \"\")}\r\n          </pre>\r\n          <textarea\r\n            value={customNodes}\r\n            onChange={(e) => setCustomNodes(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst variables = [\r\n  \"scenario\",\r\n  \"nodeStructure\",\r\n  \"nodeNames\",\r\n  \"tone\",\r\n  \"nodeCount\",\r\n  \"additionalInstruction\",\r\n];\r\nconst nodeNames = [\r\n  \"ask_question\",\r\n  \"button\",\r\n  \"email\",\r\n  \"phone\",\r\n  \"username\",\r\n  \"address\",\r\n  \"result\",\r\n  \"sendMessage\",\r\n  \"sendEmail\",\r\n  \"sendSMS\",\r\n  \"hitApi\",\r\n  \"delayAction\",\r\n  \"pushNotification\",\r\n  \"whatsApp\",\r\n  \"abTest\",\r\n  \"condition\",\r\n];\r\n","import { useState, useMemo, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { axiosPost } from \"../../services/axiosService\";\r\nimport { LogoIcon, NextIcon, PrevIcon } from \"./Assest\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userSlice } from \"../../redux/User\";\r\nimport { State } from \"../../redux/Types\";\r\nimport \"../AIOnboarding/NewOnboarding.css\";\r\nimport AIStep1 from \"./Steps/AIStep1\";\r\nimport AIStep2 from \"./Steps/AIStep2\";\r\nimport AIStep3 from \"./Steps/AIStep3\";\r\nimport AIStep4 from \"./Steps/AIStep4\";\r\nimport AIStep5 from \"./Steps/AIStep5\";\r\nimport AIStep6 from \"./Steps/AIStep6\";\r\nimport AIStep7 from \"./Steps/Aistep7\";\r\nimport AIStep8 from \"./Steps/AIStep8\";\r\nimport { botTone } from \"../cbb-builder/AiBotData\";\r\nimport { getCookie, deleteCookies } from \"../../services/cookieService\";\r\n\r\nfunction NewOnboarding({ redirect = true }) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const debug = useSelector((state: State) => state.user.debug);\r\n  const [customPrompt, setCustomPrompt] = useState<string>(\"\");\r\n  const [customNodes, setCustomNodes] = useState<string>(\"{}\");\r\n  const userName = useSelector((state: State) => state.user.userName);\r\n  const isLoggedIn = useSelector((state: State) => state.user.isLoggedIn);\r\n  const sessionCount = useSelector((state: State) => state.user.sessionCount);\r\n  const defaultComp = useSelector((state: State) => state.user.defaultCompany);\r\n  const thriveData = useSelector((state: State) => state.user.thriveData);\r\n  const userOnBoardingDone = getCookie(\"onBoarding\");\r\n  const [step, setStep] = useState<number>(1);\r\n  const [loader, setLoader] = useState<boolean>(false);\r\n  const [workflowTitle, setWorkflowTitle] = useState<string>(\"\");\r\n  const [workflowDesc, setWorkflowDesc] = useState<string>(\"\");\r\n  const [targetAudience, setTargetAudience] = useState<string>(\"\");\r\n  const [selectStyle, setSelectStyle] = useState<number>(0);\r\n  const [touchPoints, setTouchPoints] = useState<string>(\"10-15\");\r\n  const [inputRequirement, setInputRequirement] = useState<string>(\"\");\r\n  const [activeFlow, setActiveFlow] = useState<number>(1);\r\n  const [campaignTrigger, setCampaignTrigger] = useState<\r\n    \"socialData\" | \"segment\"\r\n  >(\"segment\");\r\n  const [triggers, setTriggers] = useState<Record<string, boolean>>({\r\n    sendMessage: true,\r\n    ask_question: true,\r\n    button: true,\r\n    email: true,\r\n    phone: true,\r\n  });\r\n  const [actions, setActions] = useState<Record<string, boolean>>({\r\n    sendEmail: true,\r\n    sendSMS: true,\r\n  });\r\n  const [apps, setApps] = useState<Record<string, boolean>>({});\r\n  const [showError, setShowError] = useState<boolean>(false);\r\n  const [errorMsg, setErrorMsg] = useState<string>(\"\");\r\n  const [btnDisable, setBtnDisable] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    if (redirect) {\r\n      if (isLoggedIn) {\r\n        deleteCookies(\"onBoarding\", \"/\");\r\n        if (userOnBoardingDone.trim().length <= 1 || sessionCount >= 1) {\r\n          // if (subdomain !== \"\") {\r\n          if (defaultComp) {\r\n            navigate(\"/dashboard\");\r\n          } else {\r\n            navigate(\"/switchAccount\");\r\n          }\r\n          // }\r\n        } else if (window.innerWidth <= 770) {\r\n          if (defaultComp) {\r\n            navigate(\"/dashboard\");\r\n          } else {\r\n            navigate(\"/switchAccount\");\r\n          }\r\n        }\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  // useEffect(() => {\r\n  //   const manualThriveWidgetLoad = (thriveData) => {\r\n  //     var trackingScript = document.createElement(\"script\");\r\n  //     trackingScript.type = \"text/javascript\";\r\n  //     trackingScript.text = `\r\n  //     var ztUserData = {};\r\n  //     ztUserData['za_email_id'] = '${thriveData?.email}';\r\n  //     ztUserData['user_unique_id'] = '${thriveData?.userId}';\r\n  //     ztUserData['thrive_digest'] = '${thriveData?.digest}';\r\n  //     ztUserData['signUpPage'] = 'https://app.outgrow.chat/register';\r\n  //     ztUserData['signInPage'] = 'https://app.outgrow.chat/login';`;\r\n  //     document.head.appendChild(trackingScript);\r\n  //     if (typeof window.reloadThriveWidget === \"function\")\r\n  //       window.reloadThriveWidget();\r\n  //   };\r\n  //   manualThriveWidgetLoad(thriveData);\r\n  // }, []);\r\n\r\n  function handlePrevious() {\r\n    setShowError(false);\r\n    setStep(Math.max(step - 1, 1));\r\n  }\r\n\r\n  function handleNext() {\r\n    let check: boolean = true;\r\n\r\n    if (step === 1) {\r\n      check = validateInput(workflowTitle);\r\n    } else if (step === 2) {\r\n      check = validateInput(workflowDesc);\r\n    } else if (step === 3) {\r\n      if (targetAudience === \"\") return;\r\n      check = validateInput(targetAudience);\r\n    } else if (step === 8) {\r\n      check = validateInput(inputRequirement);\r\n    }\r\n\r\n    if (check) {\r\n      setStep(Math.min(step + 1, 8));\r\n      setShowError(false);\r\n    } else {\r\n      setShowError(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (step === 4 || step === 5 || step === 6 || step === 7)\r\n      setBtnDisable(true);\r\n    setBtnDisable(false);\r\n  }, [step]);\r\n\r\n  useEffect(() => {\r\n    let check: boolean = true;\r\n\r\n    if (step === 1 && workflowTitle) {\r\n      check = validateInput(workflowTitle);\r\n    } else if (step === 2) {\r\n      check = validateInput(workflowDesc);\r\n    } else if (step === 3) {\r\n      if (targetAudience === \"\") return;\r\n      check = validateInput(targetAudience);\r\n    } else if (step === 8) {\r\n      check = validateInput(inputRequirement);\r\n    }\r\n\r\n    if (check) {\r\n      setShowError(false);\r\n      setBtnDisable(false);\r\n    } else {\r\n      setShowError(true);\r\n      setBtnDisable(true);\r\n    }\r\n  }, [workflowTitle, workflowDesc, targetAudience, inputRequirement]);\r\n\r\n  function validateInput(value: string): boolean {\r\n    try {\r\n      if (step === 1) {\r\n        if (!value) throw new Error(\"*Please provide workflow title.\");\r\n        if (value.length < 3)\r\n          throw new Error(\"*Workflow title should be at least 3 characters.\");\r\n        if (value.length > 30)\r\n          throw new Error(\"*Workflow title name can be at most 30 characters.\");\r\n      }\r\n      if (step === 2) {\r\n        if (!value) throw new Error(\"*Please provide purpose of the workflow.\");\r\n        if (value.length > 1000)\r\n          throw new Error(`*Maximum 1000 character allowed (${value.length}).`);\r\n      }\r\n      if (step === 3) {\r\n        if (value.length > 100)\r\n          throw new Error(`*Maximum 100 character allowed (${value.length}).`);\r\n      }\r\n      if (step === 8) {\r\n        if (inputRequirement.length > 500)\r\n          throw new Error(`*Maximum 500 character allowed (${value.length}).`);\r\n      }\r\n      setErrorMsg(\"\");\r\n      return true;\r\n    } catch (err: any) {\r\n      setErrorMsg(err.message);\r\n      return false;\r\n    }\r\n  }\r\n  async function generateBot() {\r\n    try {\r\n      const check = validateInput(inputRequirement);\r\n      if (!check) return setShowError(true);\r\n\r\n      const allowedNodes: string[] = [];\r\n      if (activeFlow) {\r\n        for (const trigger in triggers) {\r\n          if (triggers[trigger]) allowedNodes.push(trigger);\r\n        }\r\n      }\r\n      for (const action in actions) {\r\n        if (actions[action]) allowedNodes.push(action);\r\n      }\r\n      for (const app in apps) {\r\n        if (apps[app]) allowedNodes.push(app);\r\n      }\r\n      setLoader(true);\r\n\r\n      const res = await axiosPost(\"/ai/generate-bot\", {\r\n        botName: workflowTitle,\r\n        botType: activeFlow ? \"web\" : \"campaign\",\r\n        allowedNodes,\r\n        campaignTrigger,\r\n        variables: {\r\n          scenario: workflowDesc,\r\n          targetAudience: targetAudience,\r\n          tone: botTone[selectStyle].tone,\r\n          nodeCount: touchPoints === \"I don’t know\" ? \"10\" : touchPoints,\r\n          additionalInstruction: inputRequirement || \"\",\r\n        },\r\n      });\r\n\r\n      navigate(`/builder/${res.data.data.url}`);\r\n    } catch (err: any) {\r\n      dispatch(\r\n        userSlice.actions.setToastPopUp({\r\n          show: true,\r\n          toastType: \"error\",\r\n          message: err.response?.data?.message ?? err?.message,\r\n        }),\r\n      );\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"onboardai-main\"\r\n      onKeyDown={(e) => !e.shiftKey && e.key === \"Enter\" && handleNext()}\r\n    >\r\n      <nav>\r\n        <div className=\"ai-logo\">\r\n          <LogoIcon />\r\n          <h1>Omniengage</h1>\r\n          <span className=\"beta_cbb\">Beta</span>\r\n        </div>\r\n        <h2>\r\n          Welcome{\" \"}\r\n          {userName.length > 15 ? userName.slice(0, 15) + \"...\" : userName}\r\n        </h2>\r\n        <button className=\"skip_onboard\" onClick={() => navigate(\"/dashboard\")}>\r\n          <span>{redirect ? \"Skip Onboarding\" : \"Dashboard\"}</span>\r\n          <svg\r\n            width=\"16\"\r\n            height=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <g clipPath=\"url(#clip0_7604_12573)\">\r\n              <path\r\n                d=\"M9.75942 1.79517C9.50495 1.53442 9.09214 1.53442 8.8373 1.79517C8.58262 2.05575 8.58262 2.47869 8.8373 2.73949L13.7759 7.79669H0.65417C0.292968 7.79669 0 8.09664 0 8.46651C0 8.83655 0.292968 9.13639 0.65417 9.13639H13.7694L8.83074 14.1936C8.77009 14.2556 8.72196 14.3292 8.68913 14.4102C8.65629 14.4912 8.63939 14.5781 8.63939 14.6658C8.63939 14.7536 8.65629 14.8404 8.68913 14.9215C8.72196 15.0025 8.77009 15.0761 8.83074 15.1381C8.89147 15.2007 8.96389 15.2502 9.04367 15.2835C9.12346 15.3169 9.20898 15.3335 9.29516 15.3323C9.46863 15.3315 9.63505 15.2619 9.75942 15.1381L15.8101 8.94235C15.871 8.87995 15.9192 8.80572 15.9518 8.72402C15.9844 8.64232 16.0008 8.55477 16 8.46651C15.9987 8.28896 15.9307 8.11872 15.8101 7.99116L9.75942 1.79517Z\"\r\n                fill=\"#FB5F66\"\r\n              />\r\n            </g>\r\n            <defs>\r\n              <clipPath id=\"clip0_7604_12573\">\r\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\r\n              </clipPath>\r\n            </defs>\r\n          </svg>\r\n        </button>\r\n      </nav>\r\n      <div className=\"onboardai-container\">\r\n        <div className=\"progress-container\">\r\n          <div className=\"line-progress wd-100\">\r\n            <div\r\n              className=\"line-progress-bar wd-100\"\r\n              style={{ width: `${(step / 8) * 100}%` }}\r\n            >\r\n              <div className=\"prog-bubble flex-cnt\">{step} / 8</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"body-containner\">\r\n          <div className=\"gradient-blur\"></div>\r\n          <div className=\"onbording-body\">\r\n            <StepWrapper stepIndex={1} currentStep={step}>\r\n              <AIStep1\r\n                setWorkflowTitle={setWorkflowTitle}\r\n                workflowTitle={workflowTitle}\r\n                showError={showError}\r\n                errorMsg={errorMsg}\r\n                validateInput={validateInput}\r\n                step={step}\r\n              />\r\n            </StepWrapper>\r\n            <StepWrapper stepIndex={2} currentStep={step}>\r\n              <AIStep2\r\n                setWorkflowDesc={setWorkflowDesc}\r\n                workflowDesc={workflowDesc}\r\n                showError={showError}\r\n                errorMsg={errorMsg}\r\n                validateInput={validateInput}\r\n                step={step}\r\n              />\r\n            </StepWrapper>\r\n            <StepWrapper stepIndex={3} currentStep={step}>\r\n              <AIStep3\r\n                targetAudience={targetAudience}\r\n                setTargetAudience={setTargetAudience}\r\n                showError={showError}\r\n                errorMsg={errorMsg}\r\n                validateInput={validateInput}\r\n                step={step}\r\n                setStep={setStep}\r\n              />\r\n            </StepWrapper>\r\n            <StepWrapper stepIndex={4} currentStep={step}>\r\n              <AIStep4\r\n                handleSkip={handleNext}\r\n                setSelectStyle={setSelectStyle}\r\n                selectStyle={selectStyle}\r\n              />\r\n            </StepWrapper>\r\n            <StepWrapper stepIndex={5} currentStep={step}>\r\n              <AIStep5\r\n                handleSkip={handleNext}\r\n                setTouchPoints={setTouchPoints}\r\n                touchPoints={touchPoints}\r\n              />\r\n            </StepWrapper>\r\n            <StepWrapper stepIndex={6} currentStep={step}>\r\n              <AIStep6\r\n                activeFlow={activeFlow}\r\n                setActiveFlow={setActiveFlow}\r\n                setActions={setActions}\r\n                campaignTrigger={campaignTrigger}\r\n                setCampaignTrigger={setCampaignTrigger}\r\n              />\r\n            </StepWrapper>\r\n            <StepWrapper stepIndex={7} currentStep={step}>\r\n              <AIStep7\r\n                triggers={triggers}\r\n                setTriggers={setTriggers}\r\n                actions={actions}\r\n                setActions={setActions}\r\n                apps={apps}\r\n                setApps={setApps}\r\n                activeFlow={activeFlow}\r\n                campaignTrigger={campaignTrigger}\r\n              />\r\n            </StepWrapper>\r\n            <StepWrapper stepIndex={8} currentStep={step}>\r\n              <AIStep8\r\n                setInputRequirement={setInputRequirement}\r\n                inputRequirement={inputRequirement}\r\n                generateBot={generateBot}\r\n                loader={loader}\r\n                showError={showError}\r\n                errorMsg={errorMsg}\r\n                validateInput={validateInput}\r\n                step={step}\r\n                debug={debug}\r\n                customPrompt={customPrompt}\r\n                setCustomPrompt={setCustomPrompt}\r\n                customNodes={customNodes}\r\n                setCustomNodes={setCustomNodes}\r\n                btnDisable={btnDisable}\r\n              />\r\n            </StepWrapper>\r\n            {step !== 8 && (\r\n              <button\r\n                // className={showError && errorMsg ? \"submit-steps disable-btn\" : \"submit-steps\"}\r\n                className={\r\n                  btnDisable ? \"submit-steps disable-btn\" : \"submit-steps\"\r\n                }\r\n                onClick={handleNext}\r\n              >\r\n                <svg\r\n                  width=\"12\"\r\n                  height=\"10\"\r\n                  viewBox=\"0 0 12 10\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M4.66236 9.65306C4.60832 9.70742 4.54405 9.75056 4.47328 9.77999C4.4025 9.80943 4.3266 9.82458 4.24995 9.82458C4.17329 9.82458 4.09739 9.80943 4.02662 9.77999C3.95584 9.75056 3.89158 9.70742 3.83753 9.65306L0.54403 6.35898C0.379993 6.19489 0.287842 5.97237 0.287842 5.74036C0.287842 5.50834 0.379993 5.28582 0.54403 5.12173L0.956447 4.70931C1.12053 4.54528 1.34305 4.45313 1.57507 4.45313C1.80709 4.45313 2.02961 4.54528 2.1937 4.70931L4.24995 6.76556L9.8062 1.20931C9.97028 1.04528 10.1928 0.953125 10.4248 0.953125C10.6568 0.953125 10.8794 1.04528 11.0434 1.20931L11.4559 1.62173C11.6199 1.78582 11.7121 2.00834 11.7121 2.24035C11.7121 2.47237 11.6199 2.69489 11.4559 2.85898L4.66236 9.65306Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </svg>\r\n                Submit\r\n                {/* {step === 8 ? \"Generate\" : \"Submit\"} */}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"onbording-btns\">\r\n          <div className=\"prev-ai-btn\">\r\n            <button\r\n              className={`btn-ai grid-cnt ${step === 1 && \"disable-btn\"}`}\r\n              onClick={handlePrevious}\r\n            >\r\n              <PrevIcon />\r\n            </button>\r\n          </div>\r\n          <div className=\"next-ai-btn\">\r\n            <button\r\n              className={`btn-ai  grid-cnt ${step === 8 && \"disable-btn\"}`}\r\n              onClick={handleNext}\r\n            >\r\n              <NextIcon />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewOnboarding;\r\n\r\nfunction StepWrapper({\r\n  children,\r\n  stepIndex,\r\n  currentStep,\r\n}: {\r\n  children: JSX.Element;\r\n  stepIndex: number;\r\n  currentStep: number;\r\n}) {\r\n  const activeOn = useMemo(() => {\r\n    if (stepIndex === 1) return [1, 2];\r\n    else if (stepIndex === 8) return [7, 8];\r\n    else return [stepIndex - 1, stepIndex, stepIndex + 1];\r\n  }, []);\r\n\r\n  return activeOn.includes(currentStep) ? (\r\n    <>\r\n      <div\r\n        key={stepIndex}\r\n        className={\r\n          currentStep === stepIndex\r\n            ? \"onbording-body__step onbording-body__step--active\"\r\n            : currentStep > stepIndex\r\n              ? `onbording-body__step onbording-body__step--fade onbording-body__step--up custom_up_${stepIndex}`\r\n              : `onbording-body__step onbording-body__step--fade onbording-body__step--down custom_down_${stepIndex}`\r\n        }\r\n      >\r\n        {children}\r\n      </div>\r\n    </>\r\n  ) : null;\r\n}\r\n"],"names":["AIStep1","workflowTitle","setWorkflowTitle","showError","errorMsg","validateInput","step","handleInputChange","event","value","inputRef","useRef","useEffect","jsxDEV","AIStep2","setWorkflowDesc","workflowDesc","textAreaRef","AIStep3","targetAudience","setTargetAudience","setStep","handleSkip","AIStep5","props","botTone","res","index","AIStep6","LeadsOptions","option","e","activeFlow","setActiveFlow","setActions","campaignTrigger","setCampaignTrigger","data","item","Selected","WebHookIcon","this","AudienceIcon","UserDetailsIcon","Aistep7","triggers","setTriggers","actions","apps","setApps","handleNodeSelect","key","type","TRIGGER_NODES","CheckIcon","CAMPAIGN_NODES","ACTION_NODES","APPS_NODES","NodeIcon.WebHookIcon","NodeIcon.AudienceIcon","NodeIcon.AskQuestionIcon","NodeIcon.SingleSelectIcon","NodeIcon.GetEmailIcon","NodeIcon.GetPhoneIcon","NodeIcon.GetUsernameIcon","NodeIcon.GetAddressIcon","NodeIcon.CalculateResultIcon","NodeIcon.SendMessageIcon","NodeIcon.SendEmailIcon","NodeIcon.SendSMSIcon","NodeIcon.CallApiIcon","NodeIcon.DelayActionIcon","NodeIcon.NotificationIcon","NodeIcon.WhatsappIcon","NodeIcon.ABTestingIcon","NodeIcon.ConditionIcon","NodeIcon.OpenAIIcon","NodeIcon.LinkedInIcon","AIStep8","inputRequirement","setInputRequirement","loader","generateBot","debug","customPrompt","setCustomPrompt","customNodes","setCustomNodes","btnDisable","variables","pre","cur","nodeNames","NewOnboarding","redirect","dispatch","useDispatch","navigate","useNavigate","useSelector","state","useState","userName","isLoggedIn","sessionCount","defaultComp","userOnBoardingDone","getCookie","setLoader","selectStyle","setSelectStyle","touchPoints","setTouchPoints","setShowError","setErrorMsg","setBtnDisable","deleteCookies","handlePrevious","handleNext","check","err","allowedNodes","trigger","action","app","axiosPost","userSlice","_b","_a","LogoIcon","StepWrapper","AIStep4","AIStep7","PrevIcon","NextIcon","children","stepIndex","currentStep","useMemo","Fragment"],"mappings":"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"}